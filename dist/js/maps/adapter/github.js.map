{"version":3,"sources":["adapter/node_modules/browserify/node_modules/browser-pack/_prelude.js","adapter/src/js/adapter/github/index.js","adapter/github.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","AssetPickerAdapterGithub","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","http","base","data","token","created","appConfig","github","localStorage","getItem","watch","setItem","removeItem","events","load-items","tree","get","config","username","repository","item","id","headers","Authorization","then","response","items","map","file","createItem","path","replace","name","type","bind","sort","b","nameA","toLowerCase","nameB","$dispatch","createToken","methods","login","password","callback","baseUrl","document","location","protocol","host","fingerprint","options","btoa","createAuthorization","post","note","scopes"],"mappings":"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","file":"adapter/github.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = {\n    http: {\n        base: 'https://api.github.com'\n    },\n    data: function() {\n        return {\n            // this.appConfig is not yet available here, so have to initialize it on created\n            token: null\n        };\n    },\n    created: function () {\n        this.token = this.appConfig.github.token || localStorage.getItem('github_token')\n    },\n    watch: {\n        token: function (token) {\n            if (token) {\n                localStorage.setItem('github_token', token);\n            } else if (localStorage.getItem('github_token')) {\n                localStorage.removeItem('github_token')\n            }\n        }\n    },\n    events: {\n        'load-items': function (tree) {\n            if (this.token) {\n                this.http.get(\n                    'repos/' + this.config.username + '/' + this.config.repository + '/contents/' + (tree.item ? tree.item.id : ''),\n                    {\n                        headers: {\n                            Authorization: 'token ' + this.token\n                        }\n                    }\n                ).then(\n                    function(response) {\n                        var items = response.data.map((function (file) {\n                            return this.createItem({\n                                id: file.path.replace(/^\\/+/, ''),\n                                name: file.name,\n                                type: file.type,\n                                data: file\n                            });\n                        }).bind(this));\n                        tree.items = items.sort(function (a, b) {\n                            if (a.type === 'dir' && b.type !== 'dir') {\n                                return -1;\n                            } else if (a.type !== 'dir' && b.type === 'dir') {\n                                return 1;\n                            }\n                            var nameA = a.name.toLowerCase(), nameB = b.name.toLowerCase();\n                            if (nameA < nameB)\n                                return -1;\n                            if (nameA > nameB)\n                                return 1;\n                            return 0;\n                        });\n                    },\n                    (function () {\n                        this.token = null;\n                        this.$dispatch('load-items', tree);\n                    }).bind(this)\n                );\n            } else {\n                this.createToken().then((function () {\n                    this.$dispatch('load-items', tree);\n                }).bind(this));\n            }\n        }\n    },\n    methods: {\n        createToken: function () {\n            return this.login(function (username, password, callback) {\n                var baseUrl = document.location.protocol + '//' + document.location.host,\n                    fingerprint = 'netresearch-assetpicker-github-' + baseUrl,\n                    options = {\n                        headers: {\n                            Authorization: 'Basic ' + btoa(username + ':' + password)\n                        }\n                    },\n                    createAuthorization = function () {\n                        this.http.post(\n                            'authorizations',\n                            {\n                                note: 'Repository access for ' + this.t('header.title') + ' at ' + baseUrl,\n                                scopes: ['public_repo', 'repo'],\n                                fingerprint: fingerprint\n                            },\n                            options\n                        ).then(\n                            function (response) {\n                                this.token = response.data.token;\n                                if (!this.token) {\n                                    throw 'Could not find expected this.token';\n                                }\n                                callback(true);\n                            }.bind(this)\n                        )\n                    }.bind(this);\n\n                this.http.get('authorizations', options).then(\n                    (function(response) {\n                        for (var i = 0, l = response.data.length; i < l; i++) {\n                            if (response.data[i].fingerprint === fingerprint) {\n                                this.http.delete('authorizations/' + response.data[i].id, options).then(createAuthorization);\n                                return;\n                            }\n                        }\n                        createAuthorization();\n                    }).bind(this),\n                    function () {\n                        callback(false);\n                    }\n                );\n            });\n        }\n    }\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.AssetPickerAdapterGithub = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nmodule.exports = {\n    http: {\n        base: 'https://api.github.com'\n    },\n    data: function() {\n        return {\n            // this.appConfig is not yet available here, so have to initialize it on created\n            token: null\n        };\n    },\n    created: function () {\n        this.token = this.appConfig.github.token || localStorage.getItem('github_token')\n    },\n    watch: {\n        token: function (token) {\n            if (token) {\n                localStorage.setItem('github_token', token);\n            } else if (localStorage.getItem('github_token')) {\n                localStorage.removeItem('github_token')\n            }\n        }\n    },\n    events: {\n        'load-items': function (tree) {\n            if (this.token) {\n                this.http.get(\n                    'repos/' + this.config.username + '/' + this.config.repository + '/contents/' + (tree.item ? tree.item.id : ''),\n                    {\n                        headers: {\n                            Authorization: 'token ' + this.token\n                        }\n                    }\n                ).then(\n                    function(response) {\n                        var items = response.data.map((function (file) {\n                            return this.createItem({\n                                id: file.path.replace(/^\\/+/, ''),\n                                name: file.name,\n                                type: file.type,\n                                data: file\n                            });\n                        }).bind(this));\n                        tree.items = items.sort(function (a, b) {\n                            if (a.type === 'dir' && b.type !== 'dir') {\n                                return -1;\n                            } else if (a.type !== 'dir' && b.type === 'dir') {\n                                return 1;\n                            }\n                            var nameA = a.name.toLowerCase(), nameB = b.name.toLowerCase();\n                            if (nameA < nameB)\n                                return -1;\n                            if (nameA > nameB)\n                                return 1;\n                            return 0;\n                        });\n                    },\n                    (function () {\n                        this.token = null;\n                        this.$dispatch('load-items', tree);\n                    }).bind(this)\n                );\n            } else {\n                this.createToken().then((function () {\n                    this.$dispatch('load-items', tree);\n                }).bind(this));\n            }\n        }\n    },\n    methods: {\n        createToken: function () {\n            return this.login(function (username, password, callback) {\n                var baseUrl = document.location.protocol + '//' + document.location.host,\n                    fingerprint = 'netresearch-assetpicker-github-' + baseUrl,\n                    options = {\n                        headers: {\n                            Authorization: 'Basic ' + btoa(username + ':' + password)\n                        }\n                    },\n                    createAuthorization = function () {\n                        this.http.post(\n                            'authorizations',\n                            {\n                                note: 'Repository access for ' + this.t('header.title') + ' at ' + baseUrl,\n                                scopes: ['public_repo', 'repo'],\n                                fingerprint: fingerprint\n                            },\n                            options\n                        ).then(\n                            function (response) {\n                                this.token = response.data.token;\n                                if (!this.token) {\n                                    throw 'Could not find expected this.token';\n                                }\n                                callback(true);\n                            }.bind(this)\n                        )\n                    }.bind(this);\n\n                this.http.get('authorizations', options).then(\n                    (function(response) {\n                        for (var i = 0, l = response.data.length; i < l; i++) {\n                            if (response.data[i].fingerprint === fingerprint) {\n                                this.http.delete('authorizations/' + response.data[i].id, options).then(createAuthorization);\n                                return;\n                            }\n                        }\n                        createAuthorization();\n                    }).bind(this),\n                    function () {\n                        callback(false);\n                    }\n                );\n            });\n        }\n    }\n};\n\n},{}]},{},[1])(1)\n});\n\n"],"sourceRoot":"/source/"}