{"version":3,"sources":["adapter/node_modules/browserify/node_modules/browser-pack/_prelude.js","adapter/src/js/adapter/googledrive/index.js","adapter/googledrive.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","AssetPickerAdapterGoogledrive","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","auth2","http","base","created","auth","config","email","stored","methods","loadAuth2","$promise","resolve","util","loadScript","gapi","load","init","client_id","scope","then","bind","signIn","isSignedIn","get","currentUser","open","$parent","div","$el","appendChild","document","createElement","className","button","innerHTML","attachClickHandler","console","log","getAuthResponse","removeChild","setupToken","setup","$options","params","key","api_key","headers","Authorization","token","expires_at","Date","now","user","access_token","getBasicProfile","getEmail","loadItems","q","events","load-items","tree","item","id","response","items","JSON","parse","data","files","map","createItem","name","type","mimeType"],"mappings":"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","file":"adapter/googledrive.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var auth2, requests = 0, second;\n\nmodule.exports = {\n    http: {\n        base: 'https://content.googleapis.com/drive/v3'\n    },\n    created: function () {\n        if (this.auth) {\n            this.config.email = this.auth.email;\n        }\n    },\n    stored: {\n        auth: true\n    },\n    methods: {\n        loadAuth2: function() {\n            return this.$promise(function(resolve) {\n                if (auth2) {\n                    resolve();\n                } else {\n                    this.util.loadScript('https://apis.google.com/js/platform.js', function() {\n                        gapi.load('auth2', function() {\n                            gapi.auth2.init({\n                                client_id: this.config.client_id,\n                                scope: 'https://www.googleapis.com/auth/drive.readonly'\n                            }).then(function(a) {\n                                auth2 = a;\n                                resolve();\n                            });\n                        }.bind(this));\n                    }.bind(this));\n                }\n            });\n        },\n        signIn: function () {\n            return this.$promise(function(resolve) {\n                this.loadAuth2().then(function() {\n                    if (auth2.isSignedIn.get()) {\n                        resolve(auth2.currentUser.get());\n                    } else {\n                        var open = this.$parent.open;\n                        this.$parent.open = true;\n                        var div = this.$el.appendChild(document.createElement('div'));\n                        div.className = 'panel panel-default';\n                        var button = div.appendChild(document.createElement('div'));\n                        button.className = 'btn btn-default btn-block';\n                        button.innerHTML = this.t('login.login');\n\n                        auth2.attachClickHandler(button, {}, function(currentUser) {\n                            console.log(currentUser.getAuthResponse());\n                            this.$parent.open = open;\n                            this.$el.removeChild(div);\n                            resolve(currentUser);\n                        }.bind(this));\n                    }\n                }.bind(this));\n            });\n        },\n        setupToken: function() {\n            return this.$promise(function(resolve) {\n                var setup = function() {\n                    this.$options.http.params = {key: this.config.api_key };\n                    this.$options.http.headers = {Authorization: 'Bearer ' + this.auth.token};\n                    resolve();\n                }.bind(this);\n                if (this.auth && this.auth.expires_at < Date.now()) {\n                    this.auth = null;\n                }\n                if (this.auth) {\n                    setup();\n                } else {\n                    this.signIn().then(function(user) {\n                        this.auth = {\n                            token: user.getAuthResponse().access_token,\n                            expires_at: user.getAuthResponse().expires_at,\n                            email: user.getBasicProfile().getEmail()\n                        };\n                        setup();\n                    }.bind(this));\n                }\n            });\n        },\n        loadItems: function() {\n            return this.$promise(function(resolve) {\n                this.setupToken().then(function (token) {\n                    this.http.get('files', {params: {key: this.config.api_key, q: '\\'root\\' in parents'}});\n                }.bind(this));\n            });\n        }\n    },\n    events: {\n        'load-items': function (tree) {\n            this.setupToken().then(function (token) {\n                this.http.get(\n                    'files',\n                    {\n                        params: {\n                            key: this.config.api_key,\n                            q: '\\'' + (tree.item ? tree.item.id : 'root') + '\\' in parents'\n                        }\n                    }\n                ).then(function(response) {\n                    console.log(response);\n                    tree.items = JSON.parse(response.data).files.map(function(item) {\n                        return this.createItem({\n                            id: item.id,\n                            name: item.name,\n                            type: item.mimeType === 'application/vnd.google-apps.folder' ? 'dir' : 'file',\n                            data: item\n                        });\n                    }.bind(this));\n                    console.log(tree.items);\n                });\n            }.bind(this));\n        }\n    }\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.AssetPickerAdapterGoogledrive = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar auth2, requests = 0, second;\n\nmodule.exports = {\n    http: {\n        base: 'https://content.googleapis.com/drive/v3'\n    },\n    created: function () {\n        if (this.auth) {\n            this.config.email = this.auth.email;\n        }\n    },\n    stored: {\n        auth: true\n    },\n    methods: {\n        loadAuth2: function() {\n            return this.$promise(function(resolve) {\n                if (auth2) {\n                    resolve();\n                } else {\n                    this.util.loadScript('https://apis.google.com/js/platform.js', function() {\n                        gapi.load('auth2', function() {\n                            gapi.auth2.init({\n                                client_id: this.config.client_id,\n                                scope: 'https://www.googleapis.com/auth/drive.readonly'\n                            }).then(function(a) {\n                                auth2 = a;\n                                resolve();\n                            });\n                        }.bind(this));\n                    }.bind(this));\n                }\n            });\n        },\n        signIn: function () {\n            return this.$promise(function(resolve) {\n                this.loadAuth2().then(function() {\n                    if (auth2.isSignedIn.get()) {\n                        resolve(auth2.currentUser.get());\n                    } else {\n                        var open = this.$parent.open;\n                        this.$parent.open = true;\n                        var div = this.$el.appendChild(document.createElement('div'));\n                        div.className = 'panel panel-default';\n                        var button = div.appendChild(document.createElement('div'));\n                        button.className = 'btn btn-default btn-block';\n                        button.innerHTML = this.t('login.login');\n\n                        auth2.attachClickHandler(button, {}, function(currentUser) {\n                            console.log(currentUser.getAuthResponse());\n                            this.$parent.open = open;\n                            this.$el.removeChild(div);\n                            resolve(currentUser);\n                        }.bind(this));\n                    }\n                }.bind(this));\n            });\n        },\n        setupToken: function() {\n            return this.$promise(function(resolve) {\n                var setup = function() {\n                    this.$options.http.params = {key: this.config.api_key };\n                    this.$options.http.headers = {Authorization: 'Bearer ' + this.auth.token};\n                    resolve();\n                }.bind(this);\n                if (this.auth && this.auth.expires_at < Date.now()) {\n                    this.auth = null;\n                }\n                if (this.auth) {\n                    setup();\n                } else {\n                    this.signIn().then(function(user) {\n                        this.auth = {\n                            token: user.getAuthResponse().access_token,\n                            expires_at: user.getAuthResponse().expires_at,\n                            email: user.getBasicProfile().getEmail()\n                        };\n                        setup();\n                    }.bind(this));\n                }\n            });\n        },\n        loadItems: function() {\n            return this.$promise(function(resolve) {\n                this.setupToken().then(function (token) {\n                    this.http.get('files', {params: {key: this.config.api_key, q: '\\'root\\' in parents'}});\n                }.bind(this));\n            });\n        }\n    },\n    events: {\n        'load-items': function (tree) {\n            this.setupToken().then(function (token) {\n                this.http.get(\n                    'files',\n                    {\n                        params: {\n                            key: this.config.api_key,\n                            q: '\\'' + (tree.item ? tree.item.id : 'root') + '\\' in parents'\n                        }\n                    }\n                ).then(function(response) {\n                    console.log(response);\n                    tree.items = JSON.parse(response.data).files.map(function(item) {\n                        return this.createItem({\n                            id: item.id,\n                            name: item.name,\n                            type: item.mimeType === 'application/vnd.google-apps.folder' ? 'dir' : 'file',\n                            data: item\n                        });\n                    }.bind(this));\n                    console.log(tree.items);\n                });\n            }.bind(this));\n        }\n    }\n};\n\n},{}]},{},[1])(1)\n});\n\n"],"sourceRoot":"/source/"}