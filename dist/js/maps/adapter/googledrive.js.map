{"version":3,"sources":["adapter/node_modules/browserify/node_modules/browser-pack/_prelude.js","adapter/src/js/adapter/googledrive/index.js","adapter/googledrive.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","AssetPickerAdapterGoogledrive","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","auth2","translations","description","en","de","document","spreadsheet","presentation","map","form","drawing","folder","http","base","throttle","created","auth","config","email","stored","methods","loadAuth2","$promise","resolve","util","loadScript","gapi","load","init","client_id","scope","then","bind","signIn","isSignedIn","get","currentUser","open","$parent","div","$el","appendChild","createElement","className","button","innerHTML","attachClickHandler","removeChild","setupToken","setup","$options","params","key","api_key","headers","Authorization","token","expires_at","Date","now","user","getAuthResponse","access_token","getBasicProfile","getEmail","loadItems","q","events","load-items","tree","item","id","fields","response","console","log","items","JSON","parse","data","files","typeLabel","type","mimeType","indexOf","googleType","split","pop","toUpperCase","substr","createItem","name","mediaType","icon","iconLink","iconBig","replace","undefined","label","extension","fileExtension","thumbnail","thumbnailLink"],"mappings":"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","file":"../../adapter/googledrive.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var auth2, requests = 0, second;\n\nmodule.exports = {\n    translations: {\n        description: {\n            en: 'Google Drive ({{config.email || \"Not connected\"}})',\n            de: 'Google Drive ({{config.email || \"Nicht verbunden\"}})'\n        },\n        'document': {\n            en: 'Doc',\n            de: 'Doc'\n        },\n        'spreadsheet': {\n            en: 'Spreadsheet',\n            de: 'Tabelle'\n        },\n        'presentation': {\n            en: 'Presentation',\n            de: 'PrÃ¤sentation'\n        },\n        'map': {\n            en: 'My Maps',\n            de: 'My Maps'\n        },\n        'form': {\n            en: 'Form',\n            de: 'Formular'\n        },\n        'drawing': {\n            en: 'Drawing',\n            de: 'Zeichnung'\n        },\n        'folder': {\n            en: 'Folder',\n            de: 'Ordner'\n        }\n    },\n    http: {\n        base: 'https://content.googleapis.com/drive/v3',\n        http: {\n            // Google web services by default have a limit of 1000 Requests / 100 seconds\n            // So keep 100ms meantime between all requests\n            throttle: 100\n        }\n    },\n    created: function () {\n        if (this.auth) {\n            this.config.email = this.auth.email;\n        }\n    },\n    stored: {\n        auth: true\n    },\n    methods: {\n        loadAuth2: function() {\n            return this.$promise(function(resolve) {\n                if (auth2) {\n                    resolve();\n                } else {\n                    this.util.loadScript('https://apis.google.com/js/platform.js', function() {\n                        gapi.load('auth2', function() {\n                            gapi.auth2.init({\n                                client_id: this.config.client_id,\n                                scope: 'https://www.googleapis.com/auth/drive.readonly'\n                            }).then(function(a) {\n                                auth2 = a;\n                                resolve();\n                            });\n                        }.bind(this));\n                    }.bind(this));\n                }\n            });\n        },\n        signIn: function () {\n            return this.$promise(function(resolve) {\n                this.loadAuth2().then(function() {\n                    if (auth2.isSignedIn.get()) {\n                        resolve(auth2.currentUser.get());\n                    } else {\n                        var open = this.$parent.open;\n                        this.$parent.open = true;\n                        var div = this.$el.appendChild(document.createElement('div'));\n                        div.className = 'panel panel-default';\n                        var button = div.appendChild(document.createElement('div'));\n                        button.className = 'btn btn-default btn-block';\n                        button.innerHTML = this.t('login.login');\n\n                        auth2.attachClickHandler(button, {}, function(currentUser) {\n                            this.$parent.open = open;\n                            this.$el.removeChild(div);\n                            resolve(currentUser);\n                        }.bind(this));\n                    }\n                }.bind(this));\n            });\n        },\n        setupToken: function() {\n            return this.$promise(function(resolve) {\n                var setup = function() {\n                    this.$options.http.params = {key: this.config.api_key };\n                    this.$options.http.headers = {Authorization: 'Bearer ' + this.auth.token};\n                    resolve();\n                }.bind(this);\n                if (this.auth && this.auth.expires_at < Date.now()) {\n                    this.auth = null;\n                }\n                if (this.auth) {\n                    setup();\n                } else {\n                    this.signIn().then(function(user) {\n                        this.auth = {\n                            token: user.getAuthResponse().access_token,\n                            expires_at: user.getAuthResponse().expires_at,\n                            email: user.getBasicProfile().getEmail()\n                        };\n                        setup();\n                    }.bind(this));\n                }\n            });\n        },\n        loadItems: function() {\n            return this.$promise(function(resolve) {\n                this.setupToken().then(function (token) {\n                    this.http.get('files', {params: {key: this.config.api_key, q: '\\'root\\' in parents'}});\n                }.bind(this));\n            });\n        }\n    },\n    events: {\n        'load-items': function (tree) {\n            this.setupToken().then(function (token) {\n                this.http.get(\n                    'files',\n                    {\n                        params: {\n                            key: this.config.api_key,\n                            q: '\\'' + (tree.item ? tree.item.id : 'root') + '\\' in parents and trashed = false',\n                            fields: 'files,kind'\n                        }\n                    }\n                ).then(function(response) {\n                    console.log(response);\n                    tree.items = JSON.parse(response.data).files.map(function(item) {\n                        var type = item.mimeType === 'application/vnd.google-apps.folder' ? 'dir' : 'file';\n                        var typeLabel;\n                        if (item.mimeType.indexOf('/vnd.google-apps.') > 0) {\n                            var googleType = item.mimeType.split('.').pop();\n                            typeLabel = 'Google ' + (this.t(googleType) || googleType[0].toUpperCase() + googleType.substr(1));\n                        }\n                        return this.createItem({\n                            id: item.id,\n                            name: item.name,\n                            type: type,\n                            mediaType: {\n                                icon: item.iconLink,\n                                iconBig: (type === 'file' && item.iconLink) ? item.iconLink.replace(/\\/icon_[0-9]+_([^_]+)_[^\\/]+/, '/mediatype/icon_1_$1_x128.png') : undefined,\n                                label: typeLabel\n                            },\n                            extension: item.fileExtension,\n                            thumbnail: item.thumbnailLink,\n                            data: item\n                        });\n                    }.bind(this));\n                    console.log(tree.items);\n                });\n            }.bind(this));\n        }\n    }\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.AssetPickerAdapterGoogledrive = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar auth2, requests = 0, second;\n\nmodule.exports = {\n    translations: {\n        description: {\n            en: 'Google Drive ({{config.email || \"Not connected\"}})',\n            de: 'Google Drive ({{config.email || \"Nicht verbunden\"}})'\n        },\n        'document': {\n            en: 'Doc',\n            de: 'Doc'\n        },\n        'spreadsheet': {\n            en: 'Spreadsheet',\n            de: 'Tabelle'\n        },\n        'presentation': {\n            en: 'Presentation',\n            de: 'PrÃ¤sentation'\n        },\n        'map': {\n            en: 'My Maps',\n            de: 'My Maps'\n        },\n        'form': {\n            en: 'Form',\n            de: 'Formular'\n        },\n        'drawing': {\n            en: 'Drawing',\n            de: 'Zeichnung'\n        },\n        'folder': {\n            en: 'Folder',\n            de: 'Ordner'\n        }\n    },\n    http: {\n        base: 'https://content.googleapis.com/drive/v3',\n        http: {\n            // Google web services by default have a limit of 1000 Requests / 100 seconds\n            // So keep 100ms meantime between all requests\n            throttle: 100\n        }\n    },\n    created: function () {\n        if (this.auth) {\n            this.config.email = this.auth.email;\n        }\n    },\n    stored: {\n        auth: true\n    },\n    methods: {\n        loadAuth2: function() {\n            return this.$promise(function(resolve) {\n                if (auth2) {\n                    resolve();\n                } else {\n                    this.util.loadScript('https://apis.google.com/js/platform.js', function() {\n                        gapi.load('auth2', function() {\n                            gapi.auth2.init({\n                                client_id: this.config.client_id,\n                                scope: 'https://www.googleapis.com/auth/drive.readonly'\n                            }).then(function(a) {\n                                auth2 = a;\n                                resolve();\n                            });\n                        }.bind(this));\n                    }.bind(this));\n                }\n            });\n        },\n        signIn: function () {\n            return this.$promise(function(resolve) {\n                this.loadAuth2().then(function() {\n                    if (auth2.isSignedIn.get()) {\n                        resolve(auth2.currentUser.get());\n                    } else {\n                        var open = this.$parent.open;\n                        this.$parent.open = true;\n                        var div = this.$el.appendChild(document.createElement('div'));\n                        div.className = 'panel panel-default';\n                        var button = div.appendChild(document.createElement('div'));\n                        button.className = 'btn btn-default btn-block';\n                        button.innerHTML = this.t('login.login');\n\n                        auth2.attachClickHandler(button, {}, function(currentUser) {\n                            this.$parent.open = open;\n                            this.$el.removeChild(div);\n                            resolve(currentUser);\n                        }.bind(this));\n                    }\n                }.bind(this));\n            });\n        },\n        setupToken: function() {\n            return this.$promise(function(resolve) {\n                var setup = function() {\n                    this.$options.http.params = {key: this.config.api_key };\n                    this.$options.http.headers = {Authorization: 'Bearer ' + this.auth.token};\n                    resolve();\n                }.bind(this);\n                if (this.auth && this.auth.expires_at < Date.now()) {\n                    this.auth = null;\n                }\n                if (this.auth) {\n                    setup();\n                } else {\n                    this.signIn().then(function(user) {\n                        this.auth = {\n                            token: user.getAuthResponse().access_token,\n                            expires_at: user.getAuthResponse().expires_at,\n                            email: user.getBasicProfile().getEmail()\n                        };\n                        setup();\n                    }.bind(this));\n                }\n            });\n        },\n        loadItems: function() {\n            return this.$promise(function(resolve) {\n                this.setupToken().then(function (token) {\n                    this.http.get('files', {params: {key: this.config.api_key, q: '\\'root\\' in parents'}});\n                }.bind(this));\n            });\n        }\n    },\n    events: {\n        'load-items': function (tree) {\n            this.setupToken().then(function (token) {\n                this.http.get(\n                    'files',\n                    {\n                        params: {\n                            key: this.config.api_key,\n                            q: '\\'' + (tree.item ? tree.item.id : 'root') + '\\' in parents and trashed = false',\n                            fields: 'files,kind'\n                        }\n                    }\n                ).then(function(response) {\n                    console.log(response);\n                    tree.items = JSON.parse(response.data).files.map(function(item) {\n                        var type = item.mimeType === 'application/vnd.google-apps.folder' ? 'dir' : 'file';\n                        var typeLabel;\n                        if (item.mimeType.indexOf('/vnd.google-apps.') > 0) {\n                            var googleType = item.mimeType.split('.').pop();\n                            typeLabel = 'Google ' + (this.t(googleType) || googleType[0].toUpperCase() + googleType.substr(1));\n                        }\n                        return this.createItem({\n                            id: item.id,\n                            name: item.name,\n                            type: type,\n                            mediaType: {\n                                icon: item.iconLink,\n                                iconBig: (type === 'file' && item.iconLink) ? item.iconLink.replace(/\\/icon_[0-9]+_([^_]+)_[^\\/]+/, '/mediatype/icon_1_$1_x128.png') : undefined,\n                                label: typeLabel\n                            },\n                            extension: item.fileExtension,\n                            thumbnail: item.thumbnailLink,\n                            data: item\n                        });\n                    }.bind(this));\n                    console.log(tree.items);\n                });\n            }.bind(this));\n        }\n    }\n};\n\n},{}]},{},[1])(1)\n});\n\n"]}