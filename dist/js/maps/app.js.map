{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/browserify/node_modules/process/browser.js","app.js","node_modules/escape-string-regexp/index.js","node_modules/extend/index.js","node_modules/fecha/fecha.js","node_modules/vue-i18n-mixin/index.js","node_modules/vue-infinite-scroll/vue-infinite-scroll.js","node_modules/vue-resource/dist/vue-resource.common.js","node_modules/vue/dist/vue.common.js","src/js/app/adapter/base.js","src/js/app/components/handle.js","src/js/app/components/items/grid.html","src/js/app/components/items/grid.js","src/js/app/components/items/index.html","src/js/app/components/items/index.js","src/js/app/components/login/index.js","src/js/app/components/login/template.html","src/js/app/components/storage/index.js","src/js/app/components/storage/template.html","src/js/app/components/tree/index.js","src/js/app/components/tree/tree.html","src/js/app/config.js","src/js/app/index.html","src/js/app/index.js","src/js/app/locales.js","src/js/app/model/item.js","src/js/app/model/pick.js","src/js/app/model/selection.js","src/js/app/util.js","src/js/shared/util/createClass.js","src/js/shared/util/messaging.js","src/js/shared/util/uid.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","AssetPickerApp","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","len","run","Item","array","noop","process","nextTick","args","Array","arguments","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","name","cwd","chdir","dir","umask","2","matchOperatorsRe","str","TypeError","replace","3","hasOwn","Object","hasOwnProperty","toStr","toString","isArray","arr","isPlainObject","obj","hasOwnConstructor","hasIsPrototypeOf","constructor","key","extend","options","src","copy","copyIsArray","clone","target","deep","4","main","shorten","sLen","newArr","substr","monthUpdate","arrName","d","v","i18n","index","indexOf","charAt","toUpperCase","toLowerCase","month","pad","val","String","fecha","token","twoDigits","threeDigits","fourDigits","word","literal","dayNames","monthNames","monthNamesShort","dayNamesShort","amPm","DoFn","D","formatFlags","dateObj","getDate","DD","Do","getDay","dd","ddd","dddd","M","getMonth","MM","MMM","MMMM","YY","getFullYear","YYYY","h","getHours","hh","H","HH","m","getMinutes","mm","getSeconds","ss","S","Math","round","getMilliseconds","SS","SSS","A","ZZ","getTimezoneOffset","floor","abs","parseFlags","day","RegExp","source","parseInt","da","Date","cent","year","hour","minute","second","millisecond","isPm","minutes","parts","match","timezoneOffset","masks","default","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","format","mask","i18nSettings","isNaN","getTime","literals","$0","$1","slice","shift","parse","dateStr","isValid","dateInfo","info","search","result","today","date","UTC","5","ready","$root","locale","$set","methods","translate","namespace","data","$options","translations","translation","split","reduce","b","console","warn","6","factory","infiniteScroll","install","Vue","directive","throttle","fn","delay","now","lastExec","timer","context","execute","diff","getScrollTop","element","max","pageYOffset","document","documentElement","scrollTop","getComputedStyle","defaultView","getScrollEventTarget","currentNode","tagName","nodeType","overflowY","parentNode","getVisibleHeight","clientHeight","getElementTop","getBoundingClientRect","top","isAttached","doBind","binded","el","scrollEventTarget","scrollListener","doCheck","bind","addEventListener","disabledExpr","getAttribute","disabled","vm","$watch","value","immediateCheck","Boolean","$get","distanceExpr","distance","Number","immediateCheckExpr","eventName","$on","force","viewportScrollTop","viewportBottom","shouldTrigger","scrollHeight","elementBottom","offsetHeight","expression","bindTryCount","tryBind","unbind","removeEventListener","use","7","Promise$2","executor","state","PENDING","undefined","deferred","promise","x","resolve","reject","Promise$1","PromiseObj","Util","util","debug","config","silent","msg","error","cb","ctx","trim","isString","isBoolean","isFunction","isObject","getPrototypeOf","isFormData","FormData","when","fulfilled","rejected","then","opts","merge","$vm","each","iterator","forEach","_merge","defaults","_assign","root","next","url","query","urlParams","keys","Url","params","expand","variables","tmpl","expanded","vars","template","operators","_","operator","values","variable","tmp","exec","getValues","separator","join","encodeReserved","modifier","isDefined","substring","encodeValue","isKeyOperator","filter","k","encodeURIComponent","map","part","test","encodeURI","transform","transforms","handler","serialize","scope","hash","plain","add","xdrClient","request","xdr","XDomainRequest","event","response","respondWith","responseText","status","statusText","abort","open","method","getUrl","onload","onerror","ontimeout","onprogress","send","getBody","cors","crossOrigin","SUPPORTS_CORS","client","emulateHTTP","requestUrl","protocol","ORIGIN_URL","host","body","emulateJSON","headers","JSON","stringify","contentType","json","text","jsonpClient","script","jsonp","callback","random","type","removeChild","createElement","async","appendChild","before","header","assign","Http","common","custom","xhrClient","xhr","XMLHttpRequest","parseHeaders","getAllResponseHeaders","progress","upload","credentials","withCredentials","setRequestHeader","row","Client","reqHandlers","pop","resHandlers","unshift","sendRequest","interceptors","Request","ok","Resource","actions","resource","action","$http","plugin","installed","http","Promise","defineProperties","$url","get","$resource","$promise","_this","RESOLVED","REJECTED","all","iterable","resolver","count","race","p$1","called","notify","reason","onResolved","onRejected","p","ie","documentMode","escape","href","port","hostname","pathname","location","classCallCheck","instance","Constructor","Response","_ref","blob","Blob","CUSTOM_HEADERS","X-Requested-With","COMMON_HEADERS","Accept","JSON_CONTENT_TYPE","Content-Type","put","post","patch","delete","save","update","remove","8","set","_isVue","_data","ob","__ob__","convert","dep","vms","_proxy","_digest","del","_unproxy","isLiteral","exp","literalValueRE","isReserved","c","charCodeAt","_toString","toNumber","parsed","toBoolean","stripQuotes","camelize","camelizeRE","toUpper","hyphenate","hyphenateRE","classify","classifyRE","toArray","list","start","ret","to","from","OBJECT_STRING","def","enumerable","defineProperty","writable","configurable","_debounce","func","wait","timestamp","later","last","cancellable","cancelled","cancel","looseEqual","Cache","limit","size","head","tail","_keymap","create","pushFilter","lastFilterIndex","tokens","filterTokenRE","processFilterArg","filters","arg","reservedArgRE","dynamic","stripped","parseDirective","hit","cache$1","inSingle","inDouble","curly","square","paren","prev","escapeRegex","regexEscapeRE","compileRegex","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","htmlRE","cache","parseText","html","first","oneTime","lastIndex","tag","tokensToExp","formatToken","single","$eval","inlineFilters","filterRE","appendWithTransition","applyTransition","beforeWithTransition","removeWithTransition","direction","op","transition","__v_trans","hooks","transitionEndEvent","_isCompiled","$parent","selector","querySelector","NODE_ENV","inDoc","node","doc","ownerDocument","parent","contains","getAttr","_attr","removeAttribute","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","prepend","firstChild","replaceChild","useCapture","getClass","classname","className","baseVal","setClass","cls","isIE9","namespaceURI","setAttribute","addClass","classList","cur","removeClass","tar","extractContent","asFragment","child","rawContent","isTemplate","isFragment","content","hasChildNodes","trimNode","createDocumentFragment","isTrimmable","lastChild","createAnchor","persist","anchor","createComment","createTextNode","__v_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","removeNodeRange","frag","onRemoved","removed","done","nodes","getOuterHTML","outerHTML","container","cloneNode","innerHTML","checkComponentAttr","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","id","is","expectedTag","_componentNameMap","isUnknownElement","mergeData","toVal","fromVal","mergeAssets","parentVal","childVal","res","guardArrayAssets","guardComponents","components","ids","guardProps","props","assets","asset","mergeOptions","mergeField","strat","strats","defaultStrat","propsData","mixins","mixin","mixinOptions","warnMissing","camelizedId","Dep","uid$1","subs","withoutConversion","shouldConvert","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","__proto__","observe","isExtensible","addVm","defineReactive","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","newVal","initMixin","_init","$el","$children","$refs","$els","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_isBeingDestroyed","_vForRemoving","_unlinkFn","_context","_scope","_frag","children","_updateRef","_callHook","_initState","_initEvents","$mount","getPathCharType","ch","formatSubPath","path","trimmed","maybeUnescapeQuote","nextChar","mode","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","raw","parsePath","pathCache","getPath","parseExpression","setPath","original","warnNonExistent","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","saveRE","wsRE","identRE","makeGetterFn","Function","compileSetter","needSet","expressionCache","isSimplePath","pathTestRE","literalValueRE$1","resetBatcherState","userQueue","has","circular","waiting","flushBatcherQueue","_again","runBatcherQueue","devtools","watcher","_maxUpdateCount","pushWatcher","q","user","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","depIds","_Set","newDepIds","prevError","twoWay","queued","shallow","traverse","seen","seenObjects","clear","isA","isO","depId","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","commentMatch","commentRE","wrap","efault","depth","prefix","suffix","nodeToFragment","textContent","clonedNode","querySelectorAll","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","shouldClone","idSelectorCache","getElementById","Fragment","linker","parentFrag","childFrags","inserted","unlink","childNodes","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","callHook","attach","shouldCallRemove","beforeRemove","detach","destroy","FragmentFactory","cid","cacheId","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","getTrackByKey","trackByKey","getValue","multi","init","selected","_value","indexOf$1","keyFilter","codes","charCode","keyCodes","keyCode","stopFilter","stopPropagation","preventFilter","preventDefault","selfFilter","currentTarget","normalize","prop","propCache","camel","upper","testEl","prefixed","prefixes","style","kebab","camelPrefixes","normalize$1","_key","callActivateHooks","total","compileProps","propOptions","attr","names","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","settablePathRE","parentPath","lowerCaseName","required","makePropsLinkFn","_props","inlineProps","initProp","_bindDir","propDef","processPropValue","rawValue","isSimple","getPropDefaultValue","coerceProp","coerced","assertProp","updateProp","valid","expectedTypes","assertedType","assertType","expectedType","formatType","formatValue","validator","coerce","pushJob","job","queue$1","flush","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","TYPE_TRANSITION","TYPE_ANIMATION","isHidden","rect","width","height","offsetWidth","getClientRects","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","isScript","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","sort","directiveComparator","_bind","descriptor","priority","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","$remove","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","onRE","plural","selfDirs","compileTextNode","compileElement","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","directives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","component","ref","internalDirectives","modifiers","componentLinkFn","skip","previousElementSibling","matched","dirName","rawName","termDef","j","modifierRE","dirAttrRE","DEFAULT_TERMINAL_PRIORITY","parseModifiers","pushDir","interpTokens","hasOneTimeToken","hasOneTime","interp","dirDef","some","transitionRE","bindRE","makeNodeLinkFn","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","resolveSlots","contents","_slotContents","extractFragment","stateMixin","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","dataFn","oldData","removeVm","computed","userDef","metas","_meta","eventsMixin","registerComponentEvents","eventRE","_fromParent","registerCallbacks","handlers","register","onAttached","callAttach","onDetached","callDetach","events","watch","_initDOMHooks","hook","$emit","noop$1","Directive","_locked","_bound","_listeners","_host","_vue_directives","lifecycleMixin","refs","_compile","_initElement","rootLinker","contentLinkFn","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","_destroy","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","$destroy","teardown","$off","miscMixin","_applyFilters","oldValue","write","offset","read","_resolveComponent","resolved","requested","pendingCallbacks","cbs","dataAPI","clean","asStatement","$arguments","$delete","sync","immediate","filterRE$1","$interpolate","$log","log","domAPI","insert","op1","op2","targetIsDetached","shouldCallHook","append","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$before","$after","inDocument","realCb","eventsAPI","modifyListenerCount","hookRE","$once","splice","isSource","shouldPropagate","hasParentCbs","$broadcast","$dispatch","lifecycleAPI","$compile","limitBy","filterBy","delimiter","convertArray","item","$value","$key","orderBy","baseCompare","sortKeyIndex","sortKey","sortKeys","order","comparator","firstArg","installGlobalAPI","createClass","elementDirectives","transitions","partials","compiler","parsers","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","definition","inBrowser","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","navigator","userAgent","isIE","isAndroid","isIos","iosVersionMatch","iosVersion","hasMutationObserverBug","indexedDB","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","setImmediate","counter","observer","textNode","characterData","Set","entry","newer","older","returnEntry","freeze","warnExpressionErrors","_delimitersChanged","_propBindingModes","formatComponentName","hasConsole","HTMLUnknownElement","HTMLElement","optionMergeStrategies","instanceData","defaultData","created","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","activate","addSub","sub","removeSub","addDep","arrayProto","getOwnPropertyNames","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","alias","_withLock","$index","current","text$1","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","defs","symbol","image","circle","ellipse","line","polygon","polyline","placeholder","swap","_watcher","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","IF","FOR","SLOT","uid$3","vFor","inMatch","itMatch","isOption","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","model","__v_model","forceUpdate","staggerAmount","getStagger","warnDuplicate","trans","stagger","_preProcess","_postProcess","vIf","invalid","nextElementSibling","elseEl","elseFrag","elseFactory","show","toggle","display","text$2","isRange","composing","listener","focused","rawListener","hasjQuery","jQuery","afterBind","radio","checked","select","multiple","initValue","selectedIndex","checkbox","getBooleanValue","_trueValue","_falseValue","checkFilters","hasRead","hasWrite","_unbind","esc","tab","enter","space","up","right","down","on$1","acceptStatement","iframeBind","contentWindow","capture","stop","prevent","reset","importantRE","cssText","handleObject","handleSingle","isImportant","setProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","true-value","false-value","bind$1","attrValue","modelProp","setAttributeNS","cloak","for","if","vClass","cleanup","prevKeys","keepAlive","inlineTemplate","pendingComponentCb","Component","pendingRemovals","pendingRemovalCb","setComponent","invalidatePending","resolveComponent","mountComponent","unbuild","childVM","ComponentName","activateHooks","cached","getCached","newComponent","build","waitingFor","extraOptions","_isRouterView","defer","_inactive","transitionMode","bindingModes","childKey","parentKey","parentWatcher","childWatcher","transDurationProp","animDurationProp","raf","requestAnimationFrame","waitForTransitionStart","cancelPending","callHookWithCb","enterCancelled","enterNextTick","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","css","inlineStyles","computedStyles","transDuration","animDuration","onEnd","transition$1","oldId","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","unwatch","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","slot","fallback","elseBlock","digitsRE","indent","capitalize","uppercase","lowercase","currency","_currency","decimals","parseFloat","isFinite","stringified","toFixed","_int","_float","sign","pluralize","_process","9","UrlClass","fetch","storage","stored","loginDone","currentLogin","appConfig","storageKey","localStorage","getItem","removeItem","setItem","proxy","proxyUrl","$proxy","base","api","keepUrl","validate","reload","dateFormat","parseDate","createItem","login","authenticate","Login","loginHint","hint","../components/login","../config","../model/item","../util","vue","10","drag","defaultCursor","cursor","pageX","11","12","picked","fields","extension","modified","dimensions","formatTime","pages","lines","isAllowed","../../model/pick","../../util","./grid.html","13","14","layout","selection","storages","numStorages","select-item","selection.search","sword","selection.items","loading","loadMore","selectStorage","grid","../../config","../../model/selection","./grid","./index.html","vue-infinite-scroll","15","failure","username","password","submit","isLogin","./template.html","16","17","pick","candidate","load-more-items","results","18","19","escapeRegExp","entryPoint","types","doSearch","_open","deselect-items","regex","doSwitch","./tree.html","escape-string-regexp","20","21","github","extensions","language","adapters","entermediadb","googledrive","22","23","i18nMixin","scriptURL","scripts","getElementsByTagName","maximized","loaded","lang","available","userLanguage","summary","numItems","getLength","visible","handle","messaging","Messaging","registerServer","callPicker","overrideConfig","config-loaded","loadAdapters","finish-pick","baseAdapter","storageComponent","adapter","loadScript","setPickConfig","../shared/util/messaging","./adapter/base","./components/handle","./components/items","./components/storage","./components/tree","./config","./locales","./model/pick","./model/selection","./util","vue-i18n-mixin","vue-resource","24","en","de","minimize","maximize","file","category","stage","nothingFound","noItems","footer","searching","resultsOverview","full","25","thumbnail","26","conf","27","28","arrayValue","getParams","pair","decodeURIComponent","getParam","time","sec_num","hours","seconds","onreadystatechange","29","protoProps","construct","30","origin","windowObject","eventMethod","eventer","messageEvent","originalEvent","servers","_handlers","object","_createHandler","_result","postMessage","message","methodPath","./createClass","./uid","31"],"mappings":"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","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.AssetPickerApp = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],2:[function(require,module,exports){\n'use strict';\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nmodule.exports = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn str.replace(matchOperatorsRe, '\\\\$&');\n};\n\n},{}],3:[function(require,module,exports){\n'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) {/**/}\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[0],\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t} else if ((typeof target !== 'object' && typeof target !== 'function') || target == null) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = target[name];\n\t\t\t\tcopy = options[name];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\ttarget[name] = extend(deep, clone, copy);\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\n\n},{}],4:[function(require,module,exports){\n(function (main) {\n  'use strict';\n\n  /**\n   * Parse or format dates\n   * @class fecha\n   */\n  var fecha = {};\n  var token = /d{1,4}|M{1,4}|YY(?:YY)?|S{1,3}|Do|ZZ|([HhMsDm])\\1?|[aA]|\"[^\"]*\"|'[^']*'/g;\n  var twoDigits = /\\d\\d?/;\n  var threeDigits = /\\d{3}/;\n  var fourDigits = /\\d{4}/;\n  var word = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n  var literal = /\\[([^]*?)\\]/gm;\n  var noop = function () {\n  };\n\n  function shorten(arr, sLen) {\n    var newArr = [];\n    for (var i = 0, len = arr.length; i < len; i++) {\n      newArr.push(arr[i].substr(0, sLen));\n    }\n    return newArr;\n  }\n\n  function monthUpdate(arrName) {\n    return function (d, v, i18n) {\n      var index = i18n[arrName].indexOf(v.charAt(0).toUpperCase() + v.substr(1).toLowerCase());\n      if (~index) {\n        d.month = index;\n      }\n    };\n  }\n\n  function pad(val, len) {\n    val = String(val);\n    len = len || 2;\n    while (val.length < len) {\n      val = '0' + val;\n    }\n    return val;\n  }\n\n  var dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  var monthNamesShort = shorten(monthNames, 3);\n  var dayNamesShort = shorten(dayNames, 3);\n  fecha.i18n = {\n    dayNamesShort: dayNamesShort,\n    dayNames: dayNames,\n    monthNamesShort: monthNamesShort,\n    monthNames: monthNames,\n    amPm: ['am', 'pm'],\n    DoFn: function DoFn(D) {\n      return D + ['th', 'st', 'nd', 'rd'][D % 10 > 3 ? 0 : (D - D % 10 !== 10) * D % 10];\n    }\n  };\n\n  var formatFlags = {\n    D: function(dateObj) {\n      return dateObj.getDate();\n    },\n    DD: function(dateObj) {\n      return pad(dateObj.getDate());\n    },\n    Do: function(dateObj, i18n) {\n      return i18n.DoFn(dateObj.getDate());\n    },\n    d: function(dateObj) {\n      return dateObj.getDay();\n    },\n    dd: function(dateObj) {\n      return pad(dateObj.getDay());\n    },\n    ddd: function(dateObj, i18n) {\n      return i18n.dayNamesShort[dateObj.getDay()];\n    },\n    dddd: function(dateObj, i18n) {\n      return i18n.dayNames[dateObj.getDay()];\n    },\n    M: function(dateObj) {\n      return dateObj.getMonth() + 1;\n    },\n    MM: function(dateObj) {\n      return pad(dateObj.getMonth() + 1);\n    },\n    MMM: function(dateObj, i18n) {\n      return i18n.monthNamesShort[dateObj.getMonth()];\n    },\n    MMMM: function(dateObj, i18n) {\n      return i18n.monthNames[dateObj.getMonth()];\n    },\n    YY: function(dateObj) {\n      return String(dateObj.getFullYear()).substr(2);\n    },\n    YYYY: function(dateObj) {\n      return dateObj.getFullYear();\n    },\n    h: function(dateObj) {\n      return dateObj.getHours() % 12 || 12;\n    },\n    hh: function(dateObj) {\n      return pad(dateObj.getHours() % 12 || 12);\n    },\n    H: function(dateObj) {\n      return dateObj.getHours();\n    },\n    HH: function(dateObj) {\n      return pad(dateObj.getHours());\n    },\n    m: function(dateObj) {\n      return dateObj.getMinutes();\n    },\n    mm: function(dateObj) {\n      return pad(dateObj.getMinutes());\n    },\n    s: function(dateObj) {\n      return dateObj.getSeconds();\n    },\n    ss: function(dateObj) {\n      return pad(dateObj.getSeconds());\n    },\n    S: function(dateObj) {\n      return Math.round(dateObj.getMilliseconds() / 100);\n    },\n    SS: function(dateObj) {\n      return pad(Math.round(dateObj.getMilliseconds() / 10), 2);\n    },\n    SSS: function(dateObj) {\n      return pad(dateObj.getMilliseconds(), 3);\n    },\n    a: function(dateObj, i18n) {\n      return dateObj.getHours() < 12 ? i18n.amPm[0] : i18n.amPm[1];\n    },\n    A: function(dateObj, i18n) {\n      return dateObj.getHours() < 12 ? i18n.amPm[0].toUpperCase() : i18n.amPm[1].toUpperCase();\n    },\n    ZZ: function(dateObj) {\n      var o = dateObj.getTimezoneOffset();\n      return (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4);\n    }\n  };\n\n  var parseFlags = {\n    D: [twoDigits, function (d, v) {\n      d.day = v;\n    }],\n    Do: [new RegExp(twoDigits.source + word.source), function (d, v) {\n      d.day = parseInt(v, 10);\n    }],\n    M: [twoDigits, function (d, v) {\n      d.month = v - 1;\n    }],\n    YY: [twoDigits, function (d, v) {\n      var da = new Date(), cent = +('' + da.getFullYear()).substr(0, 2);\n      d.year = '' + (v > 68 ? cent - 1 : cent) + v;\n    }],\n    h: [twoDigits, function (d, v) {\n      d.hour = v;\n    }],\n    m: [twoDigits, function (d, v) {\n      d.minute = v;\n    }],\n    s: [twoDigits, function (d, v) {\n      d.second = v;\n    }],\n    YYYY: [fourDigits, function (d, v) {\n      d.year = v;\n    }],\n    S: [/\\d/, function (d, v) {\n      d.millisecond = v * 100;\n    }],\n    SS: [/\\d{2}/, function (d, v) {\n      d.millisecond = v * 10;\n    }],\n    SSS: [threeDigits, function (d, v) {\n      d.millisecond = v;\n    }],\n    d: [twoDigits, noop],\n    ddd: [word, noop],\n    MMM: [word, monthUpdate('monthNamesShort')],\n    MMMM: [word, monthUpdate('monthNames')],\n    a: [word, function (d, v, i18n) {\n      var val = v.toLowerCase();\n      if (val === i18n.amPm[0]) {\n        d.isPm = false;\n      } else if (val === i18n.amPm[1]) {\n        d.isPm = true;\n      }\n    }],\n    ZZ: [/[\\+\\-]\\d\\d:?\\d\\d/, function (d, v) {\n      var parts = (v + '').match(/([\\+\\-]|\\d\\d)/gi), minutes;\n\n      if (parts) {\n        minutes = +(parts[1] * 60) + parseInt(parts[2], 10);\n        d.timezoneOffset = parts[0] === '+' ? minutes : -minutes;\n      }\n    }]\n  };\n  parseFlags.dd = parseFlags.d;\n  parseFlags.dddd = parseFlags.ddd;\n  parseFlags.DD = parseFlags.D;\n  parseFlags.mm = parseFlags.m;\n  parseFlags.hh = parseFlags.H = parseFlags.HH = parseFlags.h;\n  parseFlags.MM = parseFlags.M;\n  parseFlags.ss = parseFlags.s;\n  parseFlags.A = parseFlags.a;\n\n\n  // Some common format strings\n  fecha.masks = {\n    'default': 'ddd MMM DD YYYY HH:mm:ss',\n    shortDate: 'M/D/YY',\n    mediumDate: 'MMM D, YYYY',\n    longDate: 'MMMM D, YYYY',\n    fullDate: 'dddd, MMMM D, YYYY',\n    shortTime: 'HH:mm',\n    mediumTime: 'HH:mm:ss',\n    longTime: 'HH:mm:ss.SSS'\n  };\n\n  /***\n   * Format a date\n   * @method format\n   * @param {Date|number} dateObj\n   * @param {string} mask Format of the date, i.e. 'mm-dd-yy' or 'shortDate'\n   */\n  fecha.format = function (dateObj, mask, i18nSettings) {\n    var i18n = i18nSettings || fecha.i18n;\n\n    if (typeof dateObj === 'number') {\n      dateObj = new Date(dateObj);\n    }\n\n    if (Object.prototype.toString.call(dateObj) !== '[object Date]' || isNaN(dateObj.getTime())) {\n      throw new Error('Invalid Date in fecha.format');\n    }\n\n    mask = fecha.masks[mask] || mask || fecha.masks['default'];\n\n    var literals = [];\n\n    // Make literals inactive by replacing them with ??\n    mask = mask.replace(literal, function($0, $1) {\n      literals.push($1);\n      return '??';\n    });\n    // Apply formatting rules\n    mask = mask.replace(token, function ($0) {\n      return $0 in formatFlags ? formatFlags[$0](dateObj, i18n) : $0.slice(1, $0.length - 1);\n    });\n    // Inline literal values back into the formatted value\n    return mask.replace(/\\?\\?/g, function() {\n      return literals.shift();\n    });\n  };\n\n  /**\n   * Parse a date string into an object, changes - into /\n   * @method parse\n   * @param {string} dateStr Date string\n   * @param {string} format Date parse format\n   * @returns {Date|boolean}\n   */\n  fecha.parse = function (dateStr, format, i18nSettings) {\n    var i18n = i18nSettings || fecha.i18n;\n\n    if (typeof format !== 'string') {\n      throw new Error('Invalid format in fecha.parse');\n    }\n\n    format = fecha.masks[format] || format;\n\n    // Avoid regular expression denial of service, fail early for really long strings\n    // https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS\n    if (dateStr.length > 1000) {\n      return false;\n    }\n\n    var isValid = true;\n    var dateInfo = {};\n    format.replace(token, function ($0) {\n      if (parseFlags[$0]) {\n        var info = parseFlags[$0];\n        var index = dateStr.search(info[0]);\n        if (!~index) {\n          isValid = false;\n        } else {\n          dateStr.replace(info[0], function (result) {\n            info[1](dateInfo, result, i18n);\n            dateStr = dateStr.substr(index + result.length);\n            return result;\n          });\n        }\n      }\n\n      return parseFlags[$0] ? '' : $0.slice(1, $0.length - 1);\n    });\n\n    if (!isValid) {\n      return false;\n    }\n\n    var today = new Date();\n    if (dateInfo.isPm === true && dateInfo.hour != null && +dateInfo.hour !== 12) {\n      dateInfo.hour = +dateInfo.hour + 12;\n    } else if (dateInfo.isPm === false && +dateInfo.hour === 12) {\n      dateInfo.hour = 0;\n    }\n\n    var date;\n    if (dateInfo.timezoneOffset != null) {\n      dateInfo.minute = +(dateInfo.minute || 0) - +dateInfo.timezoneOffset;\n      date = new Date(Date.UTC(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1,\n        dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0));\n    } else {\n      date = new Date(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1,\n        dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0);\n    }\n    return date;\n  };\n\n  /* istanbul ignore next */\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = fecha;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return fecha;\n    });\n  } else {\n    main.fecha = fecha;\n  }\n})(this);\n\n},{}],5:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n\n\tready: function() {\n\t\t// Make sure root locale exists\n\t\tif (!this.$root.locale)\n\t\t\tthis.$root.$set('locale', 'en');\n\t},\n\n\tmethods: {\n\t\ttranslate: function(namespace, locale) {\n\n\t\t\tlocale = locale || this.locale || this.$root.locale;\n\n\t\t\t// Fetch lang data\n\t\t\tvar data = this.$options.translations || this.$root.$options.translations;\n\n\t\t\ttry {\n\t\t\t\tvar translation = namespace.split('.').reduce(function(a, b, index) {\n\t\t\t\t\treturn typeof a === 'object' ? a[b] : data[a][b];\n\t\t\t\t})[locale];\n\t\t\t} catch(e) {\n\t\t\t\tconsole.warn('No translation found for namespace %s using locale %s (%s)', namespace, locale, e);\n\t\t\t}\n\t\t\treturn translation;\n\t\t}\n\t}\n}\n\n},{}],6:[function(require,module,exports){\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.infiniteScroll = global.infiniteScroll || {})));\n}(this, function (exports) { 'use strict';\n\n  var throttle = function throttle(fn, delay) {\n    var now, lastExec, timer, context, args; //eslint-disable-line\n\n    var execute = function execute() {\n      fn.apply(context, args);\n      lastExec = now;\n    };\n\n    return function () {\n      context = this;\n      args = arguments;\n\n      now = Date.now();\n\n      if (timer) {\n        clearTimeout(timer);\n        timer = null;\n      }\n\n      if (lastExec) {\n        var diff = delay - (now - lastExec);\n        if (diff < 0) {\n          execute();\n        } else {\n          timer = setTimeout(function () {\n            execute();\n          }, diff);\n        }\n      } else {\n        execute();\n      }\n    };\n  };\n\n  var getScrollTop = function getScrollTop(element) {\n    if (element === window) {\n      return Math.max(window.pageYOffset || 0, document.documentElement.scrollTop);\n    }\n\n    return element.scrollTop;\n  };\n\n  var getComputedStyle = document.defaultView.getComputedStyle;\n\n  var getScrollEventTarget = function getScrollEventTarget(element) {\n    var currentNode = element;\n    // bugfix, see http://w3help.org/zh-cn/causes/SD9013 and http://stackoverflow.com/questions/17016740/onscroll-function-is-not-working-for-chrome\n    while (currentNode && currentNode.tagName !== 'HTML' && currentNode.tagName !== 'BODY' && currentNode.nodeType === 1) {\n      var overflowY = getComputedStyle(currentNode).overflowY;\n      if (overflowY === 'scroll' || overflowY === 'auto') {\n        return currentNode;\n      }\n      currentNode = currentNode.parentNode;\n    }\n    return window;\n  };\n\n  var getVisibleHeight = function getVisibleHeight(element) {\n    if (element === window) {\n      return document.documentElement.clientHeight;\n    }\n\n    return element.clientHeight;\n  };\n\n  var getElementTop = function getElementTop(element) {\n    if (element === window) {\n      return getScrollTop(window);\n    }\n    return element.getBoundingClientRect().top + getScrollTop(window);\n  };\n\n  var isAttached = function isAttached(element) {\n    var currentNode = element.parentNode;\n    while (currentNode) {\n      if (currentNode.tagName === 'HTML') {\n        return true;\n      }\n      if (currentNode.nodeType === 11) {\n        return false;\n      }\n      currentNode = currentNode.parentNode;\n    }\n    return false;\n  };\n\n  var infiniteScroll = {\n    doBind: function doBind() {\n      if (this.binded) return; // eslint-disable-line\n      this.binded = true;\n\n      var directive = this;\n      var element = directive.el;\n\n      directive.scrollEventTarget = getScrollEventTarget(element);\n      directive.scrollListener = throttle(directive.doCheck.bind(directive), 200);\n      directive.scrollEventTarget.addEventListener('scroll', directive.scrollListener);\n\n      var disabledExpr = element.getAttribute('infinite-scroll-disabled');\n      var disabled = false;\n\n      if (disabledExpr) {\n        this.vm.$watch(disabledExpr, function (value) {\n          directive.disabled = value;\n          if (!value && directive.immediateCheck) {\n            directive.doCheck();\n          }\n        });\n        disabled = Boolean(directive.vm.$get(disabledExpr));\n      }\n      directive.disabled = disabled;\n\n      var distanceExpr = element.getAttribute('infinite-scroll-distance');\n      var distance = 0;\n      if (distanceExpr) {\n        distance = Number(directive.vm.$get(distanceExpr));\n        if (isNaN(distance)) {\n          distance = 0;\n        }\n      }\n      directive.distance = distance;\n\n      var immediateCheckExpr = element.getAttribute('infinite-scroll-immediate-check');\n      var immediateCheck = true;\n      if (immediateCheckExpr) {\n        immediateCheck = Boolean(directive.vm.$get(immediateCheckExpr));\n      }\n      directive.immediateCheck = immediateCheck;\n\n      if (immediateCheck) {\n        directive.doCheck();\n      }\n\n      var eventName = element.getAttribute('infinite-scroll-listen-for-event');\n      if (eventName) {\n        directive.vm.$on(eventName, function () {\n          directive.doCheck();\n        });\n      }\n    },\n\n    doCheck: function doCheck(force) {\n      var scrollEventTarget = this.scrollEventTarget;\n      var element = this.el;\n      var distance = this.distance;\n\n      if (force !== true && this.disabled) return; //eslint-disable-line\n      var viewportScrollTop = getScrollTop(scrollEventTarget);\n      var viewportBottom = viewportScrollTop + getVisibleHeight(scrollEventTarget);\n\n      var shouldTrigger = false;\n\n      if (scrollEventTarget === element) {\n        shouldTrigger = scrollEventTarget.scrollHeight - viewportBottom <= distance;\n      } else {\n        var elementBottom = getElementTop(element) - getElementTop(scrollEventTarget) + element.offsetHeight + viewportScrollTop;\n\n        shouldTrigger = viewportBottom + distance >= elementBottom;\n      }\n\n      if (shouldTrigger && this.expression) {\n        this.vm.$get(this.expression);\n      }\n    },\n\n    bind: function bind() {\n      var directive = this;\n      var element = this.el;\n\n      directive.vm.$on('hook:ready', function () {\n        if (isAttached(element)) {\n          directive.doBind();\n        }\n      });\n\n      this.bindTryCount = 0;\n\n      var tryBind = function tryBind() {\n        if (directive.bindTryCount > 10) return; //eslint-disable-line\n        directive.bindTryCount++;\n        if (isAttached(element)) {\n          directive.doBind();\n        } else {\n          setTimeout(tryBind, 50);\n        }\n      };\n\n      tryBind();\n    },\n\n    unbind: function unbind() {\n      this.scrollEventTarget.removeEventListener('scroll', this.scrollListener);\n    }\n  };\n\n  if (window.Vue) {\n    window.infiniteScroll = infiniteScroll;\n    Vue.use(install);\n  }\n\n  function install(Vue) {\n    Vue.directive('infiniteScroll', infiniteScroll);\n  }\n\n  exports.install = install;\n  exports.infiniteScroll = infiniteScroll;\n\n}));\n},{}],7:[function(require,module,exports){\n/*!\n * vue-resource v0.9.3\n * https://github.com/vuejs/vue-resource\n * Released under the MIT License.\n */\n\n'use strict';\n\n/**\n * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n */\n\nvar RESOLVED = 0;\nvar REJECTED = 1;\nvar PENDING = 2;\n\nfunction Promise$2(executor) {\n\n    this.state = PENDING;\n    this.value = undefined;\n    this.deferred = [];\n\n    var promise = this;\n\n    try {\n        executor(function (x) {\n            promise.resolve(x);\n        }, function (r) {\n            promise.reject(r);\n        });\n    } catch (e) {\n        promise.reject(e);\n    }\n}\n\nPromise$2.reject = function (r) {\n    return new Promise$2(function (resolve, reject) {\n        reject(r);\n    });\n};\n\nPromise$2.resolve = function (x) {\n    return new Promise$2(function (resolve, reject) {\n        resolve(x);\n    });\n};\n\nPromise$2.all = function all(iterable) {\n    return new Promise$2(function (resolve, reject) {\n        var count = 0,\n            result = [];\n\n        if (iterable.length === 0) {\n            resolve(result);\n        }\n\n        function resolver(i) {\n            return function (x) {\n                result[i] = x;\n                count += 1;\n\n                if (count === iterable.length) {\n                    resolve(result);\n                }\n            };\n        }\n\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$2.resolve(iterable[i]).then(resolver(i), reject);\n        }\n    });\n};\n\nPromise$2.race = function race(iterable) {\n    return new Promise$2(function (resolve, reject) {\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$2.resolve(iterable[i]).then(resolve, reject);\n        }\n    });\n};\n\nvar p$1 = Promise$2.prototype;\n\np$1.resolve = function resolve(x) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (x === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        var called = false;\n\n        try {\n            var then = x && x['then'];\n\n            if (x !== null && typeof x === 'object' && typeof then === 'function') {\n                then.call(x, function (x) {\n                    if (!called) {\n                        promise.resolve(x);\n                    }\n                    called = true;\n                }, function (r) {\n                    if (!called) {\n                        promise.reject(r);\n                    }\n                    called = true;\n                });\n                return;\n            }\n        } catch (e) {\n            if (!called) {\n                promise.reject(e);\n            }\n            return;\n        }\n\n        promise.state = RESOLVED;\n        promise.value = x;\n        promise.notify();\n    }\n};\n\np$1.reject = function reject(reason) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (reason === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        promise.state = REJECTED;\n        promise.value = reason;\n        promise.notify();\n    }\n};\n\np$1.notify = function notify() {\n    var promise = this;\n\n    nextTick(function () {\n        if (promise.state !== PENDING) {\n            while (promise.deferred.length) {\n                var deferred = promise.deferred.shift(),\n                    onResolved = deferred[0],\n                    onRejected = deferred[1],\n                    resolve = deferred[2],\n                    reject = deferred[3];\n\n                try {\n                    if (promise.state === RESOLVED) {\n                        if (typeof onResolved === 'function') {\n                            resolve(onResolved.call(undefined, promise.value));\n                        } else {\n                            resolve(promise.value);\n                        }\n                    } else if (promise.state === REJECTED) {\n                        if (typeof onRejected === 'function') {\n                            resolve(onRejected.call(undefined, promise.value));\n                        } else {\n                            reject(promise.value);\n                        }\n                    }\n                } catch (e) {\n                    reject(e);\n                }\n            }\n        }\n    });\n};\n\np$1.then = function then(onResolved, onRejected) {\n    var promise = this;\n\n    return new Promise$2(function (resolve, reject) {\n        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n        promise.notify();\n    });\n};\n\np$1.catch = function (onRejected) {\n    return this.then(undefined, onRejected);\n};\n\nvar PromiseObj = window.Promise || Promise$2;\n\nfunction Promise$1(executor, context) {\n\n    if (executor instanceof PromiseObj) {\n        this.promise = executor;\n    } else {\n        this.promise = new PromiseObj(executor.bind(context));\n    }\n\n    this.context = context;\n}\n\nPromise$1.all = function (iterable, context) {\n    return new Promise$1(PromiseObj.all(iterable), context);\n};\n\nPromise$1.resolve = function (value, context) {\n    return new Promise$1(PromiseObj.resolve(value), context);\n};\n\nPromise$1.reject = function (reason, context) {\n    return new Promise$1(PromiseObj.reject(reason), context);\n};\n\nPromise$1.race = function (iterable, context) {\n    return new Promise$1(PromiseObj.race(iterable), context);\n};\n\nvar p = Promise$1.prototype;\n\np.bind = function (context) {\n    this.context = context;\n    return this;\n};\n\np.then = function (fulfilled, rejected) {\n\n    if (fulfilled && fulfilled.bind && this.context) {\n        fulfilled = fulfilled.bind(this.context);\n    }\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    return new Promise$1(this.promise.then(fulfilled, rejected), this.context);\n};\n\np.catch = function (rejected) {\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    return new Promise$1(this.promise.catch(rejected), this.context);\n};\n\np.finally = function (callback) {\n\n    return this.then(function (value) {\n        callback.call(this);\n        return value;\n    }, function (reason) {\n        callback.call(this);\n        return PromiseObj.reject(reason);\n    });\n};\n\nvar debug = false;\nvar util = {};\nvar array = [];\nfunction Util (Vue) {\n    util = Vue.util;\n    debug = Vue.config.debug || !Vue.config.silent;\n}\n\nfunction warn(msg) {\n    if (typeof console !== 'undefined' && debug) {\n        console.warn('[VueResource warn]: ' + msg);\n    }\n}\n\nfunction error(msg) {\n    if (typeof console !== 'undefined') {\n        console.error(msg);\n    }\n}\n\nfunction nextTick(cb, ctx) {\n    return util.nextTick(cb, ctx);\n}\n\nfunction trim(str) {\n    return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nvar isArray = Array.isArray;\n\nfunction isString(val) {\n    return typeof val === 'string';\n}\n\nfunction isBoolean(val) {\n    return val === true || val === false;\n}\n\nfunction isFunction(val) {\n    return typeof val === 'function';\n}\n\nfunction isObject(obj) {\n    return obj !== null && typeof obj === 'object';\n}\n\nfunction isPlainObject(obj) {\n    return isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n}\n\nfunction isFormData(obj) {\n    return typeof FormData !== 'undefined' && obj instanceof FormData;\n}\n\nfunction when(value, fulfilled, rejected) {\n\n    var promise = Promise$1.resolve(value);\n\n    if (arguments.length < 2) {\n        return promise;\n    }\n\n    return promise.then(fulfilled, rejected);\n}\n\nfunction options(fn, obj, opts) {\n\n    opts = opts || {};\n\n    if (isFunction(opts)) {\n        opts = opts.call(obj);\n    }\n\n    return merge(fn.bind({ $vm: obj, $options: opts }), fn, { $options: opts });\n}\n\nfunction each(obj, iterator) {\n\n    var i, key;\n\n    if (typeof obj.length == 'number') {\n        for (i = 0; i < obj.length; i++) {\n            iterator.call(obj[i], obj[i], i);\n        }\n    } else if (isObject(obj)) {\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                iterator.call(obj[key], obj[key], key);\n            }\n        }\n    }\n\n    return obj;\n}\n\nvar assign = Object.assign || _assign;\n\nfunction merge(target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n        _merge(target, source, true);\n    });\n\n    return target;\n}\n\nfunction defaults(target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n\n        for (var key in source) {\n            if (target[key] === undefined) {\n                target[key] = source[key];\n            }\n        }\n    });\n\n    return target;\n}\n\nfunction _assign(target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n        _merge(target, source);\n    });\n\n    return target;\n}\n\nfunction _merge(target, source, deep) {\n    for (var key in source) {\n        if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n            if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\n                target[key] = {};\n            }\n            if (isArray(source[key]) && !isArray(target[key])) {\n                target[key] = [];\n            }\n            _merge(target[key], source[key], deep);\n        } else if (source[key] !== undefined) {\n            target[key] = source[key];\n        }\n    }\n}\n\nfunction root (options, next) {\n\n    var url = next(options);\n\n    if (isString(options.root) && !url.match(/^(https?:)?\\//)) {\n        url = options.root + '/' + url;\n    }\n\n    return url;\n}\n\nfunction query (options, next) {\n\n    var urlParams = Object.keys(Url.options.params),\n        query = {},\n        url = next(options);\n\n    each(options.params, function (value, key) {\n        if (urlParams.indexOf(key) === -1) {\n            query[key] = value;\n        }\n    });\n\n    query = Url.params(query);\n\n    if (query) {\n        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n    }\n\n    return url;\n}\n\n/**\n * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n */\n\nfunction expand(url, params, variables) {\n\n    var tmpl = parse(url),\n        expanded = tmpl.expand(params);\n\n    if (variables) {\n        variables.push.apply(variables, tmpl.vars);\n    }\n\n    return expanded;\n}\n\nfunction parse(template) {\n\n    var operators = ['+', '#', '.', '/', ';', '?', '&'],\n        variables = [];\n\n    return {\n        vars: variables,\n        expand: function (context) {\n            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n                if (expression) {\n\n                    var operator = null,\n                        values = [];\n\n                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n                        operator = expression.charAt(0);\n                        expression = expression.substr(1);\n                    }\n\n                    expression.split(/,/g).forEach(function (variable) {\n                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n                        values.push.apply(values, getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n                        variables.push(tmp[1]);\n                    });\n\n                    if (operator && operator !== '+') {\n\n                        var separator = ',';\n\n                        if (operator === '?') {\n                            separator = '&';\n                        } else if (operator !== '#') {\n                            separator = operator;\n                        }\n\n                        return (values.length !== 0 ? operator : '') + values.join(separator);\n                    } else {\n                        return values.join(',');\n                    }\n                } else {\n                    return encodeReserved(literal);\n                }\n            });\n        }\n    };\n}\n\nfunction getValues(context, operator, key, modifier) {\n\n    var value = context[key],\n        result = [];\n\n    if (isDefined(value) && value !== '') {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n            value = value.toString();\n\n            if (modifier && modifier !== '*') {\n                value = value.substring(0, parseInt(modifier, 10));\n            }\n\n            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n        } else {\n            if (modifier === '*') {\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            result.push(encodeValue(operator, value[k], k));\n                        }\n                    });\n                }\n            } else {\n                var tmp = [];\n\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        tmp.push(encodeValue(operator, value));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            tmp.push(encodeURIComponent(k));\n                            tmp.push(encodeValue(operator, value[k].toString()));\n                        }\n                    });\n                }\n\n                if (isKeyOperator(operator)) {\n                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n                } else if (tmp.length !== 0) {\n                    result.push(tmp.join(','));\n                }\n            }\n        }\n    } else {\n        if (operator === ';') {\n            result.push(encodeURIComponent(key));\n        } else if (value === '' && (operator === '&' || operator === '?')) {\n            result.push(encodeURIComponent(key) + '=');\n        } else if (value === '') {\n            result.push('');\n        }\n    }\n\n    return result;\n}\n\nfunction isDefined(value) {\n    return value !== undefined && value !== null;\n}\n\nfunction isKeyOperator(operator) {\n    return operator === ';' || operator === '&' || operator === '?';\n}\n\nfunction encodeValue(operator, value, key) {\n\n    value = operator === '+' || operator === '#' ? encodeReserved(value) : encodeURIComponent(value);\n\n    if (key) {\n        return encodeURIComponent(key) + '=' + value;\n    } else {\n        return value;\n    }\n}\n\nfunction encodeReserved(str) {\n    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n        if (!/%[0-9A-Fa-f]/.test(part)) {\n            part = encodeURI(part);\n        }\n        return part;\n    }).join('');\n}\n\nfunction template (options) {\n\n    var variables = [],\n        url = expand(options.url, options.params, variables);\n\n    variables.forEach(function (key) {\n        delete options.params[key];\n    });\n\n    return url;\n}\n\n/**\n * Service for URL templating.\n */\n\nvar ie = document.documentMode;\nvar el = document.createElement('a');\n\nfunction Url(url, params) {\n\n    var self = this || {},\n        options = url,\n        transform;\n\n    if (isString(url)) {\n        options = { url: url, params: params };\n    }\n\n    options = merge({}, Url.options, self.$options, options);\n\n    Url.transforms.forEach(function (handler) {\n        transform = factory(handler, transform, self.$vm);\n    });\n\n    return transform(options);\n}\n\n/**\n * Url options.\n */\n\nUrl.options = {\n    url: '',\n    root: null,\n    params: {}\n};\n\n/**\n * Url transforms.\n */\n\nUrl.transforms = [template, query, root];\n\n/**\n * Encodes a Url parameter string.\n *\n * @param {Object} obj\n */\n\nUrl.params = function (obj) {\n\n    var params = [],\n        escape = encodeURIComponent;\n\n    params.add = function (key, value) {\n\n        if (isFunction(value)) {\n            value = value();\n        }\n\n        if (value === null) {\n            value = '';\n        }\n\n        this.push(escape(key) + '=' + escape(value));\n    };\n\n    serialize(params, obj);\n\n    return params.join('&').replace(/%20/g, '+');\n};\n\n/**\n * Parse a URL and return its components.\n *\n * @param {String} url\n */\n\nUrl.parse = function (url) {\n\n    if (ie) {\n        el.href = url;\n        url = el.href;\n    }\n\n    el.href = url;\n\n    return {\n        href: el.href,\n        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n        port: el.port,\n        host: el.host,\n        hostname: el.hostname,\n        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n        search: el.search ? el.search.replace(/^\\?/, '') : '',\n        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n    };\n};\n\nfunction factory(handler, next, vm) {\n    return function (options) {\n        return handler.call(vm, options, next);\n    };\n}\n\nfunction serialize(params, obj, scope) {\n\n    var array = isArray(obj),\n        plain = isPlainObject(obj),\n        hash;\n\n    each(obj, function (value, key) {\n\n        hash = isObject(value) || isArray(value);\n\n        if (scope) {\n            key = scope + '[' + (plain || hash ? key : '') + ']';\n        }\n\n        if (!scope && array) {\n            params.add(value.name, value.value);\n        } else if (hash) {\n            serialize(params, value, key);\n        } else {\n            params.add(key, value);\n        }\n    });\n}\n\nfunction xdrClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var xdr = new XDomainRequest(),\n            handler = function (event) {\n\n            var response = request.respondWith(xdr.responseText, {\n                status: xdr.status,\n                statusText: xdr.statusText\n            });\n\n            resolve(response);\n        };\n\n        request.abort = function () {\n            return xdr.abort();\n        };\n\n        xdr.open(request.method, request.getUrl(), true);\n        xdr.timeout = 0;\n        xdr.onload = handler;\n        xdr.onerror = handler;\n        xdr.ontimeout = function () {};\n        xdr.onprogress = function () {};\n        xdr.send(request.getBody());\n    });\n}\n\nvar ORIGIN_URL = Url.parse(location.href);\nvar SUPPORTS_CORS = 'withCredentials' in new XMLHttpRequest();\n\nfunction cors (request, next) {\n\n    if (!isBoolean(request.crossOrigin) && crossOrigin(request)) {\n        request.crossOrigin = true;\n    }\n\n    if (request.crossOrigin) {\n\n        if (!SUPPORTS_CORS) {\n            request.client = xdrClient;\n        }\n\n        delete request.emulateHTTP;\n    }\n\n    next();\n}\n\nfunction crossOrigin(request) {\n\n    var requestUrl = Url.parse(Url(request));\n\n    return requestUrl.protocol !== ORIGIN_URL.protocol || requestUrl.host !== ORIGIN_URL.host;\n}\n\nfunction body (request, next) {\n\n    if (request.emulateJSON && isPlainObject(request.body)) {\n        request.body = Url.params(request.body);\n        request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n    }\n\n    if (isFormData(request.body)) {\n        delete request.headers['Content-Type'];\n    }\n\n    if (isPlainObject(request.body)) {\n        request.body = JSON.stringify(request.body);\n    }\n\n    next(function (response) {\n\n        var contentType = response.headers['Content-Type'];\n\n        if (isString(contentType) && contentType.indexOf('application/json') === 0) {\n\n            try {\n                response.data = response.json();\n            } catch (e) {\n                response.data = null;\n            }\n        } else {\n            response.data = response.text();\n        }\n    });\n}\n\nfunction jsonpClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var name = request.jsonp || 'callback',\n            callback = '_jsonp' + Math.random().toString(36).substr(2),\n            body = null,\n            handler,\n            script;\n\n        handler = function (event) {\n\n            var status = 0;\n\n            if (event.type === 'load' && body !== null) {\n                status = 200;\n            } else if (event.type === 'error') {\n                status = 404;\n            }\n\n            resolve(request.respondWith(body, { status: status }));\n\n            delete window[callback];\n            document.body.removeChild(script);\n        };\n\n        request.params[name] = callback;\n\n        window[callback] = function (result) {\n            body = JSON.stringify(result);\n        };\n\n        script = document.createElement('script');\n        script.src = request.getUrl();\n        script.type = 'text/javascript';\n        script.async = true;\n        script.onload = handler;\n        script.onerror = handler;\n\n        document.body.appendChild(script);\n    });\n}\n\nfunction jsonp (request, next) {\n\n    if (request.method == 'JSONP') {\n        request.client = jsonpClient;\n    }\n\n    next(function (response) {\n\n        if (request.method == 'JSONP') {\n            response.data = response.json();\n        }\n    });\n}\n\nfunction before (request, next) {\n\n    if (isFunction(request.before)) {\n        request.before.call(this, request);\n    }\n\n    next();\n}\n\n/**\n * HTTP method override Interceptor.\n */\n\nfunction method (request, next) {\n\n    if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\n        request.headers['X-HTTP-Method-Override'] = request.method;\n        request.method = 'POST';\n    }\n\n    next();\n}\n\nfunction header (request, next) {\n\n    request.method = request.method.toUpperCase();\n    request.headers = assign({}, Http.headers.common, !request.crossOrigin ? Http.headers.custom : {}, Http.headers[request.method.toLowerCase()], request.headers);\n\n    next();\n}\n\n/**\n * Timeout Interceptor.\n */\n\nfunction timeout (request, next) {\n\n    var timeout;\n\n    if (request.timeout) {\n        timeout = setTimeout(function () {\n            request.abort();\n        }, request.timeout);\n    }\n\n    next(function (response) {\n\n        clearTimeout(timeout);\n    });\n}\n\nfunction xhrClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var xhr = new XMLHttpRequest(),\n            handler = function (event) {\n\n            var response = request.respondWith('response' in xhr ? xhr.response : xhr.responseText, {\n                status: xhr.status === 1223 ? 204 : xhr.status, // IE9 status bug\n                statusText: xhr.status === 1223 ? 'No Content' : trim(xhr.statusText),\n                headers: parseHeaders(xhr.getAllResponseHeaders())\n            });\n\n            resolve(response);\n        };\n\n        request.abort = function () {\n            return xhr.abort();\n        };\n\n        xhr.open(request.method, request.getUrl(), true);\n        xhr.timeout = 0;\n        xhr.onload = handler;\n        xhr.onerror = handler;\n\n        if (request.progress) {\n            if (request.method === 'GET') {\n                xhr.addEventListener('progress', request.progress);\n            } else if (/^(POST|PUT)$/i.test(request.method)) {\n                xhr.upload.addEventListener('progress', request.progress);\n            }\n        }\n\n        if (request.credentials === true) {\n            xhr.withCredentials = true;\n        }\n\n        each(request.headers || {}, function (value, header) {\n            xhr.setRequestHeader(header, value);\n        });\n\n        xhr.send(request.getBody());\n    });\n}\n\nfunction parseHeaders(str) {\n\n    var headers = {},\n        value,\n        name,\n        i;\n\n    each(trim(str).split('\\n'), function (row) {\n\n        i = row.indexOf(':');\n        name = trim(row.slice(0, i));\n        value = trim(row.slice(i + 1));\n\n        if (headers[name]) {\n\n            if (isArray(headers[name])) {\n                headers[name].push(value);\n            } else {\n                headers[name] = [headers[name], value];\n            }\n        } else {\n\n            headers[name] = value;\n        }\n    });\n\n    return headers;\n}\n\nfunction Client (context) {\n\n    var reqHandlers = [sendRequest],\n        resHandlers = [],\n        handler;\n\n    if (!isObject(context)) {\n        context = null;\n    }\n\n    function Client(request) {\n        return new Promise$1(function (resolve) {\n\n            function exec() {\n\n                handler = reqHandlers.pop();\n\n                if (isFunction(handler)) {\n                    handler.call(context, request, next);\n                } else {\n                    warn('Invalid interceptor of type ' + typeof handler + ', must be a function');\n                    next();\n                }\n            }\n\n            function next(response) {\n\n                if (isFunction(response)) {\n\n                    resHandlers.unshift(response);\n                } else if (isObject(response)) {\n\n                    resHandlers.forEach(function (handler) {\n                        response = when(response, function (response) {\n                            return handler.call(context, response) || response;\n                        });\n                    });\n\n                    when(response, resolve);\n\n                    return;\n                }\n\n                exec();\n            }\n\n            exec();\n        }, context);\n    }\n\n    Client.use = function (handler) {\n        reqHandlers.push(handler);\n    };\n\n    return Client;\n}\n\nfunction sendRequest(request, resolve) {\n\n    var client = request.client || xhrClient;\n\n    resolve(client(request));\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n/**\n * HTTP Response.\n */\n\nvar Response = function () {\n    function Response(body, _ref) {\n        var url = _ref.url;\n        var headers = _ref.headers;\n        var status = _ref.status;\n        var statusText = _ref.statusText;\n        classCallCheck(this, Response);\n\n\n        this.url = url;\n        this.body = body;\n        this.headers = headers || {};\n        this.status = status || 0;\n        this.statusText = statusText || '';\n        this.ok = status >= 200 && status < 300;\n    }\n\n    Response.prototype.text = function text() {\n        return this.body;\n    };\n\n    Response.prototype.blob = function blob() {\n        return new Blob([this.body]);\n    };\n\n    Response.prototype.json = function json() {\n        return JSON.parse(this.body);\n    };\n\n    return Response;\n}();\n\nvar Request = function () {\n    function Request(options) {\n        classCallCheck(this, Request);\n\n\n        this.method = 'GET';\n        this.body = null;\n        this.params = {};\n        this.headers = {};\n\n        assign(this, options);\n    }\n\n    Request.prototype.getUrl = function getUrl() {\n        return Url(this);\n    };\n\n    Request.prototype.getBody = function getBody() {\n        return this.body;\n    };\n\n    Request.prototype.respondWith = function respondWith(body, options) {\n        return new Response(body, assign(options || {}, { url: this.getUrl() }));\n    };\n\n    return Request;\n}();\n\n/**\n * Service for sending network requests.\n */\n\nvar CUSTOM_HEADERS = { 'X-Requested-With': 'XMLHttpRequest' };\nvar COMMON_HEADERS = { 'Accept': 'application/json, text/plain, */*' };\nvar JSON_CONTENT_TYPE = { 'Content-Type': 'application/json;charset=utf-8' };\n\nfunction Http(options) {\n\n    var self = this || {},\n        client = Client(self.$vm);\n\n    defaults(options || {}, self.$options, Http.options);\n\n    Http.interceptors.forEach(function (handler) {\n        client.use(handler);\n    });\n\n    return client(new Request(options)).then(function (response) {\n\n        return response.ok ? response : Promise$1.reject(response);\n    }, function (response) {\n\n        if (response instanceof Error) {\n            error(response);\n        }\n\n        return Promise$1.reject(response);\n    });\n}\n\nHttp.options = {};\n\nHttp.headers = {\n    put: JSON_CONTENT_TYPE,\n    post: JSON_CONTENT_TYPE,\n    patch: JSON_CONTENT_TYPE,\n    delete: JSON_CONTENT_TYPE,\n    custom: CUSTOM_HEADERS,\n    common: COMMON_HEADERS\n};\n\nHttp.interceptors = [before, timeout, method, body, jsonp, header, cors];\n\n['get', 'delete', 'head', 'jsonp'].forEach(function (method) {\n\n    Http[method] = function (url, options) {\n        return this(assign(options || {}, { url: url, method: method }));\n    };\n});\n\n['post', 'put', 'patch'].forEach(function (method) {\n\n    Http[method] = function (url, body, options) {\n        return this(assign(options || {}, { url: url, method: method, body: body }));\n    };\n});\n\nfunction Resource(url, params, actions, options) {\n\n    var self = this || {},\n        resource = {};\n\n    actions = assign({}, Resource.actions, actions);\n\n    each(actions, function (action, name) {\n\n        action = merge({ url: url, params: params || {} }, options, action);\n\n        resource[name] = function () {\n            return (self.$http || Http)(opts(action, arguments));\n        };\n    });\n\n    return resource;\n}\n\nfunction opts(action, args) {\n\n    var options = assign({}, action),\n        params = {},\n        body;\n\n    switch (args.length) {\n\n        case 2:\n\n            params = args[0];\n            body = args[1];\n\n            break;\n\n        case 1:\n\n            if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n                body = args[0];\n            } else {\n                params = args[0];\n            }\n\n            break;\n\n        case 0:\n\n            break;\n\n        default:\n\n            throw 'Expected up to 4 arguments [params, body], got ' + args.length + ' arguments';\n    }\n\n    options.body = body;\n    options.params = assign({}, options.params, params);\n\n    return options;\n}\n\nResource.actions = {\n\n    get: { method: 'GET' },\n    save: { method: 'POST' },\n    query: { method: 'GET' },\n    update: { method: 'PUT' },\n    remove: { method: 'DELETE' },\n    delete: { method: 'DELETE' }\n\n};\n\nfunction plugin(Vue) {\n\n    if (plugin.installed) {\n        return;\n    }\n\n    Util(Vue);\n\n    Vue.url = Url;\n    Vue.http = Http;\n    Vue.resource = Resource;\n    Vue.Promise = Promise$1;\n\n    Object.defineProperties(Vue.prototype, {\n\n        $url: {\n            get: function () {\n                return options(Vue.url, this, this.$options.url);\n            }\n        },\n\n        $http: {\n            get: function () {\n                return options(Vue.http, this, this.$options.http);\n            }\n        },\n\n        $resource: {\n            get: function () {\n                return Vue.resource.bind(this);\n            }\n        },\n\n        $promise: {\n            get: function () {\n                var _this = this;\n\n                return function (executor) {\n                    return new Vue.Promise(executor, _this);\n                };\n            }\n        }\n\n    });\n}\n\nif (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(plugin);\n}\n\nmodule.exports = plugin;\n},{}],8:[function(require,module,exports){\n(function (process,global){\n/*!\n * Vue.js v1.0.26\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    if (obj._isVue) {\n      delete obj._data[key];\n      obj._digest();\n    }\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && UA.indexOf('trident') > 0;\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\nvar iosVersionMatch = isIos && UA.match(/os ([\\d_]+)/);\nvar iosVersion = iosVersionMatch && iosVersionMatch[1].split('_');\n\n// detecting iOS UIWebView by indexedDB\nvar hasMutationObserverBug = iosVersion && Number(iosVersion[0]) >= 9 && Number(iosVersion[1]) >= 3 && !window.indexedDB;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined' && !hasMutationObserverBug) {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nvar _Set = undefined;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = function () {\n    this.set = Object.create(null);\n  };\n  _Set.prototype.has = function (key) {\n    return this.set[key] !== undefined;\n  };\n  _Set.prototype.add = function (key) {\n    this.set[key] = 1;\n  };\n  _Set.prototype.clear = function () {\n    this.set = Object.create(null);\n  };\n}\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    if (this.size === this.limit) {\n      removed = this.shift();\n    }\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\nvar formatComponentName = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n\n    warn = function (msg, vm) {\n      if (hasConsole && !config.silent) {\n        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n      }\n    };\n\n    formatComponentName = function (vm) {\n      var name = vm._isVue ? vm.$options.name : vm.name;\n      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  if (!node) return false;\n  var doc = node.ownerDocument.documentElement;\n  var parent = node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        // Firefox returns unknown for some \"Interactive elements.\"\n        !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el, options);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el, options);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el, options) {\n  // dynamic syntax\n  var exp = el.getAttribute('is');\n  if (exp != null) {\n    if (resolveAsset(options, 'components', exp)) {\n      el.removeAttribute('is');\n      return { id: exp };\n    }\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  if (process.env.NODE_ENV !== 'production') {\n    if (child.propsData && !vm) {\n      warn('propsData can only be used as an instantiation option.');\n    }\n  }\n  var options = {};\n  var key;\n  if (child['extends']) {\n    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n      parent = mergeOptions(parent, mixinOptions, vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @param {Boolean} warnMissing\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id, warnMissing) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  var res = assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n  }\n  return res;\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index or target element reference.\n *\n * @param {*} item\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE: isIE,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tisIos: isIos,\n\tiosVersionMatch: iosVersionMatch,\n\tiosVersion: iosVersion,\n\thasMutationObserverBug: hasMutationObserverBug,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initData().\n    this._data = {};\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path, vm) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path, last);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path, obj);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\nfunction noop() {}\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here because the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if (e.toString().match(/unsafe-eval|CSP/)) {\n        warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n      } else {\n        warn('Invalid expression. ' + 'Generated function body: ' + body);\n      }\n    }\n    return noop;\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat literal values as paths\n  !literalValueRE$1.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue.length = 0;\n  userQueue.length = 0;\n  has = {};\n  circular = {};\n  waiting = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  var _again = true;\n\n  _function: while (_again) {\n    _again = false;\n\n    runBatcherQueue(queue);\n    runBatcherQueue(userQueue);\n    // user watchers triggered more watchers,\n    // keep flushing until it depletes\n    if (queue.length) {\n      _again = true;\n      continue _function;\n    }\n    // dev tool hook\n    /* istanbul ignore if */\n    if (devtools && config.devtools) {\n      devtools.emit('flush');\n    }\n    resetBatcherState();\n  }\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (var i = 0; i < queue.length; i++) {\n    var watcher = queue[i];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n        break;\n      }\n    }\n  }\n  queue.length = 0;\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    // push watcher into appropriate queue\n    var q = watcher.user ? userQueue : queue;\n    has[id] = q.length;\n    q.push(watcher);\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushBatcherQueue);\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nvar seenObjects = new _Set();\nfunction traverse(val, seen) {\n  var i = undefined,\n      keys = undefined;\n  if (!seen) {\n    seen = seenObjects;\n    seen.clear();\n  }\n  var isA = isArray(val);\n  var isO = isObject(val);\n  if ((isA || isO) && Object.isExtensible(val)) {\n    if (val.__ob__) {\n      var depId = val.__ob__.dep.id;\n      if (seen.has(depId)) {\n        return;\n      } else {\n        seen.add(depId);\n      }\n    }\n    if (isA) {\n      i = val.length;\n      while (i--) traverse(val[i], seen);\n    } else if (isO) {\n      keys = Object.keys(val);\n      i = keys.length;\n      while (i--) traverse(val[keys[i]], seen);\n    }\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\nvar commentRE = /<!--/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n  var commentMatch = commentRE.test(templateString);\n\n  if (!tagMatch && !entityMatch && !commentMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment. However, iOS Safari has\n  // bug when using directly cloned template content with touch\n  // events and can cause crashes when the nodes are removed from DOM, so we\n  // have to treat template elements as string templates. (#2805)\n  /* istanbul ignore if */\n  if (isRealTemplate(node)) {\n    return stringToFragment(node.innerHTML);\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar IF = 2100;\nvar FOR = 2200;\nvar SLOT = 2300;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      var target = prevEl.nextSibling;\n      /* istanbul ignore if */\n      if (!target) {\n        // reset end anchor position in case the position was messed up\n        // by an external drag-n-drop library.\n        after(this.end, prevEl);\n        target = this.end;\n      }\n      frag.before(target);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = getTrackByKey(index, key, value, trackByKey);\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else if (Object.isExtensible(value)) {\n        def(value, id, frag);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * watcher's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\n/**\n * Get the track by key for an item.\n *\n * @param {Number} index\n * @param {String} key\n * @param {*} value\n * @param {String} [trackByKey]\n */\n\nfunction getTrackByKey(index, key, value, trackByKey) {\n  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    // #3029 only update when the value changes. This prevent\n    // browsers from overwriting values like selectionStart\n    value = _toString(value);\n    if (value !== this.el.value) this.el.value = value;\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var _this = this;\n\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', function () {\n      nextTick(_this.forceUpdate);\n    });\n    if (!inDoc(el)) {\n      nextTick(this.forceUpdate);\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n        }\n        value = value.replace(importantRE, '').trim();\n        this.el.style.setProperty(prop.kebab, value, isImportant);\n      } else {\n        this.el.style[prop.camel] = value;\n      }\n    } else {\n      this.el.style[prop.camel] = '';\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  if (camel !== 'filter' && camel in testEl.style) {\n    return {\n      kebab: prop,\n      camel: camel\n    };\n  }\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return {\n        kebab: prefixes[i] + prop,\n        camel: prefixed\n      };\n    }\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n\n      if (el[attr] !== attrValue) {\n        el[attr] = attrValue;\n      }\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (!value) {\n      this.cleanup();\n    } else if (typeof value === 'string') {\n      this.setClass(value.trim().split(/\\s+/));\n    } else {\n      this.setClass(normalize$1(value));\n    }\n  },\n\n  setClass: function setClass(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val) {\n        apply(this.el, val, addClass);\n      }\n    }\n    this.prevKeys = value;\n  },\n\n  cleanup: function cleanup(value) {\n    var prevKeys = this.prevKeys;\n    if (!prevKeys) return;\n    var i = prevKeys.length;\n    while (i--) {\n      var key = prevKeys[i];\n      if (!value || value.indexOf(key) < 0) {\n        apply(this.el, key, removeClass);\n      }\n    }\n  }\n};\n\n/**\n * Normalize objects and arrays (potentially containing objects)\n * into array of strings.\n *\n * @param {Object|Array<String|Object>} value\n * @return {Array<String>}\n */\n\nfunction normalize$1(value) {\n  var res = [];\n  if (isArray(value)) {\n    for (var i = 0, l = value.length; i < l; i++) {\n      var _key = value[i];\n      if (_key) {\n        if (typeof _key === 'string') {\n          res.push(_key);\n        } else {\n          for (var k in _key) {\n            if (_key[k]) res.push(k);\n          }\n        }\n      }\n    }\n  } else if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) res.push(key);\n    }\n  }\n  return res;\n}\n\n/**\n * Add or remove a class/classes on an element\n *\n * @param {Element} el\n * @param {String} key The class name. This may or may not\n *                     contain a space character, in such a\n *                     case we'll deal with multiple class\n *                     names at once.\n * @param {Function} fn\n */\n\nfunction apply(el, key, fn) {\n  key = key.trim();\n  if (key.indexOf(' ') === -1) {\n    fn(el, key);\n    return;\n  }\n  // The key contains one or more space characters.\n  // Since a class name doesn't accept such characters, we\n  // treat it as multiple classes.\n  var keys = key.split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    fn(el, keys[i]);\n  }\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      this.el.removeAttribute(':is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @param {Vue} vm\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions, vm) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.', vm);\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name, vm);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var inlineProps = vm.$options.propsData;\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (inlineProps && hasOwn(inlineProps, path)) {\n        initProp(vm, prop, inlineProps[path]);\n      }if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Process a prop with a rawValue, applying necessary coersions,\n * default values & assertions and call the given callback with\n * processed value.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} rawValue\n * @param {Function} fn\n */\n\nfunction processPropValue(vm, prop, rawValue, fn) {\n  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n  var value = rawValue;\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop);\n  }\n  value = coerceProp(prop, value, vm);\n  var coerced = value !== rawValue;\n  if (!assertProp(prop, value, vm)) {\n    value = undefined;\n  }\n  if (isSimple && !coerced) {\n    withoutConversion(function () {\n      fn(value);\n    });\n  } else {\n    fn(value);\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    defineReactive(vm, prop.path, value);\n  });\n}\n\n/**\n * Update a prop's value on a vm.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction updateProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    vm[prop.path] = value;\n  });\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, prop) {\n  // no default, return undefined\n  var options = prop.options;\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n * @param {Vue} vm\n */\n\nfunction assertProp(prop, value, vm) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = !type;\n  var expectedTypes = [];\n  if (type) {\n    if (!isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n    }\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value, vm) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  if (typeof coerce === 'function') {\n    return coerce(value);\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n    return value;\n  }\n}\n\n/**\n * Assert the type of a value\n *\n * @param {*} value\n * @param {Function} type\n * @return {Object}\n */\n\nfunction assertType(value, type) {\n  var valid;\n  var expectedType;\n  if (type === String) {\n    expectedType = 'string';\n    valid = typeof value === expectedType;\n  } else if (type === Number) {\n    expectedType = 'number';\n    valid = typeof value === expectedType;\n  } else if (type === Boolean) {\n    expectedType = 'boolean';\n    valid = typeof value === expectedType;\n  } else if (type === Function) {\n    expectedType = 'function';\n    valid = typeof value === expectedType;\n  } else if (type === Object) {\n    expectedType = 'object';\n    valid = isPlainObject(value);\n  } else if (type === Array) {\n    expectedType = 'array';\n    valid = isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  };\n}\n\n/**\n * Format type for output\n *\n * @param {String} type\n * @return {String}\n */\n\nfunction formatType(type) {\n  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n}\n\n/**\n * Format value\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      updateProp(child, prop, val);\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    oldId = oldId || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    removeClass(el, oldId + '-transition');\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props, vm);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && !isScript(node)) {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = _toString(value);\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          modifiers = parseModifiers(attr.name);\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName, true);\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nfunction isScript(el) {\n  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n      value.split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.', vm.$parent);\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    var nodes = content.childNodes;\n    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n      return;\n    }\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node, true);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n    }\n    var props = this._props;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key)) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, value, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        // force the expression into a statement so that\n        // it always dynamically resolves the method to call (#2670)\n        // kinda ugly hack, but does the job.\n        value = attrs[i].value;\n        if (isSimplePath(value)) {\n          value += '.apply(this, $arguments)';\n        }\n        handler = (vm._scope || vm._context).$eval(value, true);\n        handler._fromParent = true;\n        vm.$on(name.replace(eventRE), handler);\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop$1() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop$1;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data && this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value, true);\n    }\n    /* istanbul ignore if */\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String|Array<String>|Function} ...sortKeys\n * @param {Number} [order]\n */\n\nfunction orderBy(arr) {\n  var comparator = null;\n  var sortKeys = undefined;\n  arr = convertArray(arr);\n\n  // determine order (last argument)\n  var args = toArray(arguments, 1);\n  var order = args[args.length - 1];\n  if (typeof order === 'number') {\n    order = order < 0 ? -1 : 1;\n    args = args.length > 1 ? args.slice(0, -1) : args;\n  } else {\n    order = 1;\n  }\n\n  // determine sortKeys & comparator\n  var firstArg = args[0];\n  if (!firstArg) {\n    return arr;\n  } else if (typeof firstArg === 'function') {\n    // custom comparator\n    comparator = function (a, b) {\n      return firstArg(a, b) * order;\n    };\n  } else {\n    // string keys. flatten first\n    sortKeys = Array.prototype.concat.apply([], args);\n    comparator = function (a, b, i) {\n      i = i || 0;\n      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n    };\n  }\n\n  function baseCompare(a, b, sortKeyIndex) {\n    var sortKey = sortKeys[sortKeyIndex];\n    if (sortKey) {\n      if (sortKey !== '$key') {\n        if (isObject(a) && '$value' in a) a = a.$value;\n        if (isObject(b) && '$value' in b) b = b.$value;\n      }\n      a = isObject(a) ? getPath(a, sortKey) : a;\n      b = isObject(b) ? getPath(b, sortKey) : b;\n    }\n    return a === b ? 0 : a > b ? order : -order;\n  }\n\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(comparator);\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   * @param {Number} decimals Decimal places\n   */\n\n  currency: function currency(value, _currency, decimals) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    decimals = decimals != null ? decimals : 2;\n    var stringified = Math.abs(value).toFixed(decimals);\n    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    var length = args.length;\n    if (length > 1) {\n      var index = value % 10 - 1;\n      return index in args ? args[index] : args[length - 1];\n    } else {\n      return args[0] + (value === 1 ? '' : 's');\n    }\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          if (!definition.name) {\n            definition.name = id;\n          }\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.26';\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue);\n    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n    }\n  }\n}, 0);\n\nmodule.exports = Vue;\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"_process\":1}],9:[function(require,module,exports){\nvar Vue = require('vue');\n\nvar Item = require('../model/item');\n\nvar extend = require('extend');\nvar fecha = require('fecha');\n\nVue.http.interceptors.push(function(options, next) {\n    next(function(response) {\n        response.options = options;\n    });\n});\n\nvar UrlClass = function(url) {\n    this.raw = url;\n};\nUrlClass.prototype.toString = function () {\n    return encodeURIComponent(this.raw);\n};\n\nmodule.exports = {\n    template: '<div><tree :fetch=\"fetch\"></tree></div>',\n    props: {\n        config: {\n            type: Object,\n            required: true\n        },\n        fetch: Boolean,\n        storage: {\n            type: String,\n            required: true\n        }\n    },\n    stored: {\n        // store a data variable on storage basis:\n        // token: true\n        // store something globally:\n        // token: 'github'\n    },\n    data: function() {\n        var data = {\n            loginDone: false,\n            currentLogin: null,\n            appConfig: require('../config')\n        };\n        if (!this.$options.watch) {\n            this.$options.watch = {};\n        }\n        Object.keys(this.$options.stored).forEach(function(key) {\n            var storageKey;\n            if (this.$options.stored[key] === true) {\n                storageKey = this.storage + '_local_' + key;\n            } else {\n                storageKey = this.$options.stored[key] + '_' + key;\n            }\n            data[key] = localStorage.getItem(storageKey);\n            if (data[key]) {\n                data[key] = JSON.parse(data[key]);\n            }\n            this.$options.watch[key] = function(data) {\n                if (data === null) {\n                    localStorage.removeItem(storageKey)\n                } else {\n                    localStorage.setItem(storageKey, JSON.stringify(data));\n                }\n            };\n        }.bind(this));\n        return data;\n    },\n    computed: {\n        util: function() {\n            return require('../util');\n        },\n        proxy: function () {\n            if (this.config.proxy || this.appConfig.proxy.all && this.config.proxy !== false) {\n                return (typeof this.config.proxy === 'object' ? this.config : this.appConfig).proxy;\n            }\n            return false;\n        },\n        url: function () {\n            var proxyUrl, $proxy;\n            if (this.proxy) {\n                proxyUrl = this.proxy.url;\n                $proxy = new Vue({\n                    data: { url: null }\n                });\n            }\n            return function (url, base) {\n                if (base) {\n                    url = (base + '').replace(/\\/+$/, '') + '/' + (url + '').replace(/^\\/+/, '');\n                }\n                if ($proxy) {\n                    $proxy.url = new UrlClass(url);\n                    return $proxy.$interpolate(proxyUrl);\n                }\n                return url;\n            }\n        },\n        http: function() {\n            if (this.$options.http && typeof  this.$options.http === 'function') {\n                this.$options.http = this.$options.http.call(this);\n            }\n            var api = {},\n                base = this.$options.http ? this.$options.http.base : null,\n                request = (function (options) {\n                    if (!options.keepUrl) {\n                        options.url = this.url(options.url, base);\n                        options.keepUrl = true;\n                    }\n                    if (this.proxy && this.proxy.credentials !== options.credentials) {\n                        options.credentials = this.proxy.credentials;\n                    }\n                    return this.$promise(function (resolve, reject) {\n                        this.$http(options).then(\n                            function(response) {\n                                if (response.options.validate) {\n                                    response.reload = function () {\n                                        return request(options).then(resolve, reject);\n                                    };\n                                    response.isValid = function (isValid) {\n                                        if (isValid === false) {\n                                            throw 'Invalid response';\n                                        } else {\n                                            resolve(response);\n                                        }\n                                    };\n                                    response.options.validate.call(this, response, resolve);\n                                } else {\n                                    resolve(response);\n                                }\n                            }.bind(this),\n                            reject\n                        );\n                    });\n                }).bind(this);\n\n            ['get', 'delete', 'head', 'jsonp'].forEach(function(method) {\n                api[method] = function (url, options) {\n                    options = extend({}, options);\n                    options.method = method.toUpperCase();\n                    options.url = url;\n                    return request(options);\n                }\n            });\n\n            ['post', 'put', 'patch'].forEach(function(method) {\n                api[method] = function (url, data, options) {\n                    options = extend({}, options);\n                    options.method = method.toUpperCase();\n                    options.url = url;\n                    options.body = data;\n                    return request(options);\n                }\n            });\n            return api;\n        }\n    },\n    dateFormat: undefined,\n    methods: {\n        parseDate: function (date) {\n            if (date) {\n                return fecha.parse(date, this.$options.dateFormat);\n            }\n        },\n        createItem: function (data) {\n            data.storage = this.storage;\n            return new Item(data);\n        },\n        login: function(authenticate) {\n            if (!this.currentLogin) {\n                if (this.loginDone) {\n                    throw 'Login already done';\n                }\n                var open = this.$parent.open;\n                this.$parent.open = true;\n                var Login = this.$options.components['login'];\n                var login = new Login({\n                    el: this.$el.appendChild(document.createElement('div')),\n                    parent: this\n                });\n                if (this.config.loginHint) {\n                    login.hint = this.config.loginHint;\n                }\n                this.currentLogin = login.login(authenticate.bind(this)).then((function () {\n                    this.loginDone = true;\n                    this.$parent.open = open;\n                }).bind(this));\n            }\n            return this.currentLogin;\n        }\n    },\n    components: {\n        login: require('../components/login')\n    }\n};\n\n},{\"../components/login\":15,\"../config\":21,\"../model/item\":25,\"../util\":28,\"extend\":3,\"fecha\":4,\"vue\":8}],10:[function(require,module,exports){\nmodule.exports = {\n    template: '<div></div>',\n    data: function () {\n        return {\n            x: undefined\n        };\n    },\n    ready: function () {\n        document.body.addEventListener('mousemove', this.drag);\n        var parent = this.$el.parentNode, defaultCursor = parent.style.cursor;\n        this.$el.addEventListener('mousedown', function (e) {\n            parent.style.cursor = 'col-resize';\n            var drag = function (e) {\n                this.x = e.pageX;\n            }.bind(this);\n            var leave = function () {\n                parent.style.cursor = defaultCursor;\n                parent.removeEventListener('mousemove', drag);\n                document.body.removeEventListener('mouseleave', leave);\n                document.body.removeEventListener('mouseup', leave);\n            }.bind(this);\n            parent.addEventListener('mousemove', drag);\n            document.body.addEventListener('mouseleave', leave);\n            document.body.addEventListener('mouseup', leave);\n        }.bind(this));\n    }\n};\n},{}],11:[function(require,module,exports){\nmodule.exports = '<div class=\"items-grid\">\\n    <item inline-template v-for=\"item in items | limitBy limit\" :item=\"item\" track-by=\"id\">\\n        <div v-on:click.prevent=\"select\" :title=\"title\" v-on:dblclick.prevent=\"open\" class=\"item{{selected ? \\' selected\\' : \\'\\'}}\">\\n            <span v-if=\"item.type !== \\'file\\'\" class=\"glyphicon glyphicon-folder-open{{item.type !== \\'dir\\' ? \\' item-ext\\' : \\'\\'}}\" data-ext=\"{{t(\\'types.\\'+item.type)}}\"></span>\\n            <span v-if=\"item.type === \\'file\\'\" class=\"glyphicon glyphicon-file item-ext\" data-ext=\"{{item.extension}}\"></span>\\n            <div v-if=\"item.thumbnail\" class=\"item-thumbnail\" v-bind:style=\"{backgroundImage: \\'url(\\' + item.thumbnail + \\')\\'}\"></div>\\n            <div>{{item.name}}</div>\\n        </div>\\n    </item>\\n</div>\\n';\n},{}],12:[function(require,module,exports){\nvar fecha = require('fecha');\nvar util = require('../../util');\n\nmodule.exports = {\n    template: require('./grid.html'),\n    props: {\n        items: Array,\n        storage: String,\n        limit: Number\n    },\n    components: {\n        item: {\n            props: {\n                item: Object\n            },\n            data: function () {\n                return {\n                    picked: require('../../model/pick')\n                }\n            },\n            computed: {\n                selected: function() {\n                    return this.picked.contains(this.item);\n                },\n                title: function () {\n                    var fields = {}, item = this.item;\n                    fields.type = (item.type === 'file' && item.extension ? item.extension.toUpperCase() + '-' : '') + this.t('types.' + item.type);\n                    if (item.id.split('/').pop() === item.name) {\n                        fields.path = ('/' + item.id).replace(/^\\/+/, '/');\n                    } else {\n                        fields.id = item.id;\n                    }\n                    if (item.created) {\n                        fields.created = fecha.format(item.created, this.t('date.full'));\n                    }\n                    if (item.modified && (!item.created || item.modified > item.created)) {\n                        fields.modified = fecha.format(item.modified, this.t('date.full'));\n                    }\n                    if (parseInt(item.data.width) && parseInt(item.data.height)) {\n                        fields.dimensions = item.data.width + ' x ' + item.data.height;\n                    }\n                    if (parseInt(item.data.length)) {\n                        fields.length = util.formatTime(item.data.length);\n                    }\n                    if (parseInt(item.data.pages)) {\n                        fields.pages = item.data.pages;\n                    }\n\n                    var lines = [this.item.name];\n                    for (var key in fields) {\n                        if (fields.hasOwnProperty(key)) {\n                            lines.push(this.t('descriptor.' + key) + ': ' + fields[key]);\n                        }\n                    }\n                    return lines.join('\\n');\n                }\n            },\n            detached: function() {\n                if (this.picked.contains(this.item)) {\n                    this.picked.remove(this.item);\n                }\n            },\n            methods: {\n                select: function() {\n                    this.picked.toggle(this.item);\n                },\n                open: function() {\n                    if (this.item.type === 'file' && this.picked.isAllowed(this.item)) {\n                        this.picked.add(this.item);\n                        this.$dispatch('finish-pick');\n                    } else {\n                        this.$root.$broadcast('select-item', this.item);\n                    }\n                }\n            }\n        }\n    }\n};\n\n},{\"../../model/pick\":26,\"../../util\":28,\"./grid.html\":11,\"fecha\":4}],13:[function(require,module,exports){\nmodule.exports = '<div\\n    class=\"items-container\"\\n    v-infinite-scroll=\"loadMore()\"\\n    infinite-scroll-distance=\"10\"\\n    infinite-scroll-listen-for-event=\"items-set\">\\n    <div v-if=\"selection.search && !storage\" class=\"items-search\">\\n        <div v-if=\"!$root.loading && !$root.summary.numItems && !$root.isLogin\" class=\"feedback\">{{t(\\'stage.nothingFound\\')}}</div>\\n        <template v-for=\"(storage, items) in selection.results\">\\n            <template v-if=\"items.length\">\\n                <h5>{{storages[storage].label || storage}}</h5>\\n                <div :is=\"layout\" v-ref:items :items=\"items.filter($root.visible)\" :storage=\"storage\" :limit=\"10\"></div>\\n                <span v-if=\"$refs.items && $refs.items.limit && items.filter($root.visible).length > $refs.items.limit\" v-on:click.prevent=\"selectStorage(storage)\" class=\"btn btn-link\">Show all...</span>\\n            </template>\\n        </template>\\n    </div>\\n    <div v-else>\\n        <template v-if=\"storage || selection.search\">\\n            <h5 v-if=\"selection.search && numStorages > 1\">{{storages[storage].label || storage}}</h5>\\n            <div v-if=\"!$root.loading && !$root.summary.numItems && !$root.isLogin\" class=\"feedback\">{{t(\\'stage.noItems\\')}}</div>\\n            <div :is=\"layout\" :items=\"selection.items.filter($root.visible)\" :storage=\"storage\"></div>\\n        </template>\\n        <template v-else>\\n            <div v-for=\"(storage, config) in storages\" v-on:click.prevent=\"$root.$broadcast(\\'select-item\\', {storage: storage})\" class=\"storage\">\\n                <span class=\"glyphicon glyphicon-folder-close\"></span>\\n                <h6>{{config.label || storage}}</h6>\\n                <p class=\"text-muted\">{{$interpolate(t(\\'adapters.\\' + config.adapter))}}</p>\\n            </div>\\n        </template>\\n    </div>\\n</div>\\n';\n},{}],14:[function(require,module,exports){\nmodule.exports = {\n    template: require('./index.html'),\n    directives: {infiniteScroll: require('vue-infinite-scroll').infiniteScroll},\n    props: {\n        layout: {\n            type: String,\n            default: 'grid'\n        }\n    },\n    data: function () {\n        var selection = require('../../model/selection');\n        var storages = require('../../config').storages;\n        var keys = Object.keys(storages);\n        return {\n            selection: selection,\n            storage: keys.length > 1 ? null : keys[0],\n            storages: storages,\n            numStorages: keys.length,\n            picked: require('../../model/pick')\n        }\n    },\n    events: {\n        'select-item': function (item) {\n            this.storage = item.storage;\n            return true;\n        }\n    },\n    watch: {\n        'selection.search': function (sword) {\n            this.$nextTick(function () {\n                if (sword) {\n                    this.storage = undefined;\n                }\n            });\n        },\n        'selection.items': function (items) {\n            this.storage = items.storage;\n            this.$nextTick(function () {\n                if ((!this.search || this.storage) && items && !items.loading && items.total && items.length < items.total) {\n                    this.$dispatch('items-set');\n                }\n            })\n        }\n    },\n    methods: {\n        loadMore: function () {\n            this.$root.$broadcast('load-more-items', this.selection.items);\n        },\n        selectStorage: function (storage) {\n            this.storage = storage;\n            this.selection.items = this.$get('selection.results.' + storage);\n        }\n    },\n    components: {\n        grid: require('./grid')\n    }\n};\n\n},{\"../../config\":21,\"../../model/pick\":26,\"../../model/selection\":27,\"./grid\":12,\"./index.html\":13,\"vue-infinite-scroll\":6}],15:[function(require,module,exports){\nmodule.exports = {\n    template: require('./template.html'),\n    props: {\n        failure: Boolean,\n        username: String,\n        hint: String\n    },\n    data: function() {\n        return {\n            password: null\n        }\n    },\n    methods: {\n        submit: function (username, password) {\n            this.$dispatch('login-submit', username, password);\n        },\n        login: function (authenticate) {\n            return this.$promise(function (resolve) {\n                var root = this.$root;\n                root.isLogin = true;\n                this.$on('login-submit', function (username, password) {\n                    authenticate(username, password, function (result) {\n                        if (result) {\n                            this.$remove().$destroy();\n                            root.isLogin = false;\n                            resolve();\n                        } else {\n                            this.failure = true;\n                        }\n                    }.bind(this));\n                }.bind(this));\n            });\n        }\n    }\n};\n},{\"./template.html\":16}],16:[function(require,module,exports){\nmodule.exports = '<div class=\"panel panel-primary\">\\n    <div class=\"panel-heading\">\\n        <h3 class=\"panel-title\">{{t(\\'login.login\\')}}</h3>\\n    </div>\\n    <div v-if=\"hint\" class=\"panel-footer\">{{{hint}}}</div>\\n    <div class=\"panel-body\">\\n        <form v-on:submit.prevent=\"submit(username, password)\">\\n            <div v-if=\"failure\" class=\"alert alert-danger\" role=\"alert\">{{t(\\'login.failure\\')}}</div>\\n            <div class=\"form-group\">\\n                <input v-model=\"username\" type=\"text\" class=\"form-control\" id=\"loginUsername\" placeholder=\"{{t(\\'login.username\\')}}\">\\n            </div>\\n            <div class=\"form-group\">\\n                <!-- It\\'s not possible to get the password via javascript in chrome inside iframes (http://stackoverflow.com/a/38269071), so trick off auto complete -->\\n                <input type=\"password\" style=\"position:absolute;left:-200px;top:0;\" tabindex=\"-1\">\\n                <input v-model=\"password\" type=\"password\" class=\"form-control\" id=\"loginPassword\" placeholder=\"{{t(\\'login.password\\')}}\">\\n            </div>\\n            <button type=\"submit\" class=\"btn btn-default\">{{t(\\'login.login\\')}}</button>\\n        </form>\\n    </div>\\n</div>';\n},{}],17:[function(require,module,exports){\nvar Vue = require('vue');\n\nmodule.exports = {\n    template: require('./template.html'),\n    props: {\n        storage: Object,\n        open: Boolean,\n        id: String\n    },\n    data: function () {\n        return {\n            items: null,\n            selection: require('../../model/selection'),\n            pick: require('../../model/pick'),\n            fetch: false\n        };\n    },\n    ready: function () {\n        if (this.open) {\n            this.$children[0].select();\n        }\n    },\n    events: {\n        'select-item': function(item) {\n            this.selection.search = null;\n            if (item instanceof Vue) {\n                // Triggered from sidebar\n                item.items.storage = this.id;\n                this.selection.items = item.items;\n                this.pick.candidate(item.item);\n            } else {\n                // Triggered from stage\n                if (item.storage === this.id) {\n                    this.open = true;\n                    this.$nextTick(function () {\n                        this.$broadcast('select-item', item);\n                    });\n                } else {\n                    this.$broadcast('deselect-items');\n                }\n            }\n        },\n        'load-more-items': function (results) {\n            if (results.storage === this.id) {\n                this.$broadcast('load-more-items', results);\n            }\n        }\n    },\n    watch: {\n        'selection.search': function (sword) {\n            if (sword) {\n                this.pick.candidate(null);\n                this.$broadcast('deselect-items');\n                this.$set('selection.results.' + this.id, []);\n                var results = this.$get('selection.results.' + this.id);\n                results.storage = this.id;\n                this.fetch = true;\n                this.$nextTick(function() {\n                    this.$broadcast('search', sword, results);\n                });\n            }\n        }\n    },\n    components: {\n    }\n};\n\n},{\"../../model/pick\":26,\"../../model/selection\":27,\"./template.html\":18,\"vue\":8}],18:[function(require,module,exports){\nmodule.exports = '<tree :open=\"open\" :fetch=\"fetch\" :entry-point=\"storage.label || storage.adapter\">\\n    <div :is=\"storage.adapter\" :fetch=\"fetch\" :config=\"storage\" :storage=\"id\"></div>\\n</tree>\\n';\n},{}],19:[function(require,module,exports){\nvar Vue = require('vue');\nvar escapeRegExp = require('escape-string-regexp');\n\nvar selected;\n\nVue.component('tree', {\n    template: require('./tree.html'),\n    props: {\n        item: Object,\n        open: Boolean,\n        name: String,\n        selected: Boolean,\n        fetch: Boolean,\n        entryPoint: String,\n        main: Boolean,\n        types: {\n            type: Array,\n            default: function() {\n                return ['dir']\n            }\n        },\n        items: {\n            type: Array,\n            default: function () {\n                return [];\n            }\n        }\n    },\n    data: function () {\n        return {\n            search: this.$parent.search || {\n                sword: null,\n                results: null\n            }\n        }\n    },\n    computed: {\n        prefix: function () {\n            return this.name ? this.name + '-' : '';\n        }\n    },\n    created: function () {\n        if (!this.entryPoint) {\n            this.$dispatch(this.prefix + 'load-items', this);\n        }\n    },\n    events: {\n        'search': function (sword, results) {\n            this.search.sword = sword;\n            this.search.results = results;\n            this.doSearch();\n            return true;\n        },\n        'select-item': function (item) {\n            if (item instanceof Vue) {\n                if (item.entryPoint) {\n                    this.$nextTick(function () {\n                        this.$broadcast('select-item', 'entrypoint');\n                    });\n                    return false;\n                }\n                item = item.item;\n                if (!item) {\n                    return true;\n                }\n            }\n            if (item === 'entrypoint' && !this.item && !this.entryPoint) {\n                this.select(false);\n                return false;\n            }\n            if (item && this.item && item.id === this.item.id || this.entryPoint && !item.id) {\n                this.select();\n                return false;\n            } else if (item) {\n                for (var i = 0, l = this.items.length; i < l; i++) {\n                    if (this.items[i].id === item.id) {\n                        if (!this.open && !this.entryPoint) {\n                            this.open = true;\n                            this.$nextTick(function () {\n                                this.$broadcast('select-item', item);\n                            });\n                            return false;\n                        }\n                        break;\n                    }\n                }\n            }\n            return true;\n        },\n        '_open': function () {\n            this.open = true;\n            return true;\n        },\n        'deselect-items': function () {\n            this.selected = false;\n            return true;\n        }\n    },\n    methods: {\n        doSearch: function () {\n            if (this.search.sword) {\n                var regex = new RegExp(escapeRegExp(this.search.sword), 'i');\n                for (var i = 0, l = this.items.length; i < l ; i++) {\n                    if (regex.test(this.items[i].name)) {\n                        this.search.results.push(this.items[i]);\n                    }\n                }\n            }\n        },\n        select: function (doSwitch) {\n            if (doSwitch !== false) {\n                if (selected && selected !== this) {\n                    selected.selected = false;\n                }\n                selected = this;\n            }\n            this.selected = true;\n            (this.entryPoint ? this : this.$parent).$dispatch(this.prefix + 'select-item', this);\n            this.$parent.$dispatch('_open');\n        }\n    },\n    watch: {\n        items: function (items) {\n            if (this.selected) {\n                this.$nextTick(function () {\n                    this.$parent.$dispatch(this.prefix + 'select-item', this);\n                });\n            }\n            this.$nextTick(function () {\n                this.doSearch();\n            })\n        }\n    },\n    components: []\n});\n\n},{\"./tree.html\":20,\"escape-string-regexp\":2,\"vue\":8}],20:[function(require,module,exports){\nmodule.exports = '<template v-if=\"entryPoint\">\\n    <ul class=\"tree storage\">\\n        <li>\\n            <span class=\"glyphicon glyphicon glyphicon-triangle-{{open ? \\'bottom\\' : \\'right\\'}}\" v-on:click=\"open = !open\"></span>\\n            <span class=\"item{{selected ? \\' selected\\' : \\'\\'}}\" v-on:click=\"select\">\\n            <span class=\"glyphicon glyphicon-folder-close\"></span> {{entryPoint}}</span>\\n            <div v-show=\"open\">\\n                <slot v-if=\"open || selected || fetch\">\\n                    <tree :name=\"name\" :fetch=\"fetch\"></tree>\\n                </slot>\\n            </div>\\n        </li>\\n    </ul>\\n</template>\\n<template v-else>\\n    <template v-if=\"item\">\\n        <span v-if=\"items && items.filterBy(\\'type\\', types).length\" class=\"glyphicon glyphicon glyphicon-triangle-{{open ? \\'bottom\\' : \\'right\\'}}\" v-on:click=\"open = !open\"></span>\\n        <span class=\"item{{selected ? \\' selected\\' : \\'\\'}}\" v-on:click=\"select\">\\n        <span class=\"glyphicon glyphicon-folder-close\"></span>\\n            {{item.name}}\\n        </span>\\n    </template>\\n    <div v-show=\"open || !item\">\\n        <ul v-if=\"open || !item || fetch\" class=\"{{item ? \\'\\' : \\'tree\\'}}\">\\n            <li v-for=\"item in items.filterBy(\\'type\\', types)\">\\n                <tree :item=\"item\" :name=\"name\" :fetch=\"fetch\" :types=\"types\"></tree>\\n            </li>\\n        </ul>\\n    </div>\\n</template>';\n},{}],21:[function(require,module,exports){\nmodule.exports = {\n    title: 'AssetPicker',\n    storages: {\n        /* entermediaDB: {\n            adapter: 'entermediadb',\n            url: 'http://em9.entermediadb.org/openinstitute',\n            proxy: true\n        },\n        github: {\n            adapter: 'github',\n            username: 'netresearch',\n            repository: 'assetpicker'\n        } */\n    },\n    proxy: {\n        url: 'proxy.php?to={{url}}',\n        all: false\n    },\n    github: {\n        //tokenBla: 'j2332dwedcdj33dx3jm8389xdq'\n    },\n    pick: {\n        limit: 1,\n        types: ['file'],\n        extensions: []\n    },\n    language: 'auto',\n    debug: false,\n    adapters: {\n        github: {\n            src: 'adapter/github.js',\n            name: 'AssetPickerAdapterGithub'\n        },\n        entermediadb: {\n            src: 'adapter/entermediadb.js',\n            name: 'AssetPickerAdapterEntermediadb'\n        },\n        googledrive: {\n            src: 'adapter/googledrive.js',\n            name: 'AssetPickerAdapterGoogledrive'\n        }\n    }\n};\n\n},{}],22:[function(require,module,exports){\nmodule.exports = '<div v-bind:class=\"[loaded ? \\'loaded\\' : \\'\\']\">\\n    <template v-if=\"config\">\\n        <nav class=\"navbar navbar-inverse navbar-static-top\">\\n            <div class=\"container-fluid\">\\n                <div class=\"navbar-header\">\\n                    <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-2\">\\n                        <span class=\"sr-only\">Toggle navigation</span>\\n                        <span class=\"icon-bar\"></span>\\n                        <span class=\"icon-bar\"></span>\\n                        <span class=\"icon-bar\"></span>\\n                    </button>\\n                    <a class=\"navbar-brand\" href=\"#\" v-on:click.prevent=\"$broadcast(\\'select-item\\', {}); selection.search = null\">{{config.title || t(\\'header.title\\')}}</a>\\n                </div>\\n\\n                <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-2\">\\n                    <ul class=\"nav navbar-nav navbar-right navbar-window-icons\">\\n                        <li><a v-on:click.prevent=\"maximized = !maximized\" title=\"{{t(\\'header.\\'+(maximized ? \\'min\\' : \\'max\\')+\\'imize\\')}}\"><span class=\"minmax {{maximized ? \\'min\\' : \\'max\\'}}imize\"></span></a></li>\\n                        <li><a v-on:click.prevent=\"cancel\" class=\"close-x\" title=\"{{t(\\'footer.cancel\\')}}\">&times;</a></li>\\n                    </ul>\\n                    <div class=\"navbar-form navbar-right\" role=\"search\">\\n                        <div class=\"form-group form-group-sm\">\\n                            <input type=\"text\" class=\"form-control\" v-model=\"selection.search\" placeholder=\"{{t(\\'header.search\\')}}\" debounce=\"500\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\"loader-progress{{loading ? \\' active\\' : \\'\\'}}\"></div>\\n        </nav>\\n        <div id=\"main\">\\n            <div id=\"sidebar\" :style=\"{width: $refs.handle.x + \\'px\\'}\">\\n                <div>\\n                    <storage v-for=\"(id, storage) in config.storages\" :open=\"$root.numStorages === 1\" :id=\"id\" :storage=\"storage\"></storage>\\n                </div>\\n            </div>\\n            <handle class=\"handle\" v-ref:handle></handle>\\n            <div id=\"stage\">\\n                <div v-if=\"!numStorages\">\\n                    <div class=\"alert alert-warning\" style=\"margin-top: 15px;\">No storages configured</div>\\n                </div>\\n                <items v-ref:items></items>\\n            </div>\\n        </div>\\n        <div id=\"footer\">\\n            <template v-if=\"selection.search\">\\n                <span v-if=\"loading\">{{t(\\'footer.searching\\')}}</span>\\n                <span v-if=\"summary.numItems\">{{$interpolate(t($refs.items.storage ? \\'footer.results\\' : \\'footer.resultsOverview\\'))}}</span>\\n            </template>\\n            <template v-if=\"!selection.search && $refs.items && $refs.items.storage\">\\n                <span v-if=\"loading && !summary.numItems\">{{t(\\'footer.loading\\')}}</span>\\n                <span v-if=\"summary.numItems\">{{$interpolate(t(\\'footer.items\\'))}}</span>\\n            </template>\\n\\n            <span v-if=\"!selection.search && $refs.items && !$refs.items.storage\">{{$interpolate(t(\\'footer.storages\\'))}}</span>\\n\\n            <span v-if=\"picked.length\">{{$interpolate(t(\\'footer.picked\\'))}}</span>\\n\\n            <button class=\"btn btn-sm btn-primary\" :disabled=\"!picked.length\" v-on:click=\"pick\">{{t(\\'footer.pick\\')}}</button>\\n            <button class=\"btn btn-sm btn-default\" v-on:click=\"cancel\">{{t(\\'footer.cancel\\')}}</button>\\n        </div>\\n    </template>\\n</div>';\n},{}],23:[function(require,module,exports){\nvar Vue = require('vue');\n\nVue.use(require('vue-resource'));\n\nvar i18nMixin = require('vue-i18n-mixin');\ni18nMixin.methods.t = i18nMixin.methods.translate;\nVue.mixin(i18nMixin);\n\nVue.http.interceptors.push(function(options, next) {\n    this.$root.loading++;\n    next(function(response) {\n        this.$root.loading--;\n    });\n});\n\nvar scriptURL = (function() {\n    var scripts = document.getElementsByTagName('script');\n    return scripts[scripts.length - 1].src;\n})();\n\nvar Util = require('./util');\nrequire('./components/tree');\n\nvar extend = require('extend');\n\nmodule.exports = Vue.extend({\n    template: require('./index.html'),\n    data: function () {\n        return {\n            picked: require('./model/pick'),\n            selection: require('./model/selection'),\n            maximized: false,\n            loading: 0, // In/decreased by http interceptor above\n            config: undefined,\n            loaded: false,\n            isLogin: false\n        }\n    },\n    translations: require('./locales'),\n    computed: {\n        numStorages: function () {\n            return this.config && this.config.storages ? Object.keys(this.config.storages).length : 0;\n        },\n        locale: function () {\n            var lang, available = ['en', 'de'];\n            if (!this.config || this.config.language === 'auto') {\n                lang = (navigator.language || navigator.userLanguage).replace(/^([a-z][a-z]).+$/, '$1');\n            } else {\n                lang = this.config.language;\n            }\n            if (available.indexOf(lang) < 0) {\n                lang = available[0];\n                if (this.config && this.config.language !== 'auto') {\n                    console.warn('Configured language %s is not available', this.config.language);\n                }\n            }\n            return lang;\n        },\n        summary: function () {\n            var summary = {numItems: 0, numStorages: 0},\n                getLength = function (items) {\n                    if (items.total) {\n                        var length = items.total;\n                        for (var i = 0, l = items.length; i < l; i++) {\n                            if (items[i].query !== items.query && this.visible(items[i])) {\n                                length++;\n                            }\n                        }\n                        return length;\n                    } else {\n                        return items.filter(this.visible).length;\n                    }\n                }.bind(this);\n            if (this.selection.search) {\n                for (var key in this.selection.results) {\n                    if (this.selection.results.hasOwnProperty(key)) {\n                        var l = getLength(this.selection.results[key]);\n                        summary.numItems += l;\n                        if (l > 0) {\n                            summary.numStorages++;\n                        }\n                    }\n                }\n            } else {\n                summary.numItems = getLength(this.selection.items);\n            }\n            return summary;\n        }\n    },\n    components: {\n        storage: require('./components/storage'),\n        items: require('./components/items'),\n        handle: require('./components/handle')\n    },\n    created: function () {\n        if (!this.$options.messaging && window.parent && window.parent !== window) {\n            var Messaging = require('../shared/util/messaging');\n            this.$options.messaging = new Messaging('*', window.parent);\n        }\n        var config = require('./config');\n        if (this.$options.config) {\n            extend(true, config, this.$options.config);\n        }\n        if (this.$options.messaging) {\n            this.$options.messaging.registerServer('app', this);\n            this.callPicker('getConfig').then(function(overrideConfig) {\n                extend(true, config, overrideConfig);\n                this.$dispatch('config-loaded', config);\n            }.bind(this));\n        } else {\n            this.$dispatch('config-loaded', config);\n        }\n    },\n    events: {\n        'config-loaded': function (config) {\n            Vue.config.debug = config.debug;\n            this.$set('config', config);\n            this.$nextTick(function () {\n                this.loadAdapters().then(function () {\n                    this.loaded = true;\n                    this.callPicker('_trigger', 'ready');\n                });\n            });\n            return true;\n        },\n        'finish-pick': function () {\n            this.pick();\n        }\n    },\n    watch: {\n        maximized: function (maximized) {\n            this.callPicker('_trigger', 'resize', maximized);\n        }\n    },\n    methods: {\n        loadAdapters: function () {\n            return this.$promise(function (resolve, reject) {\n                var baseAdapter = require('./adapter/base'),\n                    loadAdapters = [],\n                    loading = 0,\n                    storageComponent = this.$options.components.storage,\n                    loaded = function () {\n                        loading--;\n                        if (loading === 0) {\n                            resolve();\n                        }\n                    };\n                for (var storage in this.config.storages) {\n                    if (this.config.storages.hasOwnProperty(storage)) {\n                        var adapter = this.config.storages[storage].adapter;\n                        if (!adapter) {\n                            throw 'Missing adapter on storage ' + storage;\n                        }\n                        if (storageComponent.$options && storageComponent.$options.components[adapter]) {\n                            continue;\n                        }\n                        if (!this.config.adapters.hasOwnProperty(adapter)) {\n                            throw 'Adapter ' + adapter + ' is not configured';\n                        }\n                        if (loadAdapters.indexOf(adapter) < 0) {\n                            loadAdapters.push(adapter);\n                            loading++;\n                            (function (adapter, src, name) {\n                                if (!src.match(/^(https?:\\/\\/|\\/)/)) {\n                                    src = scriptURL.split('/').slice(0, -1).join('/') + '/' + src;\n                                }\n                                Util.loadScript(src, function () {\n                                    if (!window[name]) {\n                                        reject(name + ' could not be found');\n                                    }\n                                    window[name].extends = baseAdapter;\n                                    storageComponent.component(adapter, window[name]);\n                                    loaded();\n                                }.bind(this));\n                            }.bind(this))(adapter, this.config.adapters[adapter].src, this.config.adapters[adapter].name);\n                        }\n                    }\n                }\n            });\n        },\n        visible: function (item) {\n            return item.type !== 'file' || this.picked.isAllowed(item);\n        },\n        setPickConfig: function (config) {\n            this.config.pick = config;\n        },\n        callPicker: function(method) {\n            if (this.$options.messaging) {\n                var args = Array.prototype.slice.call(arguments, 0);\n                args[0] = 'picker.' + args[0];\n                return this.$options.messaging.call.apply(this.$options.messaging, args);\n            }\n        },\n        cancel: function() {\n            this.picked.clear();\n            this.callPicker('modal.close');\n        },\n        pick: function() {\n            this.callPicker('pick', this.picked.export());\n            this.picked.clear();\n        }\n    }\n});\n\n},{\"../shared/util/messaging\":30,\"./adapter/base\":9,\"./components/handle\":10,\"./components/items\":14,\"./components/storage\":17,\"./components/tree\":19,\"./config\":21,\"./index.html\":22,\"./locales\":24,\"./model/pick\":26,\"./model/selection\":27,\"./util\":28,\"extend\":3,\"vue\":8,\"vue-i18n-mixin\":5,\"vue-resource\":7}],24:[function(require,module,exports){\nmodule.exports = {\n    header: {\n        title: {\n            en: 'Explorer',\n            de: 'Explorer'\n        },\n        search: {\n            en: 'Search',\n            de: 'Suchen'\n        },\n        minimize: {\n            en: 'Minimize',\n            de: 'Verkleinern'\n        },\n        maximize: {\n            en: 'Maximize',\n            de: 'Maximieren'\n        }\n    },\n    login: {\n        username: {\n            en: 'User name',\n            de: 'Benutzername'\n        },\n        password: {\n            en: 'Password',\n            de: 'Passwort'\n        },\n        login: {\n            en: 'Login',\n            de: 'Anmelden'\n        },\n        failure: {\n            en: 'Your username or password were wrong',\n            de: 'Benutzername oder Passwort sind falsch'\n        }\n    },\n    types: {\n        file: {\n            en: 'File',\n            de: 'Datei'\n        },\n        dir: {\n            en: 'Directory',\n            de: 'Verzeichnis'\n        },\n        category: {\n            en: 'Category',\n            de: 'Kategorie'\n        }\n    },\n    descriptor: {\n        type: {\n            en: 'Item type',\n            de: 'Elementtyp'\n        },\n        path: {\n            en: 'Path',\n            de: 'Pfad'\n        },\n        id: {\n            en: 'ID',\n            de: 'ID'\n        },\n        dimensions: {\n            en: 'Dimensions',\n            de: 'Abmessungen'\n        },\n        created: {\n            en: 'Creation date',\n            de: 'Erstellungsdatum'\n        },\n        modified: {\n            en: 'Modification date',\n            de: 'Änderungsdatum'\n        },\n        length: {\n            en: 'Length',\n            de: 'Länge'\n        },\n        pages: {\n            en: 'Pages',\n            de: 'Seiten'\n        }\n    },\n    adapters: {\n        github: {\n            en: 'Repository {{config.username}}/{{config.repository}} on GitHub',\n            de: 'Repository {{config.username}}/{{config.repository}} auf GitHub'\n        },\n        entermediadb: {\n            en: 'EnterMediaDB on {{config.url}}',\n            de: 'EnterMediaDB auf {{config.url}}'\n        },\n        googledrive: {\n            en: 'Google Drive ({{config.email}})',\n            de: 'Google Drive ({{config.email}})'\n        }\n    },\n    stage: {\n        nothingFound: {\n            en: 'No proper results found',\n            de: 'Keine passenden Ergebnisse gefunden'\n        },\n        noItems: {\n            en: 'No items',\n            de: 'Keine Elemente'\n        }\n    },\n    footer: {\n        pick: {\n            en: 'Select',\n            de: 'Auswählen'\n        },\n        cancel: {\n            en: 'Cancel',\n            de: 'Abbrechen'\n        },\n        loading: {\n            en: 'Loading...',\n            de: 'Lade...'\n        },\n        searching: {\n            en: 'Searching...',\n            de: 'Suche...'\n        },\n        items: {\n            en: '{{summary.numItems}} item{{summary.numItems !== 1 ? \"s\" : \"\"}}',\n            de: '{{summary.numItems}} Element{{summary.numItems !== 1 ? \"e\" : \"\"}}'\n        },\n        results: {\n            en: '{{summary.numItems}} result{{summary.numItems !== 1 ? \"s\" : \"\"}}',\n            de: '{{summary.numItems}} Ergebnis{{summary.numItems !== 1 ? \"se\" : \"\"}}'\n        },\n        storages: {\n            en: '{{numStorages}} Storages',\n            de: '{{numStorages}} Speicher'\n        },\n        picked: {\n            en: '{{picked.length}} item{{picked.length !== 1 ? \"s\" : \"\"}} picked',\n            de: '{{picked.length}} Element{{picked.length !== 1 ? \"e\" : \"\"}} ausgewählt'\n        },\n        resultsOverview: {\n            en: '{{$interpolate(t(\"footer.results\")) + \" in \" + summary.numStorages + \" storage\" + (summary.numStorages !== 1 ? \"s\" : \"\")}}',\n            de: '{{$interpolate(t(\"footer.results\")) + \" in \" + summary.numStorages + \" Speicher\" + (summary.numStorages !== 1 ? \"n\" : \"\")}}'\n        }\n    },\n    date: {\n        // https://github.com/taylorhakes/fecha#formatting-tokens\n        full: {\n            en: 'MM/DD/YYYY HH:mm',\n            de: 'DD.MM.YYYY HH:mm'\n        }\n    }\n};\n\n},{}],25:[function(require,module,exports){\nmodule.exports = function (data) {\n    if (typeof data === 'function') {\n        data = data();\n    }\n    if (!data.id) {\n        throw 'Item requires an ID';\n    }\n    if (!data.storage) {\n        throw 'Item requires the storage ID';\n    }\n    return item = {\n        id: data.id,\n        storage: data.storage,\n        query: data.query,\n        name: data.name,\n        type: data.type,\n        extension: data.type === 'file' ? data.extension || (data.name.match(/\\.([0-9a-z]+)$/i) || []).pop() : undefined,\n        thumbnail: data.thumbnail,\n        created: data.created,\n        modified: data.modified,\n        data: data.data\n    };\n};\n\n},{}],26:[function(require,module,exports){\nvar pick = [], candidate;\nvar config = require('../config');\n\npick.isAllowed = function (item) {\n    var conf = config.pick;\n    return conf.types.indexOf(item.type) > -1 && (!conf.extensions || !conf.extensions.length || conf.extensions.indexOf(item.extension) > -1);\n};\npick.contains = function (item) {\n    for (var i = 0, l = pick.length; i < l; i++) {\n        if (pick[i].id === item.id && pick[i].storage === item.storage) {\n            return true;\n        }\n    }\n};\npick.candidate = function (item) {\n    if (item) {\n        this.add(item);\n    }\n    candidate = item;\n};\npick.toggle = function (item) {\n    if (this.contains(item)) {\n        this.remove(item);\n    } else {\n        this.add(item);\n    }\n};\npick.add = function (item) {\n    if (!this.contains(item) && this.isAllowed(item)) {\n        if (candidate && item !== candidate && this.contains(candidate)) {\n            this.remove(candidate);\n        }\n        while (config.pick.limit && this.length >= config.pick.limit) {\n            this.shift();\n        }\n        this.push(item);\n    }\n};\npick.remove = function (item) {\n    for (var i = 0, l = this.length; i < l; i++) {\n        var next = this.shift();\n        if (next.id !== item.id || next.storage !== item.storage) {\n            pick.push(next);\n        }\n    }\n    if (!pick.length && candidate && item !== candidate && this.isAllowed(candidate)) {\n        this.push(candidate);\n    }\n};\npick.clear = function () {\n    while (this.length) {\n        this.pop();\n    }\n};\npick.export = function () {\n    return config.pick.limit === 1 ? this[0] : this.slice(0);\n};\n\nmodule.exports = pick;\n},{\"../config\":21}],27:[function(require,module,exports){\nmodule.exports = {\n    storage: null,\n    search: null,\n    items: [],\n    results: {}\n};\n},{}],28:[function(require,module,exports){\nvar Vue = require('vue');\nVue.filter('encodeURI', function(data) {\n    return encodeURI(data);\n});\nVue.filter('encodeURIComponent', function(data) {\n    return encodeURIComponent(data);\n});\n\nArray.prototype.filterBy = function (key, value) {\n    var values = value.indexOf ? value : [value];\n    return this.filter(function(arrayValue) {\n        if (typeof arrayValue === \"object\") {\n            return values.indexOf(arrayValue[key]) > -1;\n        }\n        return false;\n    });\n};\n\nvar params;\n\nwindow.getParams = function () {\n    if (params === undefined) {\n        params = {};\n        var query = window.location.search.substring(1);\n        var vars = query.split('&');\n        for (var i = 0; i < vars.length; i++) {\n            var pair = vars[i].split('=');\n            params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n        }\n    }\n    return params;\n};\nwindow.getParam = function (name) {\n    return window.getParams()[name];\n};\n\nmodule.exports = {\n    /**\n     * Render seconds to HH:MM:SS format\n     *\n     * @param time\n     * @returns {string}\n     */\n    formatTime: function (time) {\n        // http://stackoverflow.com/a/6313008\n        var sec_num = parseInt(time + '', 10); // don't forget the second param\n        var hours   = Math.floor(sec_num / 3600);\n        var minutes = Math.floor((sec_num - (hours * 3600)) / 60);\n        var seconds = sec_num - (hours * 3600) - (minutes * 60);\n\n        if (hours   < 10) {hours   = \"0\"+hours;}\n        if (minutes < 10) {minutes = \"0\"+minutes;}\n        if (seconds < 10) {seconds = \"0\"+seconds;}\n        return hours+':'+minutes+':'+seconds;\n    },\n    /**\n     * Load a script\n     *\n     * @param {string} url\n     * @param {function} callback\n     */\n    loadScript: function (url, callback) {\n        // Adding the script tag to the head as suggested before\n        var head = document.getElementsByTagName('head')[0];\n        var script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.src = url;\n\n        // Then bind the event to the callback function.\n        // There are several events for cross browser compatibility.\n        script.onreadystatechange = callback;\n        script.onload = callback;\n\n        // Fire the loading\n        head.appendChild(script);\n    }\n};\n},{\"vue\":8}],29:[function(require,module,exports){\nmodule.exports = function(protoProps) {\n    var result = function () {\n        if (this.construct) {\n            this.construct.apply(this, arguments);\n        }\n    };\n\n    result.prototype = result;\n    Object.keys(protoProps).forEach(function(key) {\n        result.prototype[key] = protoProps[key];\n    });\n\n    return result;\n};\n\n},{}],30:[function(require,module,exports){\nvar uid = require('./uid');\n\nmodule.exports = require('./createClass')({\n    construct: function(origin, windowObject) {\n        var eventMethod = window.addEventListener ? \"addEventListener\" : \"attachEvent\";\n        var eventer = window[eventMethod];\n        var messageEvent = eventMethod == \"attachEvent\" ? \"onmessage\" : \"message\";\n        eventer(messageEvent, function(e) {\n            var origin = e.origin || e.originalEvent.origin;\n            if (e.source === this.window && origin === this.origin || this.origin === '*') {\n                this.handle(e.data);\n            }\n        }.bind(this), false);\n\n        this.origin = origin;\n        this.window = windowObject;\n        this.servers = {};\n        this._handlers = {};\n    },\n    registerServer: function (name, object) {\n        this.servers[name] = object;\n    },\n    _createHandler: function() {\n        var handler = { callbacks: [] };\n        handler.then = function (callback) {\n            if (handler.hasOwnProperty('_result')) {\n                callback(handler._result);\n            } else {\n                handler.callbacks.push(callback);\n            }\n            return handler;\n        };\n        return handler;\n    },\n    call: function(method) {\n        var arguments = Array.prototype.slice.call(arguments, 1);\n        var id = uid(), handler = this._createHandler();\n        this._handlers[id] = handler;\n        this.window.postMessage({id: id, method: method, arguments: arguments}, this.origin);\n        return handler;\n    },\n    handle: function(message) {\n        if (message.method === 'resolve') {\n            if (this._handlers[message.id]) {\n                var handler = this._handlers[message.id];\n                for (var i = 0, l = handler.callbacks.length; i < l; i++) {\n                    handler.callbacks[i](message.result);\n                }\n                handler._result = message.result;\n                delete this._handlers[message.id];\n            }\n        } else {\n            var methodPath = message.method.split('.');\n            var method = methodPath.pop();\n            var target = this.servers;\n            while (target && methodPath.length) {\n                target = target[methodPath.shift()];\n            }\n            if (!target || !target[method]) {\n                throw 'Unknown method \"' + message.method + '\"';\n            }\n            var result = target[method].apply(target, message.arguments);\n            var resolve = function(res) {\n                // It might occure, that the id is reset, when the target frame is removed\n                if (message.id) {\n                    this.window.postMessage({method: 'resolve', id: message.id, result: res}, this.origin);\n                }\n            }.bind(this);\n            if (typeof result === 'function') {\n                result(resolve);\n            } else {\n                resolve(result);\n            }\n        }\n    }\n});\n\n},{\"./createClass\":29,\"./uid\":31}],31:[function(require,module,exports){\nmodule.exports = function uid () {\n    return '' + Math.random().toString(36).substr(2, 9);\n};\n\n},{}]},{},[23])(23)\n});\n\n","'use strict';\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nmodule.exports = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn str.replace(matchOperatorsRe, '\\\\$&');\n};\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) {/**/}\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[0],\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t} else if ((typeof target !== 'object' && typeof target !== 'function') || target == null) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = target[name];\n\t\t\t\tcopy = options[name];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\ttarget[name] = extend(deep, clone, copy);\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\n","(function (main) {\n  'use strict';\n\n  /**\n   * Parse or format dates\n   * @class fecha\n   */\n  var fecha = {};\n  var token = /d{1,4}|M{1,4}|YY(?:YY)?|S{1,3}|Do|ZZ|([HhMsDm])\\1?|[aA]|\"[^\"]*\"|'[^']*'/g;\n  var twoDigits = /\\d\\d?/;\n  var threeDigits = /\\d{3}/;\n  var fourDigits = /\\d{4}/;\n  var word = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n  var literal = /\\[([^]*?)\\]/gm;\n  var noop = function () {\n  };\n\n  function shorten(arr, sLen) {\n    var newArr = [];\n    for (var i = 0, len = arr.length; i < len; i++) {\n      newArr.push(arr[i].substr(0, sLen));\n    }\n    return newArr;\n  }\n\n  function monthUpdate(arrName) {\n    return function (d, v, i18n) {\n      var index = i18n[arrName].indexOf(v.charAt(0).toUpperCase() + v.substr(1).toLowerCase());\n      if (~index) {\n        d.month = index;\n      }\n    };\n  }\n\n  function pad(val, len) {\n    val = String(val);\n    len = len || 2;\n    while (val.length < len) {\n      val = '0' + val;\n    }\n    return val;\n  }\n\n  var dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  var monthNamesShort = shorten(monthNames, 3);\n  var dayNamesShort = shorten(dayNames, 3);\n  fecha.i18n = {\n    dayNamesShort: dayNamesShort,\n    dayNames: dayNames,\n    monthNamesShort: monthNamesShort,\n    monthNames: monthNames,\n    amPm: ['am', 'pm'],\n    DoFn: function DoFn(D) {\n      return D + ['th', 'st', 'nd', 'rd'][D % 10 > 3 ? 0 : (D - D % 10 !== 10) * D % 10];\n    }\n  };\n\n  var formatFlags = {\n    D: function(dateObj) {\n      return dateObj.getDate();\n    },\n    DD: function(dateObj) {\n      return pad(dateObj.getDate());\n    },\n    Do: function(dateObj, i18n) {\n      return i18n.DoFn(dateObj.getDate());\n    },\n    d: function(dateObj) {\n      return dateObj.getDay();\n    },\n    dd: function(dateObj) {\n      return pad(dateObj.getDay());\n    },\n    ddd: function(dateObj, i18n) {\n      return i18n.dayNamesShort[dateObj.getDay()];\n    },\n    dddd: function(dateObj, i18n) {\n      return i18n.dayNames[dateObj.getDay()];\n    },\n    M: function(dateObj) {\n      return dateObj.getMonth() + 1;\n    },\n    MM: function(dateObj) {\n      return pad(dateObj.getMonth() + 1);\n    },\n    MMM: function(dateObj, i18n) {\n      return i18n.monthNamesShort[dateObj.getMonth()];\n    },\n    MMMM: function(dateObj, i18n) {\n      return i18n.monthNames[dateObj.getMonth()];\n    },\n    YY: function(dateObj) {\n      return String(dateObj.getFullYear()).substr(2);\n    },\n    YYYY: function(dateObj) {\n      return dateObj.getFullYear();\n    },\n    h: function(dateObj) {\n      return dateObj.getHours() % 12 || 12;\n    },\n    hh: function(dateObj) {\n      return pad(dateObj.getHours() % 12 || 12);\n    },\n    H: function(dateObj) {\n      return dateObj.getHours();\n    },\n    HH: function(dateObj) {\n      return pad(dateObj.getHours());\n    },\n    m: function(dateObj) {\n      return dateObj.getMinutes();\n    },\n    mm: function(dateObj) {\n      return pad(dateObj.getMinutes());\n    },\n    s: function(dateObj) {\n      return dateObj.getSeconds();\n    },\n    ss: function(dateObj) {\n      return pad(dateObj.getSeconds());\n    },\n    S: function(dateObj) {\n      return Math.round(dateObj.getMilliseconds() / 100);\n    },\n    SS: function(dateObj) {\n      return pad(Math.round(dateObj.getMilliseconds() / 10), 2);\n    },\n    SSS: function(dateObj) {\n      return pad(dateObj.getMilliseconds(), 3);\n    },\n    a: function(dateObj, i18n) {\n      return dateObj.getHours() < 12 ? i18n.amPm[0] : i18n.amPm[1];\n    },\n    A: function(dateObj, i18n) {\n      return dateObj.getHours() < 12 ? i18n.amPm[0].toUpperCase() : i18n.amPm[1].toUpperCase();\n    },\n    ZZ: function(dateObj) {\n      var o = dateObj.getTimezoneOffset();\n      return (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4);\n    }\n  };\n\n  var parseFlags = {\n    D: [twoDigits, function (d, v) {\n      d.day = v;\n    }],\n    Do: [new RegExp(twoDigits.source + word.source), function (d, v) {\n      d.day = parseInt(v, 10);\n    }],\n    M: [twoDigits, function (d, v) {\n      d.month = v - 1;\n    }],\n    YY: [twoDigits, function (d, v) {\n      var da = new Date(), cent = +('' + da.getFullYear()).substr(0, 2);\n      d.year = '' + (v > 68 ? cent - 1 : cent) + v;\n    }],\n    h: [twoDigits, function (d, v) {\n      d.hour = v;\n    }],\n    m: [twoDigits, function (d, v) {\n      d.minute = v;\n    }],\n    s: [twoDigits, function (d, v) {\n      d.second = v;\n    }],\n    YYYY: [fourDigits, function (d, v) {\n      d.year = v;\n    }],\n    S: [/\\d/, function (d, v) {\n      d.millisecond = v * 100;\n    }],\n    SS: [/\\d{2}/, function (d, v) {\n      d.millisecond = v * 10;\n    }],\n    SSS: [threeDigits, function (d, v) {\n      d.millisecond = v;\n    }],\n    d: [twoDigits, noop],\n    ddd: [word, noop],\n    MMM: [word, monthUpdate('monthNamesShort')],\n    MMMM: [word, monthUpdate('monthNames')],\n    a: [word, function (d, v, i18n) {\n      var val = v.toLowerCase();\n      if (val === i18n.amPm[0]) {\n        d.isPm = false;\n      } else if (val === i18n.amPm[1]) {\n        d.isPm = true;\n      }\n    }],\n    ZZ: [/[\\+\\-]\\d\\d:?\\d\\d/, function (d, v) {\n      var parts = (v + '').match(/([\\+\\-]|\\d\\d)/gi), minutes;\n\n      if (parts) {\n        minutes = +(parts[1] * 60) + parseInt(parts[2], 10);\n        d.timezoneOffset = parts[0] === '+' ? minutes : -minutes;\n      }\n    }]\n  };\n  parseFlags.dd = parseFlags.d;\n  parseFlags.dddd = parseFlags.ddd;\n  parseFlags.DD = parseFlags.D;\n  parseFlags.mm = parseFlags.m;\n  parseFlags.hh = parseFlags.H = parseFlags.HH = parseFlags.h;\n  parseFlags.MM = parseFlags.M;\n  parseFlags.ss = parseFlags.s;\n  parseFlags.A = parseFlags.a;\n\n\n  // Some common format strings\n  fecha.masks = {\n    'default': 'ddd MMM DD YYYY HH:mm:ss',\n    shortDate: 'M/D/YY',\n    mediumDate: 'MMM D, YYYY',\n    longDate: 'MMMM D, YYYY',\n    fullDate: 'dddd, MMMM D, YYYY',\n    shortTime: 'HH:mm',\n    mediumTime: 'HH:mm:ss',\n    longTime: 'HH:mm:ss.SSS'\n  };\n\n  /***\n   * Format a date\n   * @method format\n   * @param {Date|number} dateObj\n   * @param {string} mask Format of the date, i.e. 'mm-dd-yy' or 'shortDate'\n   */\n  fecha.format = function (dateObj, mask, i18nSettings) {\n    var i18n = i18nSettings || fecha.i18n;\n\n    if (typeof dateObj === 'number') {\n      dateObj = new Date(dateObj);\n    }\n\n    if (Object.prototype.toString.call(dateObj) !== '[object Date]' || isNaN(dateObj.getTime())) {\n      throw new Error('Invalid Date in fecha.format');\n    }\n\n    mask = fecha.masks[mask] || mask || fecha.masks['default'];\n\n    var literals = [];\n\n    // Make literals inactive by replacing them with ??\n    mask = mask.replace(literal, function($0, $1) {\n      literals.push($1);\n      return '??';\n    });\n    // Apply formatting rules\n    mask = mask.replace(token, function ($0) {\n      return $0 in formatFlags ? formatFlags[$0](dateObj, i18n) : $0.slice(1, $0.length - 1);\n    });\n    // Inline literal values back into the formatted value\n    return mask.replace(/\\?\\?/g, function() {\n      return literals.shift();\n    });\n  };\n\n  /**\n   * Parse a date string into an object, changes - into /\n   * @method parse\n   * @param {string} dateStr Date string\n   * @param {string} format Date parse format\n   * @returns {Date|boolean}\n   */\n  fecha.parse = function (dateStr, format, i18nSettings) {\n    var i18n = i18nSettings || fecha.i18n;\n\n    if (typeof format !== 'string') {\n      throw new Error('Invalid format in fecha.parse');\n    }\n\n    format = fecha.masks[format] || format;\n\n    // Avoid regular expression denial of service, fail early for really long strings\n    // https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS\n    if (dateStr.length > 1000) {\n      return false;\n    }\n\n    var isValid = true;\n    var dateInfo = {};\n    format.replace(token, function ($0) {\n      if (parseFlags[$0]) {\n        var info = parseFlags[$0];\n        var index = dateStr.search(info[0]);\n        if (!~index) {\n          isValid = false;\n        } else {\n          dateStr.replace(info[0], function (result) {\n            info[1](dateInfo, result, i18n);\n            dateStr = dateStr.substr(index + result.length);\n            return result;\n          });\n        }\n      }\n\n      return parseFlags[$0] ? '' : $0.slice(1, $0.length - 1);\n    });\n\n    if (!isValid) {\n      return false;\n    }\n\n    var today = new Date();\n    if (dateInfo.isPm === true && dateInfo.hour != null && +dateInfo.hour !== 12) {\n      dateInfo.hour = +dateInfo.hour + 12;\n    } else if (dateInfo.isPm === false && +dateInfo.hour === 12) {\n      dateInfo.hour = 0;\n    }\n\n    var date;\n    if (dateInfo.timezoneOffset != null) {\n      dateInfo.minute = +(dateInfo.minute || 0) - +dateInfo.timezoneOffset;\n      date = new Date(Date.UTC(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1,\n        dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0));\n    } else {\n      date = new Date(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1,\n        dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0);\n    }\n    return date;\n  };\n\n  /* istanbul ignore next */\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = fecha;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return fecha;\n    });\n  } else {\n    main.fecha = fecha;\n  }\n})(this);\n","'use strict';\n\nmodule.exports = {\n\n\tready: function() {\n\t\t// Make sure root locale exists\n\t\tif (!this.$root.locale)\n\t\t\tthis.$root.$set('locale', 'en');\n\t},\n\n\tmethods: {\n\t\ttranslate: function(namespace, locale) {\n\n\t\t\tlocale = locale || this.locale || this.$root.locale;\n\n\t\t\t// Fetch lang data\n\t\t\tvar data = this.$options.translations || this.$root.$options.translations;\n\n\t\t\ttry {\n\t\t\t\tvar translation = namespace.split('.').reduce(function(a, b, index) {\n\t\t\t\t\treturn typeof a === 'object' ? a[b] : data[a][b];\n\t\t\t\t})[locale];\n\t\t\t} catch(e) {\n\t\t\t\tconsole.warn('No translation found for namespace %s using locale %s (%s)', namespace, locale, e);\n\t\t\t}\n\t\t\treturn translation;\n\t\t}\n\t}\n}\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.infiniteScroll = global.infiniteScroll || {})));\n}(this, function (exports) { 'use strict';\n\n  var throttle = function throttle(fn, delay) {\n    var now, lastExec, timer, context, args; //eslint-disable-line\n\n    var execute = function execute() {\n      fn.apply(context, args);\n      lastExec = now;\n    };\n\n    return function () {\n      context = this;\n      args = arguments;\n\n      now = Date.now();\n\n      if (timer) {\n        clearTimeout(timer);\n        timer = null;\n      }\n\n      if (lastExec) {\n        var diff = delay - (now - lastExec);\n        if (diff < 0) {\n          execute();\n        } else {\n          timer = setTimeout(function () {\n            execute();\n          }, diff);\n        }\n      } else {\n        execute();\n      }\n    };\n  };\n\n  var getScrollTop = function getScrollTop(element) {\n    if (element === window) {\n      return Math.max(window.pageYOffset || 0, document.documentElement.scrollTop);\n    }\n\n    return element.scrollTop;\n  };\n\n  var getComputedStyle = document.defaultView.getComputedStyle;\n\n  var getScrollEventTarget = function getScrollEventTarget(element) {\n    var currentNode = element;\n    // bugfix, see http://w3help.org/zh-cn/causes/SD9013 and http://stackoverflow.com/questions/17016740/onscroll-function-is-not-working-for-chrome\n    while (currentNode && currentNode.tagName !== 'HTML' && currentNode.tagName !== 'BODY' && currentNode.nodeType === 1) {\n      var overflowY = getComputedStyle(currentNode).overflowY;\n      if (overflowY === 'scroll' || overflowY === 'auto') {\n        return currentNode;\n      }\n      currentNode = currentNode.parentNode;\n    }\n    return window;\n  };\n\n  var getVisibleHeight = function getVisibleHeight(element) {\n    if (element === window) {\n      return document.documentElement.clientHeight;\n    }\n\n    return element.clientHeight;\n  };\n\n  var getElementTop = function getElementTop(element) {\n    if (element === window) {\n      return getScrollTop(window);\n    }\n    return element.getBoundingClientRect().top + getScrollTop(window);\n  };\n\n  var isAttached = function isAttached(element) {\n    var currentNode = element.parentNode;\n    while (currentNode) {\n      if (currentNode.tagName === 'HTML') {\n        return true;\n      }\n      if (currentNode.nodeType === 11) {\n        return false;\n      }\n      currentNode = currentNode.parentNode;\n    }\n    return false;\n  };\n\n  var infiniteScroll = {\n    doBind: function doBind() {\n      if (this.binded) return; // eslint-disable-line\n      this.binded = true;\n\n      var directive = this;\n      var element = directive.el;\n\n      directive.scrollEventTarget = getScrollEventTarget(element);\n      directive.scrollListener = throttle(directive.doCheck.bind(directive), 200);\n      directive.scrollEventTarget.addEventListener('scroll', directive.scrollListener);\n\n      var disabledExpr = element.getAttribute('infinite-scroll-disabled');\n      var disabled = false;\n\n      if (disabledExpr) {\n        this.vm.$watch(disabledExpr, function (value) {\n          directive.disabled = value;\n          if (!value && directive.immediateCheck) {\n            directive.doCheck();\n          }\n        });\n        disabled = Boolean(directive.vm.$get(disabledExpr));\n      }\n      directive.disabled = disabled;\n\n      var distanceExpr = element.getAttribute('infinite-scroll-distance');\n      var distance = 0;\n      if (distanceExpr) {\n        distance = Number(directive.vm.$get(distanceExpr));\n        if (isNaN(distance)) {\n          distance = 0;\n        }\n      }\n      directive.distance = distance;\n\n      var immediateCheckExpr = element.getAttribute('infinite-scroll-immediate-check');\n      var immediateCheck = true;\n      if (immediateCheckExpr) {\n        immediateCheck = Boolean(directive.vm.$get(immediateCheckExpr));\n      }\n      directive.immediateCheck = immediateCheck;\n\n      if (immediateCheck) {\n        directive.doCheck();\n      }\n\n      var eventName = element.getAttribute('infinite-scroll-listen-for-event');\n      if (eventName) {\n        directive.vm.$on(eventName, function () {\n          directive.doCheck();\n        });\n      }\n    },\n\n    doCheck: function doCheck(force) {\n      var scrollEventTarget = this.scrollEventTarget;\n      var element = this.el;\n      var distance = this.distance;\n\n      if (force !== true && this.disabled) return; //eslint-disable-line\n      var viewportScrollTop = getScrollTop(scrollEventTarget);\n      var viewportBottom = viewportScrollTop + getVisibleHeight(scrollEventTarget);\n\n      var shouldTrigger = false;\n\n      if (scrollEventTarget === element) {\n        shouldTrigger = scrollEventTarget.scrollHeight - viewportBottom <= distance;\n      } else {\n        var elementBottom = getElementTop(element) - getElementTop(scrollEventTarget) + element.offsetHeight + viewportScrollTop;\n\n        shouldTrigger = viewportBottom + distance >= elementBottom;\n      }\n\n      if (shouldTrigger && this.expression) {\n        this.vm.$get(this.expression);\n      }\n    },\n\n    bind: function bind() {\n      var directive = this;\n      var element = this.el;\n\n      directive.vm.$on('hook:ready', function () {\n        if (isAttached(element)) {\n          directive.doBind();\n        }\n      });\n\n      this.bindTryCount = 0;\n\n      var tryBind = function tryBind() {\n        if (directive.bindTryCount > 10) return; //eslint-disable-line\n        directive.bindTryCount++;\n        if (isAttached(element)) {\n          directive.doBind();\n        } else {\n          setTimeout(tryBind, 50);\n        }\n      };\n\n      tryBind();\n    },\n\n    unbind: function unbind() {\n      this.scrollEventTarget.removeEventListener('scroll', this.scrollListener);\n    }\n  };\n\n  if (window.Vue) {\n    window.infiniteScroll = infiniteScroll;\n    Vue.use(install);\n  }\n\n  function install(Vue) {\n    Vue.directive('infiniteScroll', infiniteScroll);\n  }\n\n  exports.install = install;\n  exports.infiniteScroll = infiniteScroll;\n\n}));","/*!\n * vue-resource v0.9.3\n * https://github.com/vuejs/vue-resource\n * Released under the MIT License.\n */\n\n'use strict';\n\n/**\n * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n */\n\nvar RESOLVED = 0;\nvar REJECTED = 1;\nvar PENDING = 2;\n\nfunction Promise$2(executor) {\n\n    this.state = PENDING;\n    this.value = undefined;\n    this.deferred = [];\n\n    var promise = this;\n\n    try {\n        executor(function (x) {\n            promise.resolve(x);\n        }, function (r) {\n            promise.reject(r);\n        });\n    } catch (e) {\n        promise.reject(e);\n    }\n}\n\nPromise$2.reject = function (r) {\n    return new Promise$2(function (resolve, reject) {\n        reject(r);\n    });\n};\n\nPromise$2.resolve = function (x) {\n    return new Promise$2(function (resolve, reject) {\n        resolve(x);\n    });\n};\n\nPromise$2.all = function all(iterable) {\n    return new Promise$2(function (resolve, reject) {\n        var count = 0,\n            result = [];\n\n        if (iterable.length === 0) {\n            resolve(result);\n        }\n\n        function resolver(i) {\n            return function (x) {\n                result[i] = x;\n                count += 1;\n\n                if (count === iterable.length) {\n                    resolve(result);\n                }\n            };\n        }\n\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$2.resolve(iterable[i]).then(resolver(i), reject);\n        }\n    });\n};\n\nPromise$2.race = function race(iterable) {\n    return new Promise$2(function (resolve, reject) {\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$2.resolve(iterable[i]).then(resolve, reject);\n        }\n    });\n};\n\nvar p$1 = Promise$2.prototype;\n\np$1.resolve = function resolve(x) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (x === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        var called = false;\n\n        try {\n            var then = x && x['then'];\n\n            if (x !== null && typeof x === 'object' && typeof then === 'function') {\n                then.call(x, function (x) {\n                    if (!called) {\n                        promise.resolve(x);\n                    }\n                    called = true;\n                }, function (r) {\n                    if (!called) {\n                        promise.reject(r);\n                    }\n                    called = true;\n                });\n                return;\n            }\n        } catch (e) {\n            if (!called) {\n                promise.reject(e);\n            }\n            return;\n        }\n\n        promise.state = RESOLVED;\n        promise.value = x;\n        promise.notify();\n    }\n};\n\np$1.reject = function reject(reason) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (reason === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        promise.state = REJECTED;\n        promise.value = reason;\n        promise.notify();\n    }\n};\n\np$1.notify = function notify() {\n    var promise = this;\n\n    nextTick(function () {\n        if (promise.state !== PENDING) {\n            while (promise.deferred.length) {\n                var deferred = promise.deferred.shift(),\n                    onResolved = deferred[0],\n                    onRejected = deferred[1],\n                    resolve = deferred[2],\n                    reject = deferred[3];\n\n                try {\n                    if (promise.state === RESOLVED) {\n                        if (typeof onResolved === 'function') {\n                            resolve(onResolved.call(undefined, promise.value));\n                        } else {\n                            resolve(promise.value);\n                        }\n                    } else if (promise.state === REJECTED) {\n                        if (typeof onRejected === 'function') {\n                            resolve(onRejected.call(undefined, promise.value));\n                        } else {\n                            reject(promise.value);\n                        }\n                    }\n                } catch (e) {\n                    reject(e);\n                }\n            }\n        }\n    });\n};\n\np$1.then = function then(onResolved, onRejected) {\n    var promise = this;\n\n    return new Promise$2(function (resolve, reject) {\n        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n        promise.notify();\n    });\n};\n\np$1.catch = function (onRejected) {\n    return this.then(undefined, onRejected);\n};\n\nvar PromiseObj = window.Promise || Promise$2;\n\nfunction Promise$1(executor, context) {\n\n    if (executor instanceof PromiseObj) {\n        this.promise = executor;\n    } else {\n        this.promise = new PromiseObj(executor.bind(context));\n    }\n\n    this.context = context;\n}\n\nPromise$1.all = function (iterable, context) {\n    return new Promise$1(PromiseObj.all(iterable), context);\n};\n\nPromise$1.resolve = function (value, context) {\n    return new Promise$1(PromiseObj.resolve(value), context);\n};\n\nPromise$1.reject = function (reason, context) {\n    return new Promise$1(PromiseObj.reject(reason), context);\n};\n\nPromise$1.race = function (iterable, context) {\n    return new Promise$1(PromiseObj.race(iterable), context);\n};\n\nvar p = Promise$1.prototype;\n\np.bind = function (context) {\n    this.context = context;\n    return this;\n};\n\np.then = function (fulfilled, rejected) {\n\n    if (fulfilled && fulfilled.bind && this.context) {\n        fulfilled = fulfilled.bind(this.context);\n    }\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    return new Promise$1(this.promise.then(fulfilled, rejected), this.context);\n};\n\np.catch = function (rejected) {\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    return new Promise$1(this.promise.catch(rejected), this.context);\n};\n\np.finally = function (callback) {\n\n    return this.then(function (value) {\n        callback.call(this);\n        return value;\n    }, function (reason) {\n        callback.call(this);\n        return PromiseObj.reject(reason);\n    });\n};\n\nvar debug = false;\nvar util = {};\nvar array = [];\nfunction Util (Vue) {\n    util = Vue.util;\n    debug = Vue.config.debug || !Vue.config.silent;\n}\n\nfunction warn(msg) {\n    if (typeof console !== 'undefined' && debug) {\n        console.warn('[VueResource warn]: ' + msg);\n    }\n}\n\nfunction error(msg) {\n    if (typeof console !== 'undefined') {\n        console.error(msg);\n    }\n}\n\nfunction nextTick(cb, ctx) {\n    return util.nextTick(cb, ctx);\n}\n\nfunction trim(str) {\n    return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nvar isArray = Array.isArray;\n\nfunction isString(val) {\n    return typeof val === 'string';\n}\n\nfunction isBoolean(val) {\n    return val === true || val === false;\n}\n\nfunction isFunction(val) {\n    return typeof val === 'function';\n}\n\nfunction isObject(obj) {\n    return obj !== null && typeof obj === 'object';\n}\n\nfunction isPlainObject(obj) {\n    return isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n}\n\nfunction isFormData(obj) {\n    return typeof FormData !== 'undefined' && obj instanceof FormData;\n}\n\nfunction when(value, fulfilled, rejected) {\n\n    var promise = Promise$1.resolve(value);\n\n    if (arguments.length < 2) {\n        return promise;\n    }\n\n    return promise.then(fulfilled, rejected);\n}\n\nfunction options(fn, obj, opts) {\n\n    opts = opts || {};\n\n    if (isFunction(opts)) {\n        opts = opts.call(obj);\n    }\n\n    return merge(fn.bind({ $vm: obj, $options: opts }), fn, { $options: opts });\n}\n\nfunction each(obj, iterator) {\n\n    var i, key;\n\n    if (typeof obj.length == 'number') {\n        for (i = 0; i < obj.length; i++) {\n            iterator.call(obj[i], obj[i], i);\n        }\n    } else if (isObject(obj)) {\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                iterator.call(obj[key], obj[key], key);\n            }\n        }\n    }\n\n    return obj;\n}\n\nvar assign = Object.assign || _assign;\n\nfunction merge(target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n        _merge(target, source, true);\n    });\n\n    return target;\n}\n\nfunction defaults(target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n\n        for (var key in source) {\n            if (target[key] === undefined) {\n                target[key] = source[key];\n            }\n        }\n    });\n\n    return target;\n}\n\nfunction _assign(target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n        _merge(target, source);\n    });\n\n    return target;\n}\n\nfunction _merge(target, source, deep) {\n    for (var key in source) {\n        if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n            if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\n                target[key] = {};\n            }\n            if (isArray(source[key]) && !isArray(target[key])) {\n                target[key] = [];\n            }\n            _merge(target[key], source[key], deep);\n        } else if (source[key] !== undefined) {\n            target[key] = source[key];\n        }\n    }\n}\n\nfunction root (options, next) {\n\n    var url = next(options);\n\n    if (isString(options.root) && !url.match(/^(https?:)?\\//)) {\n        url = options.root + '/' + url;\n    }\n\n    return url;\n}\n\nfunction query (options, next) {\n\n    var urlParams = Object.keys(Url.options.params),\n        query = {},\n        url = next(options);\n\n    each(options.params, function (value, key) {\n        if (urlParams.indexOf(key) === -1) {\n            query[key] = value;\n        }\n    });\n\n    query = Url.params(query);\n\n    if (query) {\n        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n    }\n\n    return url;\n}\n\n/**\n * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n */\n\nfunction expand(url, params, variables) {\n\n    var tmpl = parse(url),\n        expanded = tmpl.expand(params);\n\n    if (variables) {\n        variables.push.apply(variables, tmpl.vars);\n    }\n\n    return expanded;\n}\n\nfunction parse(template) {\n\n    var operators = ['+', '#', '.', '/', ';', '?', '&'],\n        variables = [];\n\n    return {\n        vars: variables,\n        expand: function (context) {\n            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n                if (expression) {\n\n                    var operator = null,\n                        values = [];\n\n                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n                        operator = expression.charAt(0);\n                        expression = expression.substr(1);\n                    }\n\n                    expression.split(/,/g).forEach(function (variable) {\n                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n                        values.push.apply(values, getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n                        variables.push(tmp[1]);\n                    });\n\n                    if (operator && operator !== '+') {\n\n                        var separator = ',';\n\n                        if (operator === '?') {\n                            separator = '&';\n                        } else if (operator !== '#') {\n                            separator = operator;\n                        }\n\n                        return (values.length !== 0 ? operator : '') + values.join(separator);\n                    } else {\n                        return values.join(',');\n                    }\n                } else {\n                    return encodeReserved(literal);\n                }\n            });\n        }\n    };\n}\n\nfunction getValues(context, operator, key, modifier) {\n\n    var value = context[key],\n        result = [];\n\n    if (isDefined(value) && value !== '') {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n            value = value.toString();\n\n            if (modifier && modifier !== '*') {\n                value = value.substring(0, parseInt(modifier, 10));\n            }\n\n            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n        } else {\n            if (modifier === '*') {\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            result.push(encodeValue(operator, value[k], k));\n                        }\n                    });\n                }\n            } else {\n                var tmp = [];\n\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        tmp.push(encodeValue(operator, value));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            tmp.push(encodeURIComponent(k));\n                            tmp.push(encodeValue(operator, value[k].toString()));\n                        }\n                    });\n                }\n\n                if (isKeyOperator(operator)) {\n                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n                } else if (tmp.length !== 0) {\n                    result.push(tmp.join(','));\n                }\n            }\n        }\n    } else {\n        if (operator === ';') {\n            result.push(encodeURIComponent(key));\n        } else if (value === '' && (operator === '&' || operator === '?')) {\n            result.push(encodeURIComponent(key) + '=');\n        } else if (value === '') {\n            result.push('');\n        }\n    }\n\n    return result;\n}\n\nfunction isDefined(value) {\n    return value !== undefined && value !== null;\n}\n\nfunction isKeyOperator(operator) {\n    return operator === ';' || operator === '&' || operator === '?';\n}\n\nfunction encodeValue(operator, value, key) {\n\n    value = operator === '+' || operator === '#' ? encodeReserved(value) : encodeURIComponent(value);\n\n    if (key) {\n        return encodeURIComponent(key) + '=' + value;\n    } else {\n        return value;\n    }\n}\n\nfunction encodeReserved(str) {\n    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n        if (!/%[0-9A-Fa-f]/.test(part)) {\n            part = encodeURI(part);\n        }\n        return part;\n    }).join('');\n}\n\nfunction template (options) {\n\n    var variables = [],\n        url = expand(options.url, options.params, variables);\n\n    variables.forEach(function (key) {\n        delete options.params[key];\n    });\n\n    return url;\n}\n\n/**\n * Service for URL templating.\n */\n\nvar ie = document.documentMode;\nvar el = document.createElement('a');\n\nfunction Url(url, params) {\n\n    var self = this || {},\n        options = url,\n        transform;\n\n    if (isString(url)) {\n        options = { url: url, params: params };\n    }\n\n    options = merge({}, Url.options, self.$options, options);\n\n    Url.transforms.forEach(function (handler) {\n        transform = factory(handler, transform, self.$vm);\n    });\n\n    return transform(options);\n}\n\n/**\n * Url options.\n */\n\nUrl.options = {\n    url: '',\n    root: null,\n    params: {}\n};\n\n/**\n * Url transforms.\n */\n\nUrl.transforms = [template, query, root];\n\n/**\n * Encodes a Url parameter string.\n *\n * @param {Object} obj\n */\n\nUrl.params = function (obj) {\n\n    var params = [],\n        escape = encodeURIComponent;\n\n    params.add = function (key, value) {\n\n        if (isFunction(value)) {\n            value = value();\n        }\n\n        if (value === null) {\n            value = '';\n        }\n\n        this.push(escape(key) + '=' + escape(value));\n    };\n\n    serialize(params, obj);\n\n    return params.join('&').replace(/%20/g, '+');\n};\n\n/**\n * Parse a URL and return its components.\n *\n * @param {String} url\n */\n\nUrl.parse = function (url) {\n\n    if (ie) {\n        el.href = url;\n        url = el.href;\n    }\n\n    el.href = url;\n\n    return {\n        href: el.href,\n        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n        port: el.port,\n        host: el.host,\n        hostname: el.hostname,\n        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n        search: el.search ? el.search.replace(/^\\?/, '') : '',\n        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n    };\n};\n\nfunction factory(handler, next, vm) {\n    return function (options) {\n        return handler.call(vm, options, next);\n    };\n}\n\nfunction serialize(params, obj, scope) {\n\n    var array = isArray(obj),\n        plain = isPlainObject(obj),\n        hash;\n\n    each(obj, function (value, key) {\n\n        hash = isObject(value) || isArray(value);\n\n        if (scope) {\n            key = scope + '[' + (plain || hash ? key : '') + ']';\n        }\n\n        if (!scope && array) {\n            params.add(value.name, value.value);\n        } else if (hash) {\n            serialize(params, value, key);\n        } else {\n            params.add(key, value);\n        }\n    });\n}\n\nfunction xdrClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var xdr = new XDomainRequest(),\n            handler = function (event) {\n\n            var response = request.respondWith(xdr.responseText, {\n                status: xdr.status,\n                statusText: xdr.statusText\n            });\n\n            resolve(response);\n        };\n\n        request.abort = function () {\n            return xdr.abort();\n        };\n\n        xdr.open(request.method, request.getUrl(), true);\n        xdr.timeout = 0;\n        xdr.onload = handler;\n        xdr.onerror = handler;\n        xdr.ontimeout = function () {};\n        xdr.onprogress = function () {};\n        xdr.send(request.getBody());\n    });\n}\n\nvar ORIGIN_URL = Url.parse(location.href);\nvar SUPPORTS_CORS = 'withCredentials' in new XMLHttpRequest();\n\nfunction cors (request, next) {\n\n    if (!isBoolean(request.crossOrigin) && crossOrigin(request)) {\n        request.crossOrigin = true;\n    }\n\n    if (request.crossOrigin) {\n\n        if (!SUPPORTS_CORS) {\n            request.client = xdrClient;\n        }\n\n        delete request.emulateHTTP;\n    }\n\n    next();\n}\n\nfunction crossOrigin(request) {\n\n    var requestUrl = Url.parse(Url(request));\n\n    return requestUrl.protocol !== ORIGIN_URL.protocol || requestUrl.host !== ORIGIN_URL.host;\n}\n\nfunction body (request, next) {\n\n    if (request.emulateJSON && isPlainObject(request.body)) {\n        request.body = Url.params(request.body);\n        request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n    }\n\n    if (isFormData(request.body)) {\n        delete request.headers['Content-Type'];\n    }\n\n    if (isPlainObject(request.body)) {\n        request.body = JSON.stringify(request.body);\n    }\n\n    next(function (response) {\n\n        var contentType = response.headers['Content-Type'];\n\n        if (isString(contentType) && contentType.indexOf('application/json') === 0) {\n\n            try {\n                response.data = response.json();\n            } catch (e) {\n                response.data = null;\n            }\n        } else {\n            response.data = response.text();\n        }\n    });\n}\n\nfunction jsonpClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var name = request.jsonp || 'callback',\n            callback = '_jsonp' + Math.random().toString(36).substr(2),\n            body = null,\n            handler,\n            script;\n\n        handler = function (event) {\n\n            var status = 0;\n\n            if (event.type === 'load' && body !== null) {\n                status = 200;\n            } else if (event.type === 'error') {\n                status = 404;\n            }\n\n            resolve(request.respondWith(body, { status: status }));\n\n            delete window[callback];\n            document.body.removeChild(script);\n        };\n\n        request.params[name] = callback;\n\n        window[callback] = function (result) {\n            body = JSON.stringify(result);\n        };\n\n        script = document.createElement('script');\n        script.src = request.getUrl();\n        script.type = 'text/javascript';\n        script.async = true;\n        script.onload = handler;\n        script.onerror = handler;\n\n        document.body.appendChild(script);\n    });\n}\n\nfunction jsonp (request, next) {\n\n    if (request.method == 'JSONP') {\n        request.client = jsonpClient;\n    }\n\n    next(function (response) {\n\n        if (request.method == 'JSONP') {\n            response.data = response.json();\n        }\n    });\n}\n\nfunction before (request, next) {\n\n    if (isFunction(request.before)) {\n        request.before.call(this, request);\n    }\n\n    next();\n}\n\n/**\n * HTTP method override Interceptor.\n */\n\nfunction method (request, next) {\n\n    if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\n        request.headers['X-HTTP-Method-Override'] = request.method;\n        request.method = 'POST';\n    }\n\n    next();\n}\n\nfunction header (request, next) {\n\n    request.method = request.method.toUpperCase();\n    request.headers = assign({}, Http.headers.common, !request.crossOrigin ? Http.headers.custom : {}, Http.headers[request.method.toLowerCase()], request.headers);\n\n    next();\n}\n\n/**\n * Timeout Interceptor.\n */\n\nfunction timeout (request, next) {\n\n    var timeout;\n\n    if (request.timeout) {\n        timeout = setTimeout(function () {\n            request.abort();\n        }, request.timeout);\n    }\n\n    next(function (response) {\n\n        clearTimeout(timeout);\n    });\n}\n\nfunction xhrClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var xhr = new XMLHttpRequest(),\n            handler = function (event) {\n\n            var response = request.respondWith('response' in xhr ? xhr.response : xhr.responseText, {\n                status: xhr.status === 1223 ? 204 : xhr.status, // IE9 status bug\n                statusText: xhr.status === 1223 ? 'No Content' : trim(xhr.statusText),\n                headers: parseHeaders(xhr.getAllResponseHeaders())\n            });\n\n            resolve(response);\n        };\n\n        request.abort = function () {\n            return xhr.abort();\n        };\n\n        xhr.open(request.method, request.getUrl(), true);\n        xhr.timeout = 0;\n        xhr.onload = handler;\n        xhr.onerror = handler;\n\n        if (request.progress) {\n            if (request.method === 'GET') {\n                xhr.addEventListener('progress', request.progress);\n            } else if (/^(POST|PUT)$/i.test(request.method)) {\n                xhr.upload.addEventListener('progress', request.progress);\n            }\n        }\n\n        if (request.credentials === true) {\n            xhr.withCredentials = true;\n        }\n\n        each(request.headers || {}, function (value, header) {\n            xhr.setRequestHeader(header, value);\n        });\n\n        xhr.send(request.getBody());\n    });\n}\n\nfunction parseHeaders(str) {\n\n    var headers = {},\n        value,\n        name,\n        i;\n\n    each(trim(str).split('\\n'), function (row) {\n\n        i = row.indexOf(':');\n        name = trim(row.slice(0, i));\n        value = trim(row.slice(i + 1));\n\n        if (headers[name]) {\n\n            if (isArray(headers[name])) {\n                headers[name].push(value);\n            } else {\n                headers[name] = [headers[name], value];\n            }\n        } else {\n\n            headers[name] = value;\n        }\n    });\n\n    return headers;\n}\n\nfunction Client (context) {\n\n    var reqHandlers = [sendRequest],\n        resHandlers = [],\n        handler;\n\n    if (!isObject(context)) {\n        context = null;\n    }\n\n    function Client(request) {\n        return new Promise$1(function (resolve) {\n\n            function exec() {\n\n                handler = reqHandlers.pop();\n\n                if (isFunction(handler)) {\n                    handler.call(context, request, next);\n                } else {\n                    warn('Invalid interceptor of type ' + typeof handler + ', must be a function');\n                    next();\n                }\n            }\n\n            function next(response) {\n\n                if (isFunction(response)) {\n\n                    resHandlers.unshift(response);\n                } else if (isObject(response)) {\n\n                    resHandlers.forEach(function (handler) {\n                        response = when(response, function (response) {\n                            return handler.call(context, response) || response;\n                        });\n                    });\n\n                    when(response, resolve);\n\n                    return;\n                }\n\n                exec();\n            }\n\n            exec();\n        }, context);\n    }\n\n    Client.use = function (handler) {\n        reqHandlers.push(handler);\n    };\n\n    return Client;\n}\n\nfunction sendRequest(request, resolve) {\n\n    var client = request.client || xhrClient;\n\n    resolve(client(request));\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n/**\n * HTTP Response.\n */\n\nvar Response = function () {\n    function Response(body, _ref) {\n        var url = _ref.url;\n        var headers = _ref.headers;\n        var status = _ref.status;\n        var statusText = _ref.statusText;\n        classCallCheck(this, Response);\n\n\n        this.url = url;\n        this.body = body;\n        this.headers = headers || {};\n        this.status = status || 0;\n        this.statusText = statusText || '';\n        this.ok = status >= 200 && status < 300;\n    }\n\n    Response.prototype.text = function text() {\n        return this.body;\n    };\n\n    Response.prototype.blob = function blob() {\n        return new Blob([this.body]);\n    };\n\n    Response.prototype.json = function json() {\n        return JSON.parse(this.body);\n    };\n\n    return Response;\n}();\n\nvar Request = function () {\n    function Request(options) {\n        classCallCheck(this, Request);\n\n\n        this.method = 'GET';\n        this.body = null;\n        this.params = {};\n        this.headers = {};\n\n        assign(this, options);\n    }\n\n    Request.prototype.getUrl = function getUrl() {\n        return Url(this);\n    };\n\n    Request.prototype.getBody = function getBody() {\n        return this.body;\n    };\n\n    Request.prototype.respondWith = function respondWith(body, options) {\n        return new Response(body, assign(options || {}, { url: this.getUrl() }));\n    };\n\n    return Request;\n}();\n\n/**\n * Service for sending network requests.\n */\n\nvar CUSTOM_HEADERS = { 'X-Requested-With': 'XMLHttpRequest' };\nvar COMMON_HEADERS = { 'Accept': 'application/json, text/plain, */*' };\nvar JSON_CONTENT_TYPE = { 'Content-Type': 'application/json;charset=utf-8' };\n\nfunction Http(options) {\n\n    var self = this || {},\n        client = Client(self.$vm);\n\n    defaults(options || {}, self.$options, Http.options);\n\n    Http.interceptors.forEach(function (handler) {\n        client.use(handler);\n    });\n\n    return client(new Request(options)).then(function (response) {\n\n        return response.ok ? response : Promise$1.reject(response);\n    }, function (response) {\n\n        if (response instanceof Error) {\n            error(response);\n        }\n\n        return Promise$1.reject(response);\n    });\n}\n\nHttp.options = {};\n\nHttp.headers = {\n    put: JSON_CONTENT_TYPE,\n    post: JSON_CONTENT_TYPE,\n    patch: JSON_CONTENT_TYPE,\n    delete: JSON_CONTENT_TYPE,\n    custom: CUSTOM_HEADERS,\n    common: COMMON_HEADERS\n};\n\nHttp.interceptors = [before, timeout, method, body, jsonp, header, cors];\n\n['get', 'delete', 'head', 'jsonp'].forEach(function (method) {\n\n    Http[method] = function (url, options) {\n        return this(assign(options || {}, { url: url, method: method }));\n    };\n});\n\n['post', 'put', 'patch'].forEach(function (method) {\n\n    Http[method] = function (url, body, options) {\n        return this(assign(options || {}, { url: url, method: method, body: body }));\n    };\n});\n\nfunction Resource(url, params, actions, options) {\n\n    var self = this || {},\n        resource = {};\n\n    actions = assign({}, Resource.actions, actions);\n\n    each(actions, function (action, name) {\n\n        action = merge({ url: url, params: params || {} }, options, action);\n\n        resource[name] = function () {\n            return (self.$http || Http)(opts(action, arguments));\n        };\n    });\n\n    return resource;\n}\n\nfunction opts(action, args) {\n\n    var options = assign({}, action),\n        params = {},\n        body;\n\n    switch (args.length) {\n\n        case 2:\n\n            params = args[0];\n            body = args[1];\n\n            break;\n\n        case 1:\n\n            if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n                body = args[0];\n            } else {\n                params = args[0];\n            }\n\n            break;\n\n        case 0:\n\n            break;\n\n        default:\n\n            throw 'Expected up to 4 arguments [params, body], got ' + args.length + ' arguments';\n    }\n\n    options.body = body;\n    options.params = assign({}, options.params, params);\n\n    return options;\n}\n\nResource.actions = {\n\n    get: { method: 'GET' },\n    save: { method: 'POST' },\n    query: { method: 'GET' },\n    update: { method: 'PUT' },\n    remove: { method: 'DELETE' },\n    delete: { method: 'DELETE' }\n\n};\n\nfunction plugin(Vue) {\n\n    if (plugin.installed) {\n        return;\n    }\n\n    Util(Vue);\n\n    Vue.url = Url;\n    Vue.http = Http;\n    Vue.resource = Resource;\n    Vue.Promise = Promise$1;\n\n    Object.defineProperties(Vue.prototype, {\n\n        $url: {\n            get: function () {\n                return options(Vue.url, this, this.$options.url);\n            }\n        },\n\n        $http: {\n            get: function () {\n                return options(Vue.http, this, this.$options.http);\n            }\n        },\n\n        $resource: {\n            get: function () {\n                return Vue.resource.bind(this);\n            }\n        },\n\n        $promise: {\n            get: function () {\n                var _this = this;\n\n                return function (executor) {\n                    return new Vue.Promise(executor, _this);\n                };\n            }\n        }\n\n    });\n}\n\nif (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(plugin);\n}\n\nmodule.exports = plugin;","/*!\n * Vue.js v1.0.26\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    if (obj._isVue) {\n      delete obj._data[key];\n      obj._digest();\n    }\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && UA.indexOf('trident') > 0;\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\nvar iosVersionMatch = isIos && UA.match(/os ([\\d_]+)/);\nvar iosVersion = iosVersionMatch && iosVersionMatch[1].split('_');\n\n// detecting iOS UIWebView by indexedDB\nvar hasMutationObserverBug = iosVersion && Number(iosVersion[0]) >= 9 && Number(iosVersion[1]) >= 3 && !window.indexedDB;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined' && !hasMutationObserverBug) {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nvar _Set = undefined;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = function () {\n    this.set = Object.create(null);\n  };\n  _Set.prototype.has = function (key) {\n    return this.set[key] !== undefined;\n  };\n  _Set.prototype.add = function (key) {\n    this.set[key] = 1;\n  };\n  _Set.prototype.clear = function () {\n    this.set = Object.create(null);\n  };\n}\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    if (this.size === this.limit) {\n      removed = this.shift();\n    }\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\nvar formatComponentName = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n\n    warn = function (msg, vm) {\n      if (hasConsole && !config.silent) {\n        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n      }\n    };\n\n    formatComponentName = function (vm) {\n      var name = vm._isVue ? vm.$options.name : vm.name;\n      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  if (!node) return false;\n  var doc = node.ownerDocument.documentElement;\n  var parent = node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        // Firefox returns unknown for some \"Interactive elements.\"\n        !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el, options);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el, options);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el, options) {\n  // dynamic syntax\n  var exp = el.getAttribute('is');\n  if (exp != null) {\n    if (resolveAsset(options, 'components', exp)) {\n      el.removeAttribute('is');\n      return { id: exp };\n    }\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  if (process.env.NODE_ENV !== 'production') {\n    if (child.propsData && !vm) {\n      warn('propsData can only be used as an instantiation option.');\n    }\n  }\n  var options = {};\n  var key;\n  if (child['extends']) {\n    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n      parent = mergeOptions(parent, mixinOptions, vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @param {Boolean} warnMissing\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id, warnMissing) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  var res = assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n  }\n  return res;\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index or target element reference.\n *\n * @param {*} item\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE: isIE,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tisIos: isIos,\n\tiosVersionMatch: iosVersionMatch,\n\tiosVersion: iosVersion,\n\thasMutationObserverBug: hasMutationObserverBug,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initData().\n    this._data = {};\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path, vm) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path, last);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path, obj);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\nfunction noop() {}\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here because the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if (e.toString().match(/unsafe-eval|CSP/)) {\n        warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n      } else {\n        warn('Invalid expression. ' + 'Generated function body: ' + body);\n      }\n    }\n    return noop;\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat literal values as paths\n  !literalValueRE$1.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue.length = 0;\n  userQueue.length = 0;\n  has = {};\n  circular = {};\n  waiting = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  var _again = true;\n\n  _function: while (_again) {\n    _again = false;\n\n    runBatcherQueue(queue);\n    runBatcherQueue(userQueue);\n    // user watchers triggered more watchers,\n    // keep flushing until it depletes\n    if (queue.length) {\n      _again = true;\n      continue _function;\n    }\n    // dev tool hook\n    /* istanbul ignore if */\n    if (devtools && config.devtools) {\n      devtools.emit('flush');\n    }\n    resetBatcherState();\n  }\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (var i = 0; i < queue.length; i++) {\n    var watcher = queue[i];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n        break;\n      }\n    }\n  }\n  queue.length = 0;\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    // push watcher into appropriate queue\n    var q = watcher.user ? userQueue : queue;\n    has[id] = q.length;\n    q.push(watcher);\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushBatcherQueue);\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nvar seenObjects = new _Set();\nfunction traverse(val, seen) {\n  var i = undefined,\n      keys = undefined;\n  if (!seen) {\n    seen = seenObjects;\n    seen.clear();\n  }\n  var isA = isArray(val);\n  var isO = isObject(val);\n  if ((isA || isO) && Object.isExtensible(val)) {\n    if (val.__ob__) {\n      var depId = val.__ob__.dep.id;\n      if (seen.has(depId)) {\n        return;\n      } else {\n        seen.add(depId);\n      }\n    }\n    if (isA) {\n      i = val.length;\n      while (i--) traverse(val[i], seen);\n    } else if (isO) {\n      keys = Object.keys(val);\n      i = keys.length;\n      while (i--) traverse(val[keys[i]], seen);\n    }\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\nvar commentRE = /<!--/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n  var commentMatch = commentRE.test(templateString);\n\n  if (!tagMatch && !entityMatch && !commentMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment. However, iOS Safari has\n  // bug when using directly cloned template content with touch\n  // events and can cause crashes when the nodes are removed from DOM, so we\n  // have to treat template elements as string templates. (#2805)\n  /* istanbul ignore if */\n  if (isRealTemplate(node)) {\n    return stringToFragment(node.innerHTML);\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar IF = 2100;\nvar FOR = 2200;\nvar SLOT = 2300;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      var target = prevEl.nextSibling;\n      /* istanbul ignore if */\n      if (!target) {\n        // reset end anchor position in case the position was messed up\n        // by an external drag-n-drop library.\n        after(this.end, prevEl);\n        target = this.end;\n      }\n      frag.before(target);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = getTrackByKey(index, key, value, trackByKey);\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else if (Object.isExtensible(value)) {\n        def(value, id, frag);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * watcher's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\n/**\n * Get the track by key for an item.\n *\n * @param {Number} index\n * @param {String} key\n * @param {*} value\n * @param {String} [trackByKey]\n */\n\nfunction getTrackByKey(index, key, value, trackByKey) {\n  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    // #3029 only update when the value changes. This prevent\n    // browsers from overwriting values like selectionStart\n    value = _toString(value);\n    if (value !== this.el.value) this.el.value = value;\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var _this = this;\n\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', function () {\n      nextTick(_this.forceUpdate);\n    });\n    if (!inDoc(el)) {\n      nextTick(this.forceUpdate);\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n        }\n        value = value.replace(importantRE, '').trim();\n        this.el.style.setProperty(prop.kebab, value, isImportant);\n      } else {\n        this.el.style[prop.camel] = value;\n      }\n    } else {\n      this.el.style[prop.camel] = '';\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  if (camel !== 'filter' && camel in testEl.style) {\n    return {\n      kebab: prop,\n      camel: camel\n    };\n  }\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return {\n        kebab: prefixes[i] + prop,\n        camel: prefixed\n      };\n    }\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n\n      if (el[attr] !== attrValue) {\n        el[attr] = attrValue;\n      }\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (!value) {\n      this.cleanup();\n    } else if (typeof value === 'string') {\n      this.setClass(value.trim().split(/\\s+/));\n    } else {\n      this.setClass(normalize$1(value));\n    }\n  },\n\n  setClass: function setClass(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val) {\n        apply(this.el, val, addClass);\n      }\n    }\n    this.prevKeys = value;\n  },\n\n  cleanup: function cleanup(value) {\n    var prevKeys = this.prevKeys;\n    if (!prevKeys) return;\n    var i = prevKeys.length;\n    while (i--) {\n      var key = prevKeys[i];\n      if (!value || value.indexOf(key) < 0) {\n        apply(this.el, key, removeClass);\n      }\n    }\n  }\n};\n\n/**\n * Normalize objects and arrays (potentially containing objects)\n * into array of strings.\n *\n * @param {Object|Array<String|Object>} value\n * @return {Array<String>}\n */\n\nfunction normalize$1(value) {\n  var res = [];\n  if (isArray(value)) {\n    for (var i = 0, l = value.length; i < l; i++) {\n      var _key = value[i];\n      if (_key) {\n        if (typeof _key === 'string') {\n          res.push(_key);\n        } else {\n          for (var k in _key) {\n            if (_key[k]) res.push(k);\n          }\n        }\n      }\n    }\n  } else if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) res.push(key);\n    }\n  }\n  return res;\n}\n\n/**\n * Add or remove a class/classes on an element\n *\n * @param {Element} el\n * @param {String} key The class name. This may or may not\n *                     contain a space character, in such a\n *                     case we'll deal with multiple class\n *                     names at once.\n * @param {Function} fn\n */\n\nfunction apply(el, key, fn) {\n  key = key.trim();\n  if (key.indexOf(' ') === -1) {\n    fn(el, key);\n    return;\n  }\n  // The key contains one or more space characters.\n  // Since a class name doesn't accept such characters, we\n  // treat it as multiple classes.\n  var keys = key.split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    fn(el, keys[i]);\n  }\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      this.el.removeAttribute(':is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @param {Vue} vm\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions, vm) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.', vm);\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name, vm);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var inlineProps = vm.$options.propsData;\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (inlineProps && hasOwn(inlineProps, path)) {\n        initProp(vm, prop, inlineProps[path]);\n      }if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Process a prop with a rawValue, applying necessary coersions,\n * default values & assertions and call the given callback with\n * processed value.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} rawValue\n * @param {Function} fn\n */\n\nfunction processPropValue(vm, prop, rawValue, fn) {\n  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n  var value = rawValue;\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop);\n  }\n  value = coerceProp(prop, value, vm);\n  var coerced = value !== rawValue;\n  if (!assertProp(prop, value, vm)) {\n    value = undefined;\n  }\n  if (isSimple && !coerced) {\n    withoutConversion(function () {\n      fn(value);\n    });\n  } else {\n    fn(value);\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    defineReactive(vm, prop.path, value);\n  });\n}\n\n/**\n * Update a prop's value on a vm.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction updateProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    vm[prop.path] = value;\n  });\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, prop) {\n  // no default, return undefined\n  var options = prop.options;\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n * @param {Vue} vm\n */\n\nfunction assertProp(prop, value, vm) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = !type;\n  var expectedTypes = [];\n  if (type) {\n    if (!isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n    }\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value, vm) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  if (typeof coerce === 'function') {\n    return coerce(value);\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n    return value;\n  }\n}\n\n/**\n * Assert the type of a value\n *\n * @param {*} value\n * @param {Function} type\n * @return {Object}\n */\n\nfunction assertType(value, type) {\n  var valid;\n  var expectedType;\n  if (type === String) {\n    expectedType = 'string';\n    valid = typeof value === expectedType;\n  } else if (type === Number) {\n    expectedType = 'number';\n    valid = typeof value === expectedType;\n  } else if (type === Boolean) {\n    expectedType = 'boolean';\n    valid = typeof value === expectedType;\n  } else if (type === Function) {\n    expectedType = 'function';\n    valid = typeof value === expectedType;\n  } else if (type === Object) {\n    expectedType = 'object';\n    valid = isPlainObject(value);\n  } else if (type === Array) {\n    expectedType = 'array';\n    valid = isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  };\n}\n\n/**\n * Format type for output\n *\n * @param {String} type\n * @return {String}\n */\n\nfunction formatType(type) {\n  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n}\n\n/**\n * Format value\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      updateProp(child, prop, val);\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    oldId = oldId || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    removeClass(el, oldId + '-transition');\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props, vm);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && !isScript(node)) {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = _toString(value);\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          modifiers = parseModifiers(attr.name);\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName, true);\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nfunction isScript(el) {\n  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n      value.split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.', vm.$parent);\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    var nodes = content.childNodes;\n    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n      return;\n    }\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node, true);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n    }\n    var props = this._props;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key)) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, value, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        // force the expression into a statement so that\n        // it always dynamically resolves the method to call (#2670)\n        // kinda ugly hack, but does the job.\n        value = attrs[i].value;\n        if (isSimplePath(value)) {\n          value += '.apply(this, $arguments)';\n        }\n        handler = (vm._scope || vm._context).$eval(value, true);\n        handler._fromParent = true;\n        vm.$on(name.replace(eventRE), handler);\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop$1() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop$1;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data && this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value, true);\n    }\n    /* istanbul ignore if */\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String|Array<String>|Function} ...sortKeys\n * @param {Number} [order]\n */\n\nfunction orderBy(arr) {\n  var comparator = null;\n  var sortKeys = undefined;\n  arr = convertArray(arr);\n\n  // determine order (last argument)\n  var args = toArray(arguments, 1);\n  var order = args[args.length - 1];\n  if (typeof order === 'number') {\n    order = order < 0 ? -1 : 1;\n    args = args.length > 1 ? args.slice(0, -1) : args;\n  } else {\n    order = 1;\n  }\n\n  // determine sortKeys & comparator\n  var firstArg = args[0];\n  if (!firstArg) {\n    return arr;\n  } else if (typeof firstArg === 'function') {\n    // custom comparator\n    comparator = function (a, b) {\n      return firstArg(a, b) * order;\n    };\n  } else {\n    // string keys. flatten first\n    sortKeys = Array.prototype.concat.apply([], args);\n    comparator = function (a, b, i) {\n      i = i || 0;\n      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n    };\n  }\n\n  function baseCompare(a, b, sortKeyIndex) {\n    var sortKey = sortKeys[sortKeyIndex];\n    if (sortKey) {\n      if (sortKey !== '$key') {\n        if (isObject(a) && '$value' in a) a = a.$value;\n        if (isObject(b) && '$value' in b) b = b.$value;\n      }\n      a = isObject(a) ? getPath(a, sortKey) : a;\n      b = isObject(b) ? getPath(b, sortKey) : b;\n    }\n    return a === b ? 0 : a > b ? order : -order;\n  }\n\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(comparator);\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   * @param {Number} decimals Decimal places\n   */\n\n  currency: function currency(value, _currency, decimals) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    decimals = decimals != null ? decimals : 2;\n    var stringified = Math.abs(value).toFixed(decimals);\n    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    var length = args.length;\n    if (length > 1) {\n      var index = value % 10 - 1;\n      return index in args ? args[index] : args[length - 1];\n    } else {\n      return args[0] + (value === 1 ? '' : 's');\n    }\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          if (!definition.name) {\n            definition.name = id;\n          }\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.26';\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue);\n    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n    }\n  }\n}, 0);\n\nmodule.exports = Vue;","var Vue = require('vue');\n\nvar Item = require('../model/item');\n\nvar extend = require('extend');\nvar fecha = require('fecha');\n\nVue.http.interceptors.push(function(options, next) {\n    next(function(response) {\n        response.options = options;\n    });\n});\n\nvar UrlClass = function(url) {\n    this.raw = url;\n};\nUrlClass.prototype.toString = function () {\n    return encodeURIComponent(this.raw);\n};\n\nmodule.exports = {\n    template: '<div><tree :fetch=\"fetch\"></tree></div>',\n    props: {\n        config: {\n            type: Object,\n            required: true\n        },\n        fetch: Boolean,\n        storage: {\n            type: String,\n            required: true\n        }\n    },\n    stored: {\n        // store a data variable on storage basis:\n        // token: true\n        // store something globally:\n        // token: 'github'\n    },\n    data: function() {\n        var data = {\n            loginDone: false,\n            currentLogin: null,\n            appConfig: require('../config')\n        };\n        if (!this.$options.watch) {\n            this.$options.watch = {};\n        }\n        Object.keys(this.$options.stored).forEach(function(key) {\n            var storageKey;\n            if (this.$options.stored[key] === true) {\n                storageKey = this.storage + '_local_' + key;\n            } else {\n                storageKey = this.$options.stored[key] + '_' + key;\n            }\n            data[key] = localStorage.getItem(storageKey);\n            if (data[key]) {\n                data[key] = JSON.parse(data[key]);\n            }\n            this.$options.watch[key] = function(data) {\n                if (data === null) {\n                    localStorage.removeItem(storageKey)\n                } else {\n                    localStorage.setItem(storageKey, JSON.stringify(data));\n                }\n            };\n        }.bind(this));\n        return data;\n    },\n    computed: {\n        util: function() {\n            return require('../util');\n        },\n        proxy: function () {\n            if (this.config.proxy || this.appConfig.proxy.all && this.config.proxy !== false) {\n                return (typeof this.config.proxy === 'object' ? this.config : this.appConfig).proxy;\n            }\n            return false;\n        },\n        url: function () {\n            var proxyUrl, $proxy;\n            if (this.proxy) {\n                proxyUrl = this.proxy.url;\n                $proxy = new Vue({\n                    data: { url: null }\n                });\n            }\n            return function (url, base) {\n                if (base) {\n                    url = (base + '').replace(/\\/+$/, '') + '/' + (url + '').replace(/^\\/+/, '');\n                }\n                if ($proxy) {\n                    $proxy.url = new UrlClass(url);\n                    return $proxy.$interpolate(proxyUrl);\n                }\n                return url;\n            }\n        },\n        http: function() {\n            if (this.$options.http && typeof  this.$options.http === 'function') {\n                this.$options.http = this.$options.http.call(this);\n            }\n            var api = {},\n                base = this.$options.http ? this.$options.http.base : null,\n                request = (function (options) {\n                    if (!options.keepUrl) {\n                        options.url = this.url(options.url, base);\n                        options.keepUrl = true;\n                    }\n                    if (this.proxy && this.proxy.credentials !== options.credentials) {\n                        options.credentials = this.proxy.credentials;\n                    }\n                    return this.$promise(function (resolve, reject) {\n                        this.$http(options).then(\n                            function(response) {\n                                if (response.options.validate) {\n                                    response.reload = function () {\n                                        return request(options).then(resolve, reject);\n                                    };\n                                    response.isValid = function (isValid) {\n                                        if (isValid === false) {\n                                            throw 'Invalid response';\n                                        } else {\n                                            resolve(response);\n                                        }\n                                    };\n                                    response.options.validate.call(this, response, resolve);\n                                } else {\n                                    resolve(response);\n                                }\n                            }.bind(this),\n                            reject\n                        );\n                    });\n                }).bind(this);\n\n            ['get', 'delete', 'head', 'jsonp'].forEach(function(method) {\n                api[method] = function (url, options) {\n                    options = extend({}, options);\n                    options.method = method.toUpperCase();\n                    options.url = url;\n                    return request(options);\n                }\n            });\n\n            ['post', 'put', 'patch'].forEach(function(method) {\n                api[method] = function (url, data, options) {\n                    options = extend({}, options);\n                    options.method = method.toUpperCase();\n                    options.url = url;\n                    options.body = data;\n                    return request(options);\n                }\n            });\n            return api;\n        }\n    },\n    dateFormat: undefined,\n    methods: {\n        parseDate: function (date) {\n            if (date) {\n                return fecha.parse(date, this.$options.dateFormat);\n            }\n        },\n        createItem: function (data) {\n            data.storage = this.storage;\n            return new Item(data);\n        },\n        login: function(authenticate) {\n            if (!this.currentLogin) {\n                if (this.loginDone) {\n                    throw 'Login already done';\n                }\n                var open = this.$parent.open;\n                this.$parent.open = true;\n                var Login = this.$options.components['login'];\n                var login = new Login({\n                    el: this.$el.appendChild(document.createElement('div')),\n                    parent: this\n                });\n                if (this.config.loginHint) {\n                    login.hint = this.config.loginHint;\n                }\n                this.currentLogin = login.login(authenticate.bind(this)).then((function () {\n                    this.loginDone = true;\n                    this.$parent.open = open;\n                }).bind(this));\n            }\n            return this.currentLogin;\n        }\n    },\n    components: {\n        login: require('../components/login')\n    }\n};\n","module.exports = {\n    template: '<div></div>',\n    data: function () {\n        return {\n            x: undefined\n        };\n    },\n    ready: function () {\n        document.body.addEventListener('mousemove', this.drag);\n        var parent = this.$el.parentNode, defaultCursor = parent.style.cursor;\n        this.$el.addEventListener('mousedown', function (e) {\n            parent.style.cursor = 'col-resize';\n            var drag = function (e) {\n                this.x = e.pageX;\n            }.bind(this);\n            var leave = function () {\n                parent.style.cursor = defaultCursor;\n                parent.removeEventListener('mousemove', drag);\n                document.body.removeEventListener('mouseleave', leave);\n                document.body.removeEventListener('mouseup', leave);\n            }.bind(this);\n            parent.addEventListener('mousemove', drag);\n            document.body.addEventListener('mouseleave', leave);\n            document.body.addEventListener('mouseup', leave);\n        }.bind(this));\n    }\n};","module.exports = '<div class=\"items-grid\">\\n    <item inline-template v-for=\"item in items | limitBy limit\" :item=\"item\" track-by=\"id\">\\n        <div v-on:click.prevent=\"select\" :title=\"title\" v-on:dblclick.prevent=\"open\" class=\"item{{selected ? \\' selected\\' : \\'\\'}}\">\\n            <span v-if=\"item.type !== \\'file\\'\" class=\"glyphicon glyphicon-folder-open{{item.type !== \\'dir\\' ? \\' item-ext\\' : \\'\\'}}\" data-ext=\"{{t(\\'types.\\'+item.type)}}\"></span>\\n            <span v-if=\"item.type === \\'file\\'\" class=\"glyphicon glyphicon-file item-ext\" data-ext=\"{{item.extension}}\"></span>\\n            <div v-if=\"item.thumbnail\" class=\"item-thumbnail\" v-bind:style=\"{backgroundImage: \\'url(\\' + item.thumbnail + \\')\\'}\"></div>\\n            <div>{{item.name}}</div>\\n        </div>\\n    </item>\\n</div>\\n';","var fecha = require('fecha');\nvar util = require('../../util');\n\nmodule.exports = {\n    template: require('./grid.html'),\n    props: {\n        items: Array,\n        storage: String,\n        limit: Number\n    },\n    components: {\n        item: {\n            props: {\n                item: Object\n            },\n            data: function () {\n                return {\n                    picked: require('../../model/pick')\n                }\n            },\n            computed: {\n                selected: function() {\n                    return this.picked.contains(this.item);\n                },\n                title: function () {\n                    var fields = {}, item = this.item;\n                    fields.type = (item.type === 'file' && item.extension ? item.extension.toUpperCase() + '-' : '') + this.t('types.' + item.type);\n                    if (item.id.split('/').pop() === item.name) {\n                        fields.path = ('/' + item.id).replace(/^\\/+/, '/');\n                    } else {\n                        fields.id = item.id;\n                    }\n                    if (item.created) {\n                        fields.created = fecha.format(item.created, this.t('date.full'));\n                    }\n                    if (item.modified && (!item.created || item.modified > item.created)) {\n                        fields.modified = fecha.format(item.modified, this.t('date.full'));\n                    }\n                    if (parseInt(item.data.width) && parseInt(item.data.height)) {\n                        fields.dimensions = item.data.width + ' x ' + item.data.height;\n                    }\n                    if (parseInt(item.data.length)) {\n                        fields.length = util.formatTime(item.data.length);\n                    }\n                    if (parseInt(item.data.pages)) {\n                        fields.pages = item.data.pages;\n                    }\n\n                    var lines = [this.item.name];\n                    for (var key in fields) {\n                        if (fields.hasOwnProperty(key)) {\n                            lines.push(this.t('descriptor.' + key) + ': ' + fields[key]);\n                        }\n                    }\n                    return lines.join('\\n');\n                }\n            },\n            detached: function() {\n                if (this.picked.contains(this.item)) {\n                    this.picked.remove(this.item);\n                }\n            },\n            methods: {\n                select: function() {\n                    this.picked.toggle(this.item);\n                },\n                open: function() {\n                    if (this.item.type === 'file' && this.picked.isAllowed(this.item)) {\n                        this.picked.add(this.item);\n                        this.$dispatch('finish-pick');\n                    } else {\n                        this.$root.$broadcast('select-item', this.item);\n                    }\n                }\n            }\n        }\n    }\n};\n","module.exports = '<div\\n    class=\"items-container\"\\n    v-infinite-scroll=\"loadMore()\"\\n    infinite-scroll-distance=\"10\"\\n    infinite-scroll-listen-for-event=\"items-set\">\\n    <div v-if=\"selection.search && !storage\" class=\"items-search\">\\n        <div v-if=\"!$root.loading && !$root.summary.numItems && !$root.isLogin\" class=\"feedback\">{{t(\\'stage.nothingFound\\')}}</div>\\n        <template v-for=\"(storage, items) in selection.results\">\\n            <template v-if=\"items.length\">\\n                <h5>{{storages[storage].label || storage}}</h5>\\n                <div :is=\"layout\" v-ref:items :items=\"items.filter($root.visible)\" :storage=\"storage\" :limit=\"10\"></div>\\n                <span v-if=\"$refs.items && $refs.items.limit && items.filter($root.visible).length > $refs.items.limit\" v-on:click.prevent=\"selectStorage(storage)\" class=\"btn btn-link\">Show all...</span>\\n            </template>\\n        </template>\\n    </div>\\n    <div v-else>\\n        <template v-if=\"storage || selection.search\">\\n            <h5 v-if=\"selection.search && numStorages > 1\">{{storages[storage].label || storage}}</h5>\\n            <div v-if=\"!$root.loading && !$root.summary.numItems && !$root.isLogin\" class=\"feedback\">{{t(\\'stage.noItems\\')}}</div>\\n            <div :is=\"layout\" :items=\"selection.items.filter($root.visible)\" :storage=\"storage\"></div>\\n        </template>\\n        <template v-else>\\n            <div v-for=\"(storage, config) in storages\" v-on:click.prevent=\"$root.$broadcast(\\'select-item\\', {storage: storage})\" class=\"storage\">\\n                <span class=\"glyphicon glyphicon-folder-close\"></span>\\n                <h6>{{config.label || storage}}</h6>\\n                <p class=\"text-muted\">{{$interpolate(t(\\'adapters.\\' + config.adapter))}}</p>\\n            </div>\\n        </template>\\n    </div>\\n</div>\\n';","module.exports = {\n    template: require('./index.html'),\n    directives: {infiniteScroll: require('vue-infinite-scroll').infiniteScroll},\n    props: {\n        layout: {\n            type: String,\n            default: 'grid'\n        }\n    },\n    data: function () {\n        var selection = require('../../model/selection');\n        var storages = require('../../config').storages;\n        var keys = Object.keys(storages);\n        return {\n            selection: selection,\n            storage: keys.length > 1 ? null : keys[0],\n            storages: storages,\n            numStorages: keys.length,\n            picked: require('../../model/pick')\n        }\n    },\n    events: {\n        'select-item': function (item) {\n            this.storage = item.storage;\n            return true;\n        }\n    },\n    watch: {\n        'selection.search': function (sword) {\n            this.$nextTick(function () {\n                if (sword) {\n                    this.storage = undefined;\n                }\n            });\n        },\n        'selection.items': function (items) {\n            this.storage = items.storage;\n            this.$nextTick(function () {\n                if ((!this.search || this.storage) && items && !items.loading && items.total && items.length < items.total) {\n                    this.$dispatch('items-set');\n                }\n            })\n        }\n    },\n    methods: {\n        loadMore: function () {\n            this.$root.$broadcast('load-more-items', this.selection.items);\n        },\n        selectStorage: function (storage) {\n            this.storage = storage;\n            this.selection.items = this.$get('selection.results.' + storage);\n        }\n    },\n    components: {\n        grid: require('./grid')\n    }\n};\n","module.exports = {\n    template: require('./template.html'),\n    props: {\n        failure: Boolean,\n        username: String,\n        hint: String\n    },\n    data: function() {\n        return {\n            password: null\n        }\n    },\n    methods: {\n        submit: function (username, password) {\n            this.$dispatch('login-submit', username, password);\n        },\n        login: function (authenticate) {\n            return this.$promise(function (resolve) {\n                var root = this.$root;\n                root.isLogin = true;\n                this.$on('login-submit', function (username, password) {\n                    authenticate(username, password, function (result) {\n                        if (result) {\n                            this.$remove().$destroy();\n                            root.isLogin = false;\n                            resolve();\n                        } else {\n                            this.failure = true;\n                        }\n                    }.bind(this));\n                }.bind(this));\n            });\n        }\n    }\n};","module.exports = '<div class=\"panel panel-primary\">\\n    <div class=\"panel-heading\">\\n        <h3 class=\"panel-title\">{{t(\\'login.login\\')}}</h3>\\n    </div>\\n    <div v-if=\"hint\" class=\"panel-footer\">{{{hint}}}</div>\\n    <div class=\"panel-body\">\\n        <form v-on:submit.prevent=\"submit(username, password)\">\\n            <div v-if=\"failure\" class=\"alert alert-danger\" role=\"alert\">{{t(\\'login.failure\\')}}</div>\\n            <div class=\"form-group\">\\n                <input v-model=\"username\" type=\"text\" class=\"form-control\" id=\"loginUsername\" placeholder=\"{{t(\\'login.username\\')}}\">\\n            </div>\\n            <div class=\"form-group\">\\n                <!-- It\\'s not possible to get the password via javascript in chrome inside iframes (http://stackoverflow.com/a/38269071), so trick off auto complete -->\\n                <input type=\"password\" style=\"position:absolute;left:-200px;top:0;\" tabindex=\"-1\">\\n                <input v-model=\"password\" type=\"password\" class=\"form-control\" id=\"loginPassword\" placeholder=\"{{t(\\'login.password\\')}}\">\\n            </div>\\n            <button type=\"submit\" class=\"btn btn-default\">{{t(\\'login.login\\')}}</button>\\n        </form>\\n    </div>\\n</div>';","var Vue = require('vue');\n\nmodule.exports = {\n    template: require('./template.html'),\n    props: {\n        storage: Object,\n        open: Boolean,\n        id: String\n    },\n    data: function () {\n        return {\n            items: null,\n            selection: require('../../model/selection'),\n            pick: require('../../model/pick'),\n            fetch: false\n        };\n    },\n    ready: function () {\n        if (this.open) {\n            this.$children[0].select();\n        }\n    },\n    events: {\n        'select-item': function(item) {\n            this.selection.search = null;\n            if (item instanceof Vue) {\n                // Triggered from sidebar\n                item.items.storage = this.id;\n                this.selection.items = item.items;\n                this.pick.candidate(item.item);\n            } else {\n                // Triggered from stage\n                if (item.storage === this.id) {\n                    this.open = true;\n                    this.$nextTick(function () {\n                        this.$broadcast('select-item', item);\n                    });\n                } else {\n                    this.$broadcast('deselect-items');\n                }\n            }\n        },\n        'load-more-items': function (results) {\n            if (results.storage === this.id) {\n                this.$broadcast('load-more-items', results);\n            }\n        }\n    },\n    watch: {\n        'selection.search': function (sword) {\n            if (sword) {\n                this.pick.candidate(null);\n                this.$broadcast('deselect-items');\n                this.$set('selection.results.' + this.id, []);\n                var results = this.$get('selection.results.' + this.id);\n                results.storage = this.id;\n                this.fetch = true;\n                this.$nextTick(function() {\n                    this.$broadcast('search', sword, results);\n                });\n            }\n        }\n    },\n    components: {\n    }\n};\n","module.exports = '<tree :open=\"open\" :fetch=\"fetch\" :entry-point=\"storage.label || storage.adapter\">\\n    <div :is=\"storage.adapter\" :fetch=\"fetch\" :config=\"storage\" :storage=\"id\"></div>\\n</tree>\\n';","var Vue = require('vue');\nvar escapeRegExp = require('escape-string-regexp');\n\nvar selected;\n\nVue.component('tree', {\n    template: require('./tree.html'),\n    props: {\n        item: Object,\n        open: Boolean,\n        name: String,\n        selected: Boolean,\n        fetch: Boolean,\n        entryPoint: String,\n        main: Boolean,\n        types: {\n            type: Array,\n            default: function() {\n                return ['dir']\n            }\n        },\n        items: {\n            type: Array,\n            default: function () {\n                return [];\n            }\n        }\n    },\n    data: function () {\n        return {\n            search: this.$parent.search || {\n                sword: null,\n                results: null\n            }\n        }\n    },\n    computed: {\n        prefix: function () {\n            return this.name ? this.name + '-' : '';\n        }\n    },\n    created: function () {\n        if (!this.entryPoint) {\n            this.$dispatch(this.prefix + 'load-items', this);\n        }\n    },\n    events: {\n        'search': function (sword, results) {\n            this.search.sword = sword;\n            this.search.results = results;\n            this.doSearch();\n            return true;\n        },\n        'select-item': function (item) {\n            if (item instanceof Vue) {\n                if (item.entryPoint) {\n                    this.$nextTick(function () {\n                        this.$broadcast('select-item', 'entrypoint');\n                    });\n                    return false;\n                }\n                item = item.item;\n                if (!item) {\n                    return true;\n                }\n            }\n            if (item === 'entrypoint' && !this.item && !this.entryPoint) {\n                this.select(false);\n                return false;\n            }\n            if (item && this.item && item.id === this.item.id || this.entryPoint && !item.id) {\n                this.select();\n                return false;\n            } else if (item) {\n                for (var i = 0, l = this.items.length; i < l; i++) {\n                    if (this.items[i].id === item.id) {\n                        if (!this.open && !this.entryPoint) {\n                            this.open = true;\n                            this.$nextTick(function () {\n                                this.$broadcast('select-item', item);\n                            });\n                            return false;\n                        }\n                        break;\n                    }\n                }\n            }\n            return true;\n        },\n        '_open': function () {\n            this.open = true;\n            return true;\n        },\n        'deselect-items': function () {\n            this.selected = false;\n            return true;\n        }\n    },\n    methods: {\n        doSearch: function () {\n            if (this.search.sword) {\n                var regex = new RegExp(escapeRegExp(this.search.sword), 'i');\n                for (var i = 0, l = this.items.length; i < l ; i++) {\n                    if (regex.test(this.items[i].name)) {\n                        this.search.results.push(this.items[i]);\n                    }\n                }\n            }\n        },\n        select: function (doSwitch) {\n            if (doSwitch !== false) {\n                if (selected && selected !== this) {\n                    selected.selected = false;\n                }\n                selected = this;\n            }\n            this.selected = true;\n            (this.entryPoint ? this : this.$parent).$dispatch(this.prefix + 'select-item', this);\n            this.$parent.$dispatch('_open');\n        }\n    },\n    watch: {\n        items: function (items) {\n            if (this.selected) {\n                this.$nextTick(function () {\n                    this.$parent.$dispatch(this.prefix + 'select-item', this);\n                });\n            }\n            this.$nextTick(function () {\n                this.doSearch();\n            })\n        }\n    },\n    components: []\n});\n","module.exports = '<template v-if=\"entryPoint\">\\n    <ul class=\"tree storage\">\\n        <li>\\n            <span class=\"glyphicon glyphicon glyphicon-triangle-{{open ? \\'bottom\\' : \\'right\\'}}\" v-on:click=\"open = !open\"></span>\\n            <span class=\"item{{selected ? \\' selected\\' : \\'\\'}}\" v-on:click=\"select\">\\n            <span class=\"glyphicon glyphicon-folder-close\"></span> {{entryPoint}}</span>\\n            <div v-show=\"open\">\\n                <slot v-if=\"open || selected || fetch\">\\n                    <tree :name=\"name\" :fetch=\"fetch\"></tree>\\n                </slot>\\n            </div>\\n        </li>\\n    </ul>\\n</template>\\n<template v-else>\\n    <template v-if=\"item\">\\n        <span v-if=\"items && items.filterBy(\\'type\\', types).length\" class=\"glyphicon glyphicon glyphicon-triangle-{{open ? \\'bottom\\' : \\'right\\'}}\" v-on:click=\"open = !open\"></span>\\n        <span class=\"item{{selected ? \\' selected\\' : \\'\\'}}\" v-on:click=\"select\">\\n        <span class=\"glyphicon glyphicon-folder-close\"></span>\\n            {{item.name}}\\n        </span>\\n    </template>\\n    <div v-show=\"open || !item\">\\n        <ul v-if=\"open || !item || fetch\" class=\"{{item ? \\'\\' : \\'tree\\'}}\">\\n            <li v-for=\"item in items.filterBy(\\'type\\', types)\">\\n                <tree :item=\"item\" :name=\"name\" :fetch=\"fetch\" :types=\"types\"></tree>\\n            </li>\\n        </ul>\\n    </div>\\n</template>';","module.exports = {\n    title: 'AssetPicker',\n    storages: {\n        /* entermediaDB: {\n            adapter: 'entermediadb',\n            url: 'http://em9.entermediadb.org/openinstitute',\n            proxy: true\n        },\n        github: {\n            adapter: 'github',\n            username: 'netresearch',\n            repository: 'assetpicker'\n        } */\n    },\n    proxy: {\n        url: 'proxy.php?to={{url}}',\n        all: false\n    },\n    github: {\n        //tokenBla: 'j2332dwedcdj33dx3jm8389xdq'\n    },\n    pick: {\n        limit: 1,\n        types: ['file'],\n        extensions: []\n    },\n    language: 'auto',\n    debug: false,\n    adapters: {\n        github: {\n            src: 'adapter/github.js',\n            name: 'AssetPickerAdapterGithub'\n        },\n        entermediadb: {\n            src: 'adapter/entermediadb.js',\n            name: 'AssetPickerAdapterEntermediadb'\n        },\n        googledrive: {\n            src: 'adapter/googledrive.js',\n            name: 'AssetPickerAdapterGoogledrive'\n        }\n    }\n};\n","module.exports = '<div v-bind:class=\"[loaded ? \\'loaded\\' : \\'\\']\">\\n    <template v-if=\"config\">\\n        <nav class=\"navbar navbar-inverse navbar-static-top\">\\n            <div class=\"container-fluid\">\\n                <div class=\"navbar-header\">\\n                    <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-2\">\\n                        <span class=\"sr-only\">Toggle navigation</span>\\n                        <span class=\"icon-bar\"></span>\\n                        <span class=\"icon-bar\"></span>\\n                        <span class=\"icon-bar\"></span>\\n                    </button>\\n                    <a class=\"navbar-brand\" href=\"#\" v-on:click.prevent=\"$broadcast(\\'select-item\\', {}); selection.search = null\">{{config.title || t(\\'header.title\\')}}</a>\\n                </div>\\n\\n                <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-2\">\\n                    <ul class=\"nav navbar-nav navbar-right navbar-window-icons\">\\n                        <li><a v-on:click.prevent=\"maximized = !maximized\" title=\"{{t(\\'header.\\'+(maximized ? \\'min\\' : \\'max\\')+\\'imize\\')}}\"><span class=\"minmax {{maximized ? \\'min\\' : \\'max\\'}}imize\"></span></a></li>\\n                        <li><a v-on:click.prevent=\"cancel\" class=\"close-x\" title=\"{{t(\\'footer.cancel\\')}}\">&times;</a></li>\\n                    </ul>\\n                    <div class=\"navbar-form navbar-right\" role=\"search\">\\n                        <div class=\"form-group form-group-sm\">\\n                            <input type=\"text\" class=\"form-control\" v-model=\"selection.search\" placeholder=\"{{t(\\'header.search\\')}}\" debounce=\"500\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\"loader-progress{{loading ? \\' active\\' : \\'\\'}}\"></div>\\n        </nav>\\n        <div id=\"main\">\\n            <div id=\"sidebar\" :style=\"{width: $refs.handle.x + \\'px\\'}\">\\n                <div>\\n                    <storage v-for=\"(id, storage) in config.storages\" :open=\"$root.numStorages === 1\" :id=\"id\" :storage=\"storage\"></storage>\\n                </div>\\n            </div>\\n            <handle class=\"handle\" v-ref:handle></handle>\\n            <div id=\"stage\">\\n                <div v-if=\"!numStorages\">\\n                    <div class=\"alert alert-warning\" style=\"margin-top: 15px;\">No storages configured</div>\\n                </div>\\n                <items v-ref:items></items>\\n            </div>\\n        </div>\\n        <div id=\"footer\">\\n            <template v-if=\"selection.search\">\\n                <span v-if=\"loading\">{{t(\\'footer.searching\\')}}</span>\\n                <span v-if=\"summary.numItems\">{{$interpolate(t($refs.items.storage ? \\'footer.results\\' : \\'footer.resultsOverview\\'))}}</span>\\n            </template>\\n            <template v-if=\"!selection.search && $refs.items && $refs.items.storage\">\\n                <span v-if=\"loading && !summary.numItems\">{{t(\\'footer.loading\\')}}</span>\\n                <span v-if=\"summary.numItems\">{{$interpolate(t(\\'footer.items\\'))}}</span>\\n            </template>\\n\\n            <span v-if=\"!selection.search && $refs.items && !$refs.items.storage\">{{$interpolate(t(\\'footer.storages\\'))}}</span>\\n\\n            <span v-if=\"picked.length\">{{$interpolate(t(\\'footer.picked\\'))}}</span>\\n\\n            <button class=\"btn btn-sm btn-primary\" :disabled=\"!picked.length\" v-on:click=\"pick\">{{t(\\'footer.pick\\')}}</button>\\n            <button class=\"btn btn-sm btn-default\" v-on:click=\"cancel\">{{t(\\'footer.cancel\\')}}</button>\\n        </div>\\n    </template>\\n</div>';","var Vue = require('vue');\n\nVue.use(require('vue-resource'));\n\nvar i18nMixin = require('vue-i18n-mixin');\ni18nMixin.methods.t = i18nMixin.methods.translate;\nVue.mixin(i18nMixin);\n\nVue.http.interceptors.push(function(options, next) {\n    this.$root.loading++;\n    next(function(response) {\n        this.$root.loading--;\n    });\n});\n\nvar scriptURL = (function() {\n    var scripts = document.getElementsByTagName('script');\n    return scripts[scripts.length - 1].src;\n})();\n\nvar Util = require('./util');\nrequire('./components/tree');\n\nvar extend = require('extend');\n\nmodule.exports = Vue.extend({\n    template: require('./index.html'),\n    data: function () {\n        return {\n            picked: require('./model/pick'),\n            selection: require('./model/selection'),\n            maximized: false,\n            loading: 0, // In/decreased by http interceptor above\n            config: undefined,\n            loaded: false,\n            isLogin: false\n        }\n    },\n    translations: require('./locales'),\n    computed: {\n        numStorages: function () {\n            return this.config && this.config.storages ? Object.keys(this.config.storages).length : 0;\n        },\n        locale: function () {\n            var lang, available = ['en', 'de'];\n            if (!this.config || this.config.language === 'auto') {\n                lang = (navigator.language || navigator.userLanguage).replace(/^([a-z][a-z]).+$/, '$1');\n            } else {\n                lang = this.config.language;\n            }\n            if (available.indexOf(lang) < 0) {\n                lang = available[0];\n                if (this.config && this.config.language !== 'auto') {\n                    console.warn('Configured language %s is not available', this.config.language);\n                }\n            }\n            return lang;\n        },\n        summary: function () {\n            var summary = {numItems: 0, numStorages: 0},\n                getLength = function (items) {\n                    if (items.total) {\n                        var length = items.total;\n                        for (var i = 0, l = items.length; i < l; i++) {\n                            if (items[i].query !== items.query && this.visible(items[i])) {\n                                length++;\n                            }\n                        }\n                        return length;\n                    } else {\n                        return items.filter(this.visible).length;\n                    }\n                }.bind(this);\n            if (this.selection.search) {\n                for (var key in this.selection.results) {\n                    if (this.selection.results.hasOwnProperty(key)) {\n                        var l = getLength(this.selection.results[key]);\n                        summary.numItems += l;\n                        if (l > 0) {\n                            summary.numStorages++;\n                        }\n                    }\n                }\n            } else {\n                summary.numItems = getLength(this.selection.items);\n            }\n            return summary;\n        }\n    },\n    components: {\n        storage: require('./components/storage'),\n        items: require('./components/items'),\n        handle: require('./components/handle')\n    },\n    created: function () {\n        if (!this.$options.messaging && window.parent && window.parent !== window) {\n            var Messaging = require('../shared/util/messaging');\n            this.$options.messaging = new Messaging('*', window.parent);\n        }\n        var config = require('./config');\n        if (this.$options.config) {\n            extend(true, config, this.$options.config);\n        }\n        if (this.$options.messaging) {\n            this.$options.messaging.registerServer('app', this);\n            this.callPicker('getConfig').then(function(overrideConfig) {\n                extend(true, config, overrideConfig);\n                this.$dispatch('config-loaded', config);\n            }.bind(this));\n        } else {\n            this.$dispatch('config-loaded', config);\n        }\n    },\n    events: {\n        'config-loaded': function (config) {\n            Vue.config.debug = config.debug;\n            this.$set('config', config);\n            this.$nextTick(function () {\n                this.loadAdapters().then(function () {\n                    this.loaded = true;\n                    this.callPicker('_trigger', 'ready');\n                });\n            });\n            return true;\n        },\n        'finish-pick': function () {\n            this.pick();\n        }\n    },\n    watch: {\n        maximized: function (maximized) {\n            this.callPicker('_trigger', 'resize', maximized);\n        }\n    },\n    methods: {\n        loadAdapters: function () {\n            return this.$promise(function (resolve, reject) {\n                var baseAdapter = require('./adapter/base'),\n                    loadAdapters = [],\n                    loading = 0,\n                    storageComponent = this.$options.components.storage,\n                    loaded = function () {\n                        loading--;\n                        if (loading === 0) {\n                            resolve();\n                        }\n                    };\n                for (var storage in this.config.storages) {\n                    if (this.config.storages.hasOwnProperty(storage)) {\n                        var adapter = this.config.storages[storage].adapter;\n                        if (!adapter) {\n                            throw 'Missing adapter on storage ' + storage;\n                        }\n                        if (storageComponent.$options && storageComponent.$options.components[adapter]) {\n                            continue;\n                        }\n                        if (!this.config.adapters.hasOwnProperty(adapter)) {\n                            throw 'Adapter ' + adapter + ' is not configured';\n                        }\n                        if (loadAdapters.indexOf(adapter) < 0) {\n                            loadAdapters.push(adapter);\n                            loading++;\n                            (function (adapter, src, name) {\n                                if (!src.match(/^(https?:\\/\\/|\\/)/)) {\n                                    src = scriptURL.split('/').slice(0, -1).join('/') + '/' + src;\n                                }\n                                Util.loadScript(src, function () {\n                                    if (!window[name]) {\n                                        reject(name + ' could not be found');\n                                    }\n                                    window[name].extends = baseAdapter;\n                                    storageComponent.component(adapter, window[name]);\n                                    loaded();\n                                }.bind(this));\n                            }.bind(this))(adapter, this.config.adapters[adapter].src, this.config.adapters[adapter].name);\n                        }\n                    }\n                }\n            });\n        },\n        visible: function (item) {\n            return item.type !== 'file' || this.picked.isAllowed(item);\n        },\n        setPickConfig: function (config) {\n            this.config.pick = config;\n        },\n        callPicker: function(method) {\n            if (this.$options.messaging) {\n                var args = Array.prototype.slice.call(arguments, 0);\n                args[0] = 'picker.' + args[0];\n                return this.$options.messaging.call.apply(this.$options.messaging, args);\n            }\n        },\n        cancel: function() {\n            this.picked.clear();\n            this.callPicker('modal.close');\n        },\n        pick: function() {\n            this.callPicker('pick', this.picked.export());\n            this.picked.clear();\n        }\n    }\n});\n","module.exports = {\n    header: {\n        title: {\n            en: 'Explorer',\n            de: 'Explorer'\n        },\n        search: {\n            en: 'Search',\n            de: 'Suchen'\n        },\n        minimize: {\n            en: 'Minimize',\n            de: 'Verkleinern'\n        },\n        maximize: {\n            en: 'Maximize',\n            de: 'Maximieren'\n        }\n    },\n    login: {\n        username: {\n            en: 'User name',\n            de: 'Benutzername'\n        },\n        password: {\n            en: 'Password',\n            de: 'Passwort'\n        },\n        login: {\n            en: 'Login',\n            de: 'Anmelden'\n        },\n        failure: {\n            en: 'Your username or password were wrong',\n            de: 'Benutzername oder Passwort sind falsch'\n        }\n    },\n    types: {\n        file: {\n            en: 'File',\n            de: 'Datei'\n        },\n        dir: {\n            en: 'Directory',\n            de: 'Verzeichnis'\n        },\n        category: {\n            en: 'Category',\n            de: 'Kategorie'\n        }\n    },\n    descriptor: {\n        type: {\n            en: 'Item type',\n            de: 'Elementtyp'\n        },\n        path: {\n            en: 'Path',\n            de: 'Pfad'\n        },\n        id: {\n            en: 'ID',\n            de: 'ID'\n        },\n        dimensions: {\n            en: 'Dimensions',\n            de: 'Abmessungen'\n        },\n        created: {\n            en: 'Creation date',\n            de: 'Erstellungsdatum'\n        },\n        modified: {\n            en: 'Modification date',\n            de: 'Änderungsdatum'\n        },\n        length: {\n            en: 'Length',\n            de: 'Länge'\n        },\n        pages: {\n            en: 'Pages',\n            de: 'Seiten'\n        }\n    },\n    adapters: {\n        github: {\n            en: 'Repository {{config.username}}/{{config.repository}} on GitHub',\n            de: 'Repository {{config.username}}/{{config.repository}} auf GitHub'\n        },\n        entermediadb: {\n            en: 'EnterMediaDB on {{config.url}}',\n            de: 'EnterMediaDB auf {{config.url}}'\n        },\n        googledrive: {\n            en: 'Google Drive ({{config.email}})',\n            de: 'Google Drive ({{config.email}})'\n        }\n    },\n    stage: {\n        nothingFound: {\n            en: 'No proper results found',\n            de: 'Keine passenden Ergebnisse gefunden'\n        },\n        noItems: {\n            en: 'No items',\n            de: 'Keine Elemente'\n        }\n    },\n    footer: {\n        pick: {\n            en: 'Select',\n            de: 'Auswählen'\n        },\n        cancel: {\n            en: 'Cancel',\n            de: 'Abbrechen'\n        },\n        loading: {\n            en: 'Loading...',\n            de: 'Lade...'\n        },\n        searching: {\n            en: 'Searching...',\n            de: 'Suche...'\n        },\n        items: {\n            en: '{{summary.numItems}} item{{summary.numItems !== 1 ? \"s\" : \"\"}}',\n            de: '{{summary.numItems}} Element{{summary.numItems !== 1 ? \"e\" : \"\"}}'\n        },\n        results: {\n            en: '{{summary.numItems}} result{{summary.numItems !== 1 ? \"s\" : \"\"}}',\n            de: '{{summary.numItems}} Ergebnis{{summary.numItems !== 1 ? \"se\" : \"\"}}'\n        },\n        storages: {\n            en: '{{numStorages}} Storages',\n            de: '{{numStorages}} Speicher'\n        },\n        picked: {\n            en: '{{picked.length}} item{{picked.length !== 1 ? \"s\" : \"\"}} picked',\n            de: '{{picked.length}} Element{{picked.length !== 1 ? \"e\" : \"\"}} ausgewählt'\n        },\n        resultsOverview: {\n            en: '{{$interpolate(t(\"footer.results\")) + \" in \" + summary.numStorages + \" storage\" + (summary.numStorages !== 1 ? \"s\" : \"\")}}',\n            de: '{{$interpolate(t(\"footer.results\")) + \" in \" + summary.numStorages + \" Speicher\" + (summary.numStorages !== 1 ? \"n\" : \"\")}}'\n        }\n    },\n    date: {\n        // https://github.com/taylorhakes/fecha#formatting-tokens\n        full: {\n            en: 'MM/DD/YYYY HH:mm',\n            de: 'DD.MM.YYYY HH:mm'\n        }\n    }\n};\n","module.exports = function (data) {\n    if (typeof data === 'function') {\n        data = data();\n    }\n    if (!data.id) {\n        throw 'Item requires an ID';\n    }\n    if (!data.storage) {\n        throw 'Item requires the storage ID';\n    }\n    return item = {\n        id: data.id,\n        storage: data.storage,\n        query: data.query,\n        name: data.name,\n        type: data.type,\n        extension: data.type === 'file' ? data.extension || (data.name.match(/\\.([0-9a-z]+)$/i) || []).pop() : undefined,\n        thumbnail: data.thumbnail,\n        created: data.created,\n        modified: data.modified,\n        data: data.data\n    };\n};\n","var pick = [], candidate;\nvar config = require('../config');\n\npick.isAllowed = function (item) {\n    var conf = config.pick;\n    return conf.types.indexOf(item.type) > -1 && (!conf.extensions || !conf.extensions.length || conf.extensions.indexOf(item.extension) > -1);\n};\npick.contains = function (item) {\n    for (var i = 0, l = pick.length; i < l; i++) {\n        if (pick[i].id === item.id && pick[i].storage === item.storage) {\n            return true;\n        }\n    }\n};\npick.candidate = function (item) {\n    if (item) {\n        this.add(item);\n    }\n    candidate = item;\n};\npick.toggle = function (item) {\n    if (this.contains(item)) {\n        this.remove(item);\n    } else {\n        this.add(item);\n    }\n};\npick.add = function (item) {\n    if (!this.contains(item) && this.isAllowed(item)) {\n        if (candidate && item !== candidate && this.contains(candidate)) {\n            this.remove(candidate);\n        }\n        while (config.pick.limit && this.length >= config.pick.limit) {\n            this.shift();\n        }\n        this.push(item);\n    }\n};\npick.remove = function (item) {\n    for (var i = 0, l = this.length; i < l; i++) {\n        var next = this.shift();\n        if (next.id !== item.id || next.storage !== item.storage) {\n            pick.push(next);\n        }\n    }\n    if (!pick.length && candidate && item !== candidate && this.isAllowed(candidate)) {\n        this.push(candidate);\n    }\n};\npick.clear = function () {\n    while (this.length) {\n        this.pop();\n    }\n};\npick.export = function () {\n    return config.pick.limit === 1 ? this[0] : this.slice(0);\n};\n\nmodule.exports = pick;","module.exports = {\n    storage: null,\n    search: null,\n    items: [],\n    results: {}\n};","var Vue = require('vue');\nVue.filter('encodeURI', function(data) {\n    return encodeURI(data);\n});\nVue.filter('encodeURIComponent', function(data) {\n    return encodeURIComponent(data);\n});\n\nArray.prototype.filterBy = function (key, value) {\n    var values = value.indexOf ? value : [value];\n    return this.filter(function(arrayValue) {\n        if (typeof arrayValue === \"object\") {\n            return values.indexOf(arrayValue[key]) > -1;\n        }\n        return false;\n    });\n};\n\nvar params;\n\nwindow.getParams = function () {\n    if (params === undefined) {\n        params = {};\n        var query = window.location.search.substring(1);\n        var vars = query.split('&');\n        for (var i = 0; i < vars.length; i++) {\n            var pair = vars[i].split('=');\n            params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n        }\n    }\n    return params;\n};\nwindow.getParam = function (name) {\n    return window.getParams()[name];\n};\n\nmodule.exports = {\n    /**\n     * Render seconds to HH:MM:SS format\n     *\n     * @param time\n     * @returns {string}\n     */\n    formatTime: function (time) {\n        // http://stackoverflow.com/a/6313008\n        var sec_num = parseInt(time + '', 10); // don't forget the second param\n        var hours   = Math.floor(sec_num / 3600);\n        var minutes = Math.floor((sec_num - (hours * 3600)) / 60);\n        var seconds = sec_num - (hours * 3600) - (minutes * 60);\n\n        if (hours   < 10) {hours   = \"0\"+hours;}\n        if (minutes < 10) {minutes = \"0\"+minutes;}\n        if (seconds < 10) {seconds = \"0\"+seconds;}\n        return hours+':'+minutes+':'+seconds;\n    },\n    /**\n     * Load a script\n     *\n     * @param {string} url\n     * @param {function} callback\n     */\n    loadScript: function (url, callback) {\n        // Adding the script tag to the head as suggested before\n        var head = document.getElementsByTagName('head')[0];\n        var script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.src = url;\n\n        // Then bind the event to the callback function.\n        // There are several events for cross browser compatibility.\n        script.onreadystatechange = callback;\n        script.onload = callback;\n\n        // Fire the loading\n        head.appendChild(script);\n    }\n};","module.exports = function(protoProps) {\n    var result = function () {\n        if (this.construct) {\n            this.construct.apply(this, arguments);\n        }\n    };\n\n    result.prototype = result;\n    Object.keys(protoProps).forEach(function(key) {\n        result.prototype[key] = protoProps[key];\n    });\n\n    return result;\n};\n","var uid = require('./uid');\n\nmodule.exports = require('./createClass')({\n    construct: function(origin, windowObject) {\n        var eventMethod = window.addEventListener ? \"addEventListener\" : \"attachEvent\";\n        var eventer = window[eventMethod];\n        var messageEvent = eventMethod == \"attachEvent\" ? \"onmessage\" : \"message\";\n        eventer(messageEvent, function(e) {\n            var origin = e.origin || e.originalEvent.origin;\n            if (e.source === this.window && origin === this.origin || this.origin === '*') {\n                this.handle(e.data);\n            }\n        }.bind(this), false);\n\n        this.origin = origin;\n        this.window = windowObject;\n        this.servers = {};\n        this._handlers = {};\n    },\n    registerServer: function (name, object) {\n        this.servers[name] = object;\n    },\n    _createHandler: function() {\n        var handler = { callbacks: [] };\n        handler.then = function (callback) {\n            if (handler.hasOwnProperty('_result')) {\n                callback(handler._result);\n            } else {\n                handler.callbacks.push(callback);\n            }\n            return handler;\n        };\n        return handler;\n    },\n    call: function(method) {\n        var arguments = Array.prototype.slice.call(arguments, 1);\n        var id = uid(), handler = this._createHandler();\n        this._handlers[id] = handler;\n        this.window.postMessage({id: id, method: method, arguments: arguments}, this.origin);\n        return handler;\n    },\n    handle: function(message) {\n        if (message.method === 'resolve') {\n            if (this._handlers[message.id]) {\n                var handler = this._handlers[message.id];\n                for (var i = 0, l = handler.callbacks.length; i < l; i++) {\n                    handler.callbacks[i](message.result);\n                }\n                handler._result = message.result;\n                delete this._handlers[message.id];\n            }\n        } else {\n            var methodPath = message.method.split('.');\n            var method = methodPath.pop();\n            var target = this.servers;\n            while (target && methodPath.length) {\n                target = target[methodPath.shift()];\n            }\n            if (!target || !target[method]) {\n                throw 'Unknown method \"' + message.method + '\"';\n            }\n            var result = target[method].apply(target, message.arguments);\n            var resolve = function(res) {\n                // It might occure, that the id is reset, when the target frame is removed\n                if (message.id) {\n                    this.window.postMessage({method: 'resolve', id: message.id, result: res}, this.origin);\n                }\n            }.bind(this);\n            if (typeof result === 'function') {\n                result(resolve);\n            } else {\n                resolve(result);\n            }\n        }\n    }\n});\n","module.exports = function uid () {\n    return '' + Math.random().toString(36).substr(2, 9);\n};\n"],"sourceRoot":"/source/"}