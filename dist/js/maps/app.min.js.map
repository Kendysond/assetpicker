{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/browserify/node_modules/process/browser.js","app.min.js","node_modules/escape-string-regexp/index.js","node_modules/extend/index.js","node_modules/vue-i18n-mixin/index.js","node_modules/vue-infinite-scroll/vue-infinite-scroll.js","node_modules/vue-resource/dist/vue-resource.common.js","node_modules/vue/dist/vue.common.js","src/js/app/components/handle.js","src/js/app/components/items/grid.html","src/js/app/components/items/grid.js","src/js/app/components/items/index.html","src/js/app/components/items/index.js","src/js/app/components/loader.js","src/js/app/components/login/index.js","src/js/app/components/login/template.html","src/js/app/components/storage/adapter/base.js","src/js/app/components/storage/adapter/entermediadb/index.js","src/js/app/components/storage/adapter/entermediadb/template.html","src/js/app/components/storage/adapter/github/index.js","src/js/app/components/storage/index.js","src/js/app/components/storage/template.html","src/js/app/components/tree/index.js","src/js/app/components/tree/tree.html","src/js/app/config.js","src/js/app/index.js","src/js/app/locales.js","src/js/app/model/item.js","src/js/app/model/pick.js","src/js/app/model/selection.js","src/js/app/util.js","src/js/shared/util/createClass.js","src/js/shared/util/messaging.js","src/js/shared/util/uid.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","this","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","len","run","Item","array","noop","process","nextTick","args","Array","arguments","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","name","cwd","chdir","dir","umask","2","matchOperatorsRe","str","TypeError","replace","3","hasOwn","Object","hasOwnProperty","toStr","toString","isArray","arr","isPlainObject","obj","hasOwnConstructor","hasIsPrototypeOf","constructor","key","extend","options","src","copy","copyIsArray","clone","target","deep","4","ready","$root","locale","$set","methods","translate","namespace","data","$options","translations","translation","split","reduce","b","index","console","warn","5","global","factory","define","amd","infiniteScroll","install","Vue","directive","throttle","fn","delay","now","lastExec","timer","context","execute","Date","diff","getScrollTop","element","window","Math","max","pageYOffset","document","documentElement","scrollTop","getComputedStyle","defaultView","getScrollEventTarget","currentNode","tagName","nodeType","overflowY","parentNode","getVisibleHeight","clientHeight","getElementTop","getBoundingClientRect","top","isAttached","doBind","binded","el","scrollEventTarget","scrollListener","doCheck","bind","addEventListener","disabledExpr","getAttribute","disabled","vm","$watch","value","immediateCheck","Boolean","$get","distanceExpr","distance","Number","isNaN","immediateCheckExpr","eventName","$on","force","viewportScrollTop","viewportBottom","shouldTrigger","scrollHeight","elementBottom","offsetHeight","expression","bindTryCount","tryBind","unbind","removeEventListener","use","6","Promise$2","executor","state","PENDING","undefined","deferred","promise","x","resolve","reject","Promise$1","PromiseObj","Util","util","debug","config","silent","msg","error","cb","ctx","trim","isString","val","isBoolean","isFunction","isObject","getPrototypeOf","isFormData","FormData","when","fulfilled","rejected","then","opts","merge","$vm","each","iterator","slice","forEach","source","_merge","defaults","_assign","root","next","url","match","query","urlParams","keys","Url","params","indexOf","expand","variables","tmpl","parse","expanded","vars","template","operators","_","literal","operator","values","charAt","substr","variable","tmp","exec","getValues","separator","join","encodeReserved","modifier","result","isDefined","substring","parseInt","encodeValue","isKeyOperator","filter","k","encodeURIComponent","map","part","test","encodeURI","transform","self","transforms","handler","serialize","scope","hash","plain","add","xdrClient","request","xdr","XDomainRequest","event","response","respondWith","responseText","status","statusText","abort","open","method","getUrl","onload","onerror","ontimeout","onprogress","send","getBody","cors","crossOrigin","SUPPORTS_CORS","client","emulateHTTP","requestUrl","protocol","ORIGIN_URL","host","body","emulateJSON","headers","JSON","stringify","contentType","json","text","jsonpClient","script","jsonp","callback","random","type","removeChild","createElement","async","appendChild","before","header","toUpperCase","assign","Http","common","custom","toLowerCase","xhrClient","xhr","XMLHttpRequest","parseHeaders","getAllResponseHeaders","progress","upload","credentials","withCredentials","setRequestHeader","row","Client","reqHandlers","pop","resHandlers","unshift","sendRequest","interceptors","Request","ok","Resource","actions","resource","action","$http","plugin","installed","http","Promise","defineProperties","$url","get","$resource","$promise","_this","RESOLVED","REJECTED","all","iterable","resolver","count","race","p$1","called","notify","reason","shift","onResolved","onRejected","p","ie","documentMode","escape","href","port","hostname","pathname","search","location","classCallCheck","instance","Constructor","Response","_ref","blob","Blob","CUSTOM_HEADERS","X-Requested-With","COMMON_HEADERS","Accept","JSON_CONTENT_TYPE","Content-Type","put","post","patch","delete","save","update","remove","7","set","_isVue","_data","ob","__ob__","convert","dep","vms","_proxy","_digest","del","_unproxy","isLiteral","exp","literalValueRE","isReserved","c","charCodeAt","_toString","toNumber","parsed","toBoolean","stripQuotes","camelize","camelizeRE","toUpper","hyphenate","hyphenateRE","classify","classifyRE","toArray","list","start","ret","to","from","OBJECT_STRING","def","enumerable","defineProperty","writable","configurable","_debounce","func","wait","timestamp","later","last","cancellable","cancelled","cancel","looseEqual","Cache","limit","size","head","tail","_keymap","create","pushFilter","lastFilterIndex","tokens","filterTokenRE","processFilterArg","filters","arg","reservedArgRE","dynamic","stripped","parseDirective","hit","cache$1","inSingle","inDouble","curly","square","paren","prev","escapeRegex","regexEscapeRE","compileRegex","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","RegExp","htmlRE","cache","parseText","html","first","oneTime","lastIndex","tag","tokensToExp","token","formatToken","single","$eval","inlineFilters","filterRE","appendWithTransition","applyTransition","beforeWithTransition","removeWithTransition","direction","op","transition","__v_trans","hooks","transitionEndEvent","_isCompiled","$parent","selector","querySelector","NODE_ENV","inDoc","node","doc","ownerDocument","parent","contains","getAttr","_attr","removeAttribute","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","prepend","firstChild","replaceChild","useCapture","getClass","classname","className","baseVal","setClass","cls","isIE9","namespaceURI","setAttribute","addClass","classList","cur","removeClass","tar","extractContent","asFragment","child","rawContent","isTemplate","isFragment","content","hasChildNodes","trimNode","createDocumentFragment","isTrimmable","lastChild","createAnchor","persist","anchor","createComment","createTextNode","__v_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","removeNodeRange","frag","onRemoved","removed","done","nodes","getOuterHTML","outerHTML","container","cloneNode","innerHTML","checkComponentAttr","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","id","is","expectedTag","_componentNameMap","isUnknownElement","mergeData","toVal","fromVal","mergeAssets","parentVal","childVal","res","guardArrayAssets","guardComponents","components","ids","guardProps","props","assets","asset","mergeOptions","mergeField","strat","strats","defaultStrat","propsData","mixins","mixin","mixinOptions","warnMissing","camelizedId","Dep","uid$1","subs","withoutConversion","shouldConvert","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","__proto__","observe","isExtensible","addVm","defineReactive","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","newVal","initMixin","_init","$el","$children","$refs","$els","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_isBeingDestroyed","_vForRemoving","_unlinkFn","_context","_scope","_frag","children","_updateRef","_callHook","_initState","_initEvents","$mount","getPathCharType","ch","formatSubPath","path","trimmed","maybeUnescapeQuote","nextChar","mode","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","raw","parsePath","pathCache","getPath","parseExpression","setPath","original","warnNonExistent","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","saveRE","wsRE","identRE","makeGetterFn","Function","compileSetter","needSet","expressionCache","isSimplePath","pathTestRE","literalValueRE$1","resetBatcherState","userQueue","has","circular","waiting","flushBatcherQueue","_again","runBatcherQueue","devtools","watcher","_maxUpdateCount","pushWatcher","q","user","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","depIds","_Set","newDepIds","prevError","twoWay","queued","shallow","traverse","seen","seenObjects","clear","isA","isO","depId","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","commentMatch","commentRE","wrap","efault","depth","prefix","suffix","nodeToFragment","textContent","clonedNode","querySelectorAll","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","shouldClone","idSelectorCache","getElementById","Fragment","linker","parentFrag","childFrags","inserted","unlink","childNodes","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","callHook","attach","shouldCallRemove","beforeRemove","detach","destroy","FragmentFactory","cid","cacheId","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","floor","getTrackByKey","trackByKey","getValue","multi","init","selected","_value","indexOf$1","keyFilter","codes","charCode","keyCodes","keyCode","stopFilter","stopPropagation","preventFilter","preventDefault","selfFilter","currentTarget","normalize","prop","propCache","camel","upper","testEl","prefixed","prefixes","style","kebab","camelPrefixes","normalize$1","_key","callActivateHooks","total","compileProps","propOptions","attr","names","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","settablePathRE","parentPath","lowerCaseName","required","makePropsLinkFn","_props","inlineProps","initProp","_bindDir","propDef","processPropValue","rawValue","isSimple","getPropDefaultValue","coerceProp","coerced","assertProp","updateProp","valid","expectedTypes","assertedType","assertType","expectedType","formatType","formatValue","validator","coerce","String","pushJob","job","queue$1","flush","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","TYPE_TRANSITION","TYPE_ANIMATION","m","isHidden","rect","width","height","offsetWidth","getClientRects","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","isScript","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","sort","directiveComparator","_bind","descriptor","priority","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","$remove","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","onRE","plural","selfDirs","compileTextNode","compileElement","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","directives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","component","ref","internalDirectives","modifiers","componentLinkFn","skip","previousElementSibling","matched","dirName","rawName","termDef","j","modifierRE","dirAttrRE","DEFAULT_TERMINAL_PRIORITY","parseModifiers","pushDir","interpTokens","hasOneTimeToken","hasOneTime","interp","dirDef","some","transitionRE","bindRE","makeNodeLinkFn","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","resolveSlots","contents","_slotContents","extractFragment","stateMixin","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","dataFn","oldData","removeVm","computed","userDef","metas","_meta","eventsMixin","registerComponentEvents","eventRE","_fromParent","registerCallbacks","handlers","register","onAttached","callAttach","onDetached","callDetach","events","watch","_initDOMHooks","hook","$emit","noop$1","Directive","_locked","_bound","_listeners","_host","_vue_directives","lifecycleMixin","refs","_compile","_initElement","rootLinker","contentLinkFn","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","_destroy","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","$destroy","teardown","$off","miscMixin","_applyFilters","oldValue","write","offset","read","_resolveComponent","resolved","requested","pendingCallbacks","cbs","dataAPI","clean","asStatement","$arguments","$delete","sync","immediate","filterRE$1","$interpolate","$log","log","domAPI","insert","op1","op2","targetIsDetached","shouldCallHook","append","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$before","$after","inDocument","realCb","eventsAPI","modifyListenerCount","hookRE","$once","splice","isSource","shouldPropagate","hasParentCbs","$broadcast","$dispatch","lifecycleAPI","$compile","limitBy","filterBy","delimiter","convertArray","item","$value","$key","orderBy","baseCompare","sortKeyIndex","sortKey","sortKeys","order","comparator","firstArg","installGlobalAPI","createClass","elementDirectives","transitions","partials","compiler","parsers","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","definition","inBrowser","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","navigator","userAgent","isIE","isAndroid","isIos","iosVersionMatch","iosVersion","hasMutationObserverBug","indexedDB","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","setImmediate","counter","observer","textNode","characterData","Set","entry","newer","older","returnEntry","freeze","warnExpressionErrors","_delimitersChanged","_propBindingModes","formatComponentName","hasConsole","HTMLUnknownElement","HTMLElement","optionMergeStrategies","instanceData","defaultData","created","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","activate","addSub","sub","removeSub","addDep","arrayProto","getOwnPropertyNames","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","alias","_withLock","$index","current","text$1","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","image","circle","ellipse","line","polygon","polyline","placeholder","swap","_watcher","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","IF","FOR","SLOT","uid$3","vFor","inMatch","itMatch","isOption","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","model","__v_model","forceUpdate","staggerAmount","getStagger","warnDuplicate","trans","stagger","_preProcess","_postProcess","vIf","invalid","nextElementSibling","elseEl","elseFrag","elseFactory","show","toggle","display","text$2","isRange","composing","listener","focused","rawListener","hasjQuery","jQuery","afterBind","radio","checked","select","multiple","initValue","selectedIndex","checkbox","getBooleanValue","_trueValue","_falseValue","checkFilters","hasRead","hasWrite","_unbind","esc","tab","enter","space","up","right","down","on$1","acceptStatement","iframeBind","contentWindow","capture","stop","prevent","reset","importantRE","cssText","handleObject","handleSingle","isImportant","setProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","true-value","false-value","bind$1","attrValue","modelProp","setAttributeNS","cloak","for","if","vClass","cleanup","prevKeys","keepAlive","inlineTemplate","pendingComponentCb","Component","pendingRemovals","pendingRemovalCb","setComponent","invalidatePending","resolveComponent","mountComponent","unbuild","childVM","ComponentName","activateHooks","cached","getCached","newComponent","build","waitingFor","extraOptions","_isRouterView","defer","_inactive","transitionMode","bindingModes","childKey","parentKey","parentWatcher","childWatcher","transDurationProp","animDurationProp","raf","requestAnimationFrame","waitForTransitionStart","cancelPending","callHookWithCb","enterCancelled","enterNextTick","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","css","inlineStyles","computedStyles","transDuration","animDuration","onEnd","transition$1","oldId","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","unwatch","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","slot","fallback","elseBlock","digitsRE","indent","capitalize","uppercase","lowercase","currency","_currency","decimals","parseFloat","isFinite","stringified","abs","toFixed","_int","_float","sign","pluralize","_process","8","drag","defaultCursor","cursor","pageX","9","10","storage","picked","visible","isAllowed","../../model/pick","./grid.html","11","12","layout","default","selection","results","storages","select-item","selection.search","sword","selection.items","loading","loadMore","selectStorage","grid","../../config","../../model/selection","./grid","./index.html","vue-infinite-scroll","13","progressLoader","progressLoaderClass","vue","14","failure","username","hint","password","submit","login","authenticate","./template.html","15","16","UrlClass","fetch","loginDone","currentLogin","appConfig","proxy","proxyUrl","$proxy","base","api","keepUrl","validate","reload","isValid","createItem","Login","loginHint","../../../config","../../../model/item","../../login","17","Terms","terms","field","termsSet","extends","category","extensions","appConfig.pick","oldTerms","assembleTerms","newTerms","loadAssets","page","pages","hitsperpage","totalhits","isfolder","primaryfile","assettitle","extension","fileformat","thumbnail","sourcepath","load-more-items","category-load-items","tree","category-select-item","../../../../model/item","../base","18","19","Config","github","localStorage","getItem","load-items","repository","Authorization","file","nameA","nameB","removeItem","createToken","baseUrl","fingerprint","btoa","createAuthorization","note","scopes","setItem","../../../../config","20","pick","candidate","entermediadb","./adapter/entermediadb","./adapter/github","21","22","escapeRegExp","entryPoint","main","types","doSearch","_open","deselect-items","regex","doSwitch","./tree.html","escape-string-regexp","23","24","language","25","lang","available","userLanguage","numStorages","maximized","handle","messaging","registerServer","finish-pick","callPicker","setPickConfig","i18nMixin","Messaging","configOverride","entermediaDB","label","adapter","../shared/util/messaging","./components/handle","./components/items","./components/loader","./components/storage","./components/tree","./config","./locales","./model/pick","./model/selection","./util","vue-i18n-mixin","vue-resource","26","en","de","minimize","maximize","adapters","footer","27","28","conf","../config","29","30","arrayValue","getParams","pair","decodeURIComponent","getParam","31","protoProps","construct","32","origin","windowObject","eventMethod","eventer","messageEvent","originalEvent","servers","_handlers","object","_createHandler","_result","postMessage","message","methodPath","./createClass","./uid","33"],"mappings":"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","file":"app.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],2:[function(require,module,exports){\n'use strict';\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nmodule.exports = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn str.replace(matchOperatorsRe, '\\\\$&');\n};\n\n},{}],3:[function(require,module,exports){\n'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) {/**/}\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[0],\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t} else if ((typeof target !== 'object' && typeof target !== 'function') || target == null) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = target[name];\n\t\t\t\tcopy = options[name];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\ttarget[name] = extend(deep, clone, copy);\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n\n\tready: function() {\n\t\t// Make sure root locale exists\n\t\tif (!this.$root.locale)\n\t\t\tthis.$root.$set('locale', 'en');\n\t},\n\n\tmethods: {\n\t\ttranslate: function(namespace, locale) {\n\n\t\t\tlocale = locale || this.locale || this.$root.locale;\n\n\t\t\t// Fetch lang data\n\t\t\tvar data = this.$options.translations || this.$root.$options.translations;\n\n\t\t\ttry {\n\t\t\t\tvar translation = namespace.split('.').reduce(function(a, b, index) {\n\t\t\t\t\treturn typeof a === 'object' ? a[b] : data[a][b];\n\t\t\t\t})[locale];\n\t\t\t} catch(e) {\n\t\t\t\tconsole.warn('No translation found for namespace %s using locale %s (%s)', namespace, locale, e);\n\t\t\t}\n\t\t\treturn translation;\n\t\t}\n\t}\n}\n\n},{}],5:[function(require,module,exports){\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.infiniteScroll = global.infiniteScroll || {})));\n}(this, function (exports) { 'use strict';\n\n  var throttle = function throttle(fn, delay) {\n    var now, lastExec, timer, context, args; //eslint-disable-line\n\n    var execute = function execute() {\n      fn.apply(context, args);\n      lastExec = now;\n    };\n\n    return function () {\n      context = this;\n      args = arguments;\n\n      now = Date.now();\n\n      if (timer) {\n        clearTimeout(timer);\n        timer = null;\n      }\n\n      if (lastExec) {\n        var diff = delay - (now - lastExec);\n        if (diff < 0) {\n          execute();\n        } else {\n          timer = setTimeout(function () {\n            execute();\n          }, diff);\n        }\n      } else {\n        execute();\n      }\n    };\n  };\n\n  var getScrollTop = function getScrollTop(element) {\n    if (element === window) {\n      return Math.max(window.pageYOffset || 0, document.documentElement.scrollTop);\n    }\n\n    return element.scrollTop;\n  };\n\n  var getComputedStyle = document.defaultView.getComputedStyle;\n\n  var getScrollEventTarget = function getScrollEventTarget(element) {\n    var currentNode = element;\n    // bugfix, see http://w3help.org/zh-cn/causes/SD9013 and http://stackoverflow.com/questions/17016740/onscroll-function-is-not-working-for-chrome\n    while (currentNode && currentNode.tagName !== 'HTML' && currentNode.tagName !== 'BODY' && currentNode.nodeType === 1) {\n      var overflowY = getComputedStyle(currentNode).overflowY;\n      if (overflowY === 'scroll' || overflowY === 'auto') {\n        return currentNode;\n      }\n      currentNode = currentNode.parentNode;\n    }\n    return window;\n  };\n\n  var getVisibleHeight = function getVisibleHeight(element) {\n    if (element === window) {\n      return document.documentElement.clientHeight;\n    }\n\n    return element.clientHeight;\n  };\n\n  var getElementTop = function getElementTop(element) {\n    if (element === window) {\n      return getScrollTop(window);\n    }\n    return element.getBoundingClientRect().top + getScrollTop(window);\n  };\n\n  var isAttached = function isAttached(element) {\n    var currentNode = element.parentNode;\n    while (currentNode) {\n      if (currentNode.tagName === 'HTML') {\n        return true;\n      }\n      if (currentNode.nodeType === 11) {\n        return false;\n      }\n      currentNode = currentNode.parentNode;\n    }\n    return false;\n  };\n\n  var infiniteScroll = {\n    doBind: function doBind() {\n      if (this.binded) return; // eslint-disable-line\n      this.binded = true;\n\n      var directive = this;\n      var element = directive.el;\n\n      directive.scrollEventTarget = getScrollEventTarget(element);\n      directive.scrollListener = throttle(directive.doCheck.bind(directive), 200);\n      directive.scrollEventTarget.addEventListener('scroll', directive.scrollListener);\n\n      var disabledExpr = element.getAttribute('infinite-scroll-disabled');\n      var disabled = false;\n\n      if (disabledExpr) {\n        this.vm.$watch(disabledExpr, function (value) {\n          directive.disabled = value;\n          if (!value && directive.immediateCheck) {\n            directive.doCheck();\n          }\n        });\n        disabled = Boolean(directive.vm.$get(disabledExpr));\n      }\n      directive.disabled = disabled;\n\n      var distanceExpr = element.getAttribute('infinite-scroll-distance');\n      var distance = 0;\n      if (distanceExpr) {\n        distance = Number(directive.vm.$get(distanceExpr));\n        if (isNaN(distance)) {\n          distance = 0;\n        }\n      }\n      directive.distance = distance;\n\n      var immediateCheckExpr = element.getAttribute('infinite-scroll-immediate-check');\n      var immediateCheck = true;\n      if (immediateCheckExpr) {\n        immediateCheck = Boolean(directive.vm.$get(immediateCheckExpr));\n      }\n      directive.immediateCheck = immediateCheck;\n\n      if (immediateCheck) {\n        directive.doCheck();\n      }\n\n      var eventName = element.getAttribute('infinite-scroll-listen-for-event');\n      if (eventName) {\n        directive.vm.$on(eventName, function () {\n          directive.doCheck();\n        });\n      }\n    },\n\n    doCheck: function doCheck(force) {\n      var scrollEventTarget = this.scrollEventTarget;\n      var element = this.el;\n      var distance = this.distance;\n\n      if (force !== true && this.disabled) return; //eslint-disable-line\n      var viewportScrollTop = getScrollTop(scrollEventTarget);\n      var viewportBottom = viewportScrollTop + getVisibleHeight(scrollEventTarget);\n\n      var shouldTrigger = false;\n\n      if (scrollEventTarget === element) {\n        shouldTrigger = scrollEventTarget.scrollHeight - viewportBottom <= distance;\n      } else {\n        var elementBottom = getElementTop(element) - getElementTop(scrollEventTarget) + element.offsetHeight + viewportScrollTop;\n\n        shouldTrigger = viewportBottom + distance >= elementBottom;\n      }\n\n      if (shouldTrigger && this.expression) {\n        this.vm.$get(this.expression);\n      }\n    },\n\n    bind: function bind() {\n      var directive = this;\n      var element = this.el;\n\n      directive.vm.$on('hook:ready', function () {\n        if (isAttached(element)) {\n          directive.doBind();\n        }\n      });\n\n      this.bindTryCount = 0;\n\n      var tryBind = function tryBind() {\n        if (directive.bindTryCount > 10) return; //eslint-disable-line\n        directive.bindTryCount++;\n        if (isAttached(element)) {\n          directive.doBind();\n        } else {\n          setTimeout(tryBind, 50);\n        }\n      };\n\n      tryBind();\n    },\n\n    unbind: function unbind() {\n      this.scrollEventTarget.removeEventListener('scroll', this.scrollListener);\n    }\n  };\n\n  if (window.Vue) {\n    window.infiniteScroll = infiniteScroll;\n    Vue.use(install);\n  }\n\n  function install(Vue) {\n    Vue.directive('infiniteScroll', infiniteScroll);\n  }\n\n  exports.install = install;\n  exports.infiniteScroll = infiniteScroll;\n\n}));\n},{}],6:[function(require,module,exports){\n/*!\n * vue-resource v0.9.3\n * https://github.com/vuejs/vue-resource\n * Released under the MIT License.\n */\n\n'use strict';\n\n/**\n * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n */\n\nvar RESOLVED = 0;\nvar REJECTED = 1;\nvar PENDING = 2;\n\nfunction Promise$2(executor) {\n\n    this.state = PENDING;\n    this.value = undefined;\n    this.deferred = [];\n\n    var promise = this;\n\n    try {\n        executor(function (x) {\n            promise.resolve(x);\n        }, function (r) {\n            promise.reject(r);\n        });\n    } catch (e) {\n        promise.reject(e);\n    }\n}\n\nPromise$2.reject = function (r) {\n    return new Promise$2(function (resolve, reject) {\n        reject(r);\n    });\n};\n\nPromise$2.resolve = function (x) {\n    return new Promise$2(function (resolve, reject) {\n        resolve(x);\n    });\n};\n\nPromise$2.all = function all(iterable) {\n    return new Promise$2(function (resolve, reject) {\n        var count = 0,\n            result = [];\n\n        if (iterable.length === 0) {\n            resolve(result);\n        }\n\n        function resolver(i) {\n            return function (x) {\n                result[i] = x;\n                count += 1;\n\n                if (count === iterable.length) {\n                    resolve(result);\n                }\n            };\n        }\n\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$2.resolve(iterable[i]).then(resolver(i), reject);\n        }\n    });\n};\n\nPromise$2.race = function race(iterable) {\n    return new Promise$2(function (resolve, reject) {\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$2.resolve(iterable[i]).then(resolve, reject);\n        }\n    });\n};\n\nvar p$1 = Promise$2.prototype;\n\np$1.resolve = function resolve(x) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (x === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        var called = false;\n\n        try {\n            var then = x && x['then'];\n\n            if (x !== null && typeof x === 'object' && typeof then === 'function') {\n                then.call(x, function (x) {\n                    if (!called) {\n                        promise.resolve(x);\n                    }\n                    called = true;\n                }, function (r) {\n                    if (!called) {\n                        promise.reject(r);\n                    }\n                    called = true;\n                });\n                return;\n            }\n        } catch (e) {\n            if (!called) {\n                promise.reject(e);\n            }\n            return;\n        }\n\n        promise.state = RESOLVED;\n        promise.value = x;\n        promise.notify();\n    }\n};\n\np$1.reject = function reject(reason) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (reason === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        promise.state = REJECTED;\n        promise.value = reason;\n        promise.notify();\n    }\n};\n\np$1.notify = function notify() {\n    var promise = this;\n\n    nextTick(function () {\n        if (promise.state !== PENDING) {\n            while (promise.deferred.length) {\n                var deferred = promise.deferred.shift(),\n                    onResolved = deferred[0],\n                    onRejected = deferred[1],\n                    resolve = deferred[2],\n                    reject = deferred[3];\n\n                try {\n                    if (promise.state === RESOLVED) {\n                        if (typeof onResolved === 'function') {\n                            resolve(onResolved.call(undefined, promise.value));\n                        } else {\n                            resolve(promise.value);\n                        }\n                    } else if (promise.state === REJECTED) {\n                        if (typeof onRejected === 'function') {\n                            resolve(onRejected.call(undefined, promise.value));\n                        } else {\n                            reject(promise.value);\n                        }\n                    }\n                } catch (e) {\n                    reject(e);\n                }\n            }\n        }\n    });\n};\n\np$1.then = function then(onResolved, onRejected) {\n    var promise = this;\n\n    return new Promise$2(function (resolve, reject) {\n        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n        promise.notify();\n    });\n};\n\np$1.catch = function (onRejected) {\n    return this.then(undefined, onRejected);\n};\n\nvar PromiseObj = window.Promise || Promise$2;\n\nfunction Promise$1(executor, context) {\n\n    if (executor instanceof PromiseObj) {\n        this.promise = executor;\n    } else {\n        this.promise = new PromiseObj(executor.bind(context));\n    }\n\n    this.context = context;\n}\n\nPromise$1.all = function (iterable, context) {\n    return new Promise$1(PromiseObj.all(iterable), context);\n};\n\nPromise$1.resolve = function (value, context) {\n    return new Promise$1(PromiseObj.resolve(value), context);\n};\n\nPromise$1.reject = function (reason, context) {\n    return new Promise$1(PromiseObj.reject(reason), context);\n};\n\nPromise$1.race = function (iterable, context) {\n    return new Promise$1(PromiseObj.race(iterable), context);\n};\n\nvar p = Promise$1.prototype;\n\np.bind = function (context) {\n    this.context = context;\n    return this;\n};\n\np.then = function (fulfilled, rejected) {\n\n    if (fulfilled && fulfilled.bind && this.context) {\n        fulfilled = fulfilled.bind(this.context);\n    }\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    return new Promise$1(this.promise.then(fulfilled, rejected), this.context);\n};\n\np.catch = function (rejected) {\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    return new Promise$1(this.promise.catch(rejected), this.context);\n};\n\np.finally = function (callback) {\n\n    return this.then(function (value) {\n        callback.call(this);\n        return value;\n    }, function (reason) {\n        callback.call(this);\n        return PromiseObj.reject(reason);\n    });\n};\n\nvar debug = false;\nvar util = {};\nvar array = [];\nfunction Util (Vue) {\n    util = Vue.util;\n    debug = Vue.config.debug || !Vue.config.silent;\n}\n\nfunction warn(msg) {\n    if (typeof console !== 'undefined' && debug) {\n        console.warn('[VueResource warn]: ' + msg);\n    }\n}\n\nfunction error(msg) {\n    if (typeof console !== 'undefined') {\n        console.error(msg);\n    }\n}\n\nfunction nextTick(cb, ctx) {\n    return util.nextTick(cb, ctx);\n}\n\nfunction trim(str) {\n    return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nvar isArray = Array.isArray;\n\nfunction isString(val) {\n    return typeof val === 'string';\n}\n\nfunction isBoolean(val) {\n    return val === true || val === false;\n}\n\nfunction isFunction(val) {\n    return typeof val === 'function';\n}\n\nfunction isObject(obj) {\n    return obj !== null && typeof obj === 'object';\n}\n\nfunction isPlainObject(obj) {\n    return isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n}\n\nfunction isFormData(obj) {\n    return typeof FormData !== 'undefined' && obj instanceof FormData;\n}\n\nfunction when(value, fulfilled, rejected) {\n\n    var promise = Promise$1.resolve(value);\n\n    if (arguments.length < 2) {\n        return promise;\n    }\n\n    return promise.then(fulfilled, rejected);\n}\n\nfunction options(fn, obj, opts) {\n\n    opts = opts || {};\n\n    if (isFunction(opts)) {\n        opts = opts.call(obj);\n    }\n\n    return merge(fn.bind({ $vm: obj, $options: opts }), fn, { $options: opts });\n}\n\nfunction each(obj, iterator) {\n\n    var i, key;\n\n    if (typeof obj.length == 'number') {\n        for (i = 0; i < obj.length; i++) {\n            iterator.call(obj[i], obj[i], i);\n        }\n    } else if (isObject(obj)) {\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                iterator.call(obj[key], obj[key], key);\n            }\n        }\n    }\n\n    return obj;\n}\n\nvar assign = Object.assign || _assign;\n\nfunction merge(target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n        _merge(target, source, true);\n    });\n\n    return target;\n}\n\nfunction defaults(target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n\n        for (var key in source) {\n            if (target[key] === undefined) {\n                target[key] = source[key];\n            }\n        }\n    });\n\n    return target;\n}\n\nfunction _assign(target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n        _merge(target, source);\n    });\n\n    return target;\n}\n\nfunction _merge(target, source, deep) {\n    for (var key in source) {\n        if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n            if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\n                target[key] = {};\n            }\n            if (isArray(source[key]) && !isArray(target[key])) {\n                target[key] = [];\n            }\n            _merge(target[key], source[key], deep);\n        } else if (source[key] !== undefined) {\n            target[key] = source[key];\n        }\n    }\n}\n\nfunction root (options, next) {\n\n    var url = next(options);\n\n    if (isString(options.root) && !url.match(/^(https?:)?\\//)) {\n        url = options.root + '/' + url;\n    }\n\n    return url;\n}\n\nfunction query (options, next) {\n\n    var urlParams = Object.keys(Url.options.params),\n        query = {},\n        url = next(options);\n\n    each(options.params, function (value, key) {\n        if (urlParams.indexOf(key) === -1) {\n            query[key] = value;\n        }\n    });\n\n    query = Url.params(query);\n\n    if (query) {\n        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n    }\n\n    return url;\n}\n\n/**\n * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n */\n\nfunction expand(url, params, variables) {\n\n    var tmpl = parse(url),\n        expanded = tmpl.expand(params);\n\n    if (variables) {\n        variables.push.apply(variables, tmpl.vars);\n    }\n\n    return expanded;\n}\n\nfunction parse(template) {\n\n    var operators = ['+', '#', '.', '/', ';', '?', '&'],\n        variables = [];\n\n    return {\n        vars: variables,\n        expand: function (context) {\n            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n                if (expression) {\n\n                    var operator = null,\n                        values = [];\n\n                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n                        operator = expression.charAt(0);\n                        expression = expression.substr(1);\n                    }\n\n                    expression.split(/,/g).forEach(function (variable) {\n                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n                        values.push.apply(values, getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n                        variables.push(tmp[1]);\n                    });\n\n                    if (operator && operator !== '+') {\n\n                        var separator = ',';\n\n                        if (operator === '?') {\n                            separator = '&';\n                        } else if (operator !== '#') {\n                            separator = operator;\n                        }\n\n                        return (values.length !== 0 ? operator : '') + values.join(separator);\n                    } else {\n                        return values.join(',');\n                    }\n                } else {\n                    return encodeReserved(literal);\n                }\n            });\n        }\n    };\n}\n\nfunction getValues(context, operator, key, modifier) {\n\n    var value = context[key],\n        result = [];\n\n    if (isDefined(value) && value !== '') {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n            value = value.toString();\n\n            if (modifier && modifier !== '*') {\n                value = value.substring(0, parseInt(modifier, 10));\n            }\n\n            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n        } else {\n            if (modifier === '*') {\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            result.push(encodeValue(operator, value[k], k));\n                        }\n                    });\n                }\n            } else {\n                var tmp = [];\n\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        tmp.push(encodeValue(operator, value));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            tmp.push(encodeURIComponent(k));\n                            tmp.push(encodeValue(operator, value[k].toString()));\n                        }\n                    });\n                }\n\n                if (isKeyOperator(operator)) {\n                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n                } else if (tmp.length !== 0) {\n                    result.push(tmp.join(','));\n                }\n            }\n        }\n    } else {\n        if (operator === ';') {\n            result.push(encodeURIComponent(key));\n        } else if (value === '' && (operator === '&' || operator === '?')) {\n            result.push(encodeURIComponent(key) + '=');\n        } else if (value === '') {\n            result.push('');\n        }\n    }\n\n    return result;\n}\n\nfunction isDefined(value) {\n    return value !== undefined && value !== null;\n}\n\nfunction isKeyOperator(operator) {\n    return operator === ';' || operator === '&' || operator === '?';\n}\n\nfunction encodeValue(operator, value, key) {\n\n    value = operator === '+' || operator === '#' ? encodeReserved(value) : encodeURIComponent(value);\n\n    if (key) {\n        return encodeURIComponent(key) + '=' + value;\n    } else {\n        return value;\n    }\n}\n\nfunction encodeReserved(str) {\n    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n        if (!/%[0-9A-Fa-f]/.test(part)) {\n            part = encodeURI(part);\n        }\n        return part;\n    }).join('');\n}\n\nfunction template (options) {\n\n    var variables = [],\n        url = expand(options.url, options.params, variables);\n\n    variables.forEach(function (key) {\n        delete options.params[key];\n    });\n\n    return url;\n}\n\n/**\n * Service for URL templating.\n */\n\nvar ie = document.documentMode;\nvar el = document.createElement('a');\n\nfunction Url(url, params) {\n\n    var self = this || {},\n        options = url,\n        transform;\n\n    if (isString(url)) {\n        options = { url: url, params: params };\n    }\n\n    options = merge({}, Url.options, self.$options, options);\n\n    Url.transforms.forEach(function (handler) {\n        transform = factory(handler, transform, self.$vm);\n    });\n\n    return transform(options);\n}\n\n/**\n * Url options.\n */\n\nUrl.options = {\n    url: '',\n    root: null,\n    params: {}\n};\n\n/**\n * Url transforms.\n */\n\nUrl.transforms = [template, query, root];\n\n/**\n * Encodes a Url parameter string.\n *\n * @param {Object} obj\n */\n\nUrl.params = function (obj) {\n\n    var params = [],\n        escape = encodeURIComponent;\n\n    params.add = function (key, value) {\n\n        if (isFunction(value)) {\n            value = value();\n        }\n\n        if (value === null) {\n            value = '';\n        }\n\n        this.push(escape(key) + '=' + escape(value));\n    };\n\n    serialize(params, obj);\n\n    return params.join('&').replace(/%20/g, '+');\n};\n\n/**\n * Parse a URL and return its components.\n *\n * @param {String} url\n */\n\nUrl.parse = function (url) {\n\n    if (ie) {\n        el.href = url;\n        url = el.href;\n    }\n\n    el.href = url;\n\n    return {\n        href: el.href,\n        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n        port: el.port,\n        host: el.host,\n        hostname: el.hostname,\n        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n        search: el.search ? el.search.replace(/^\\?/, '') : '',\n        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n    };\n};\n\nfunction factory(handler, next, vm) {\n    return function (options) {\n        return handler.call(vm, options, next);\n    };\n}\n\nfunction serialize(params, obj, scope) {\n\n    var array = isArray(obj),\n        plain = isPlainObject(obj),\n        hash;\n\n    each(obj, function (value, key) {\n\n        hash = isObject(value) || isArray(value);\n\n        if (scope) {\n            key = scope + '[' + (plain || hash ? key : '') + ']';\n        }\n\n        if (!scope && array) {\n            params.add(value.name, value.value);\n        } else if (hash) {\n            serialize(params, value, key);\n        } else {\n            params.add(key, value);\n        }\n    });\n}\n\nfunction xdrClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var xdr = new XDomainRequest(),\n            handler = function (event) {\n\n            var response = request.respondWith(xdr.responseText, {\n                status: xdr.status,\n                statusText: xdr.statusText\n            });\n\n            resolve(response);\n        };\n\n        request.abort = function () {\n            return xdr.abort();\n        };\n\n        xdr.open(request.method, request.getUrl(), true);\n        xdr.timeout = 0;\n        xdr.onload = handler;\n        xdr.onerror = handler;\n        xdr.ontimeout = function () {};\n        xdr.onprogress = function () {};\n        xdr.send(request.getBody());\n    });\n}\n\nvar ORIGIN_URL = Url.parse(location.href);\nvar SUPPORTS_CORS = 'withCredentials' in new XMLHttpRequest();\n\nfunction cors (request, next) {\n\n    if (!isBoolean(request.crossOrigin) && crossOrigin(request)) {\n        request.crossOrigin = true;\n    }\n\n    if (request.crossOrigin) {\n\n        if (!SUPPORTS_CORS) {\n            request.client = xdrClient;\n        }\n\n        delete request.emulateHTTP;\n    }\n\n    next();\n}\n\nfunction crossOrigin(request) {\n\n    var requestUrl = Url.parse(Url(request));\n\n    return requestUrl.protocol !== ORIGIN_URL.protocol || requestUrl.host !== ORIGIN_URL.host;\n}\n\nfunction body (request, next) {\n\n    if (request.emulateJSON && isPlainObject(request.body)) {\n        request.body = Url.params(request.body);\n        request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n    }\n\n    if (isFormData(request.body)) {\n        delete request.headers['Content-Type'];\n    }\n\n    if (isPlainObject(request.body)) {\n        request.body = JSON.stringify(request.body);\n    }\n\n    next(function (response) {\n\n        var contentType = response.headers['Content-Type'];\n\n        if (isString(contentType) && contentType.indexOf('application/json') === 0) {\n\n            try {\n                response.data = response.json();\n            } catch (e) {\n                response.data = null;\n            }\n        } else {\n            response.data = response.text();\n        }\n    });\n}\n\nfunction jsonpClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var name = request.jsonp || 'callback',\n            callback = '_jsonp' + Math.random().toString(36).substr(2),\n            body = null,\n            handler,\n            script;\n\n        handler = function (event) {\n\n            var status = 0;\n\n            if (event.type === 'load' && body !== null) {\n                status = 200;\n            } else if (event.type === 'error') {\n                status = 404;\n            }\n\n            resolve(request.respondWith(body, { status: status }));\n\n            delete window[callback];\n            document.body.removeChild(script);\n        };\n\n        request.params[name] = callback;\n\n        window[callback] = function (result) {\n            body = JSON.stringify(result);\n        };\n\n        script = document.createElement('script');\n        script.src = request.getUrl();\n        script.type = 'text/javascript';\n        script.async = true;\n        script.onload = handler;\n        script.onerror = handler;\n\n        document.body.appendChild(script);\n    });\n}\n\nfunction jsonp (request, next) {\n\n    if (request.method == 'JSONP') {\n        request.client = jsonpClient;\n    }\n\n    next(function (response) {\n\n        if (request.method == 'JSONP') {\n            response.data = response.json();\n        }\n    });\n}\n\nfunction before (request, next) {\n\n    if (isFunction(request.before)) {\n        request.before.call(this, request);\n    }\n\n    next();\n}\n\n/**\n * HTTP method override Interceptor.\n */\n\nfunction method (request, next) {\n\n    if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\n        request.headers['X-HTTP-Method-Override'] = request.method;\n        request.method = 'POST';\n    }\n\n    next();\n}\n\nfunction header (request, next) {\n\n    request.method = request.method.toUpperCase();\n    request.headers = assign({}, Http.headers.common, !request.crossOrigin ? Http.headers.custom : {}, Http.headers[request.method.toLowerCase()], request.headers);\n\n    next();\n}\n\n/**\n * Timeout Interceptor.\n */\n\nfunction timeout (request, next) {\n\n    var timeout;\n\n    if (request.timeout) {\n        timeout = setTimeout(function () {\n            request.abort();\n        }, request.timeout);\n    }\n\n    next(function (response) {\n\n        clearTimeout(timeout);\n    });\n}\n\nfunction xhrClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var xhr = new XMLHttpRequest(),\n            handler = function (event) {\n\n            var response = request.respondWith('response' in xhr ? xhr.response : xhr.responseText, {\n                status: xhr.status === 1223 ? 204 : xhr.status, // IE9 status bug\n                statusText: xhr.status === 1223 ? 'No Content' : trim(xhr.statusText),\n                headers: parseHeaders(xhr.getAllResponseHeaders())\n            });\n\n            resolve(response);\n        };\n\n        request.abort = function () {\n            return xhr.abort();\n        };\n\n        xhr.open(request.method, request.getUrl(), true);\n        xhr.timeout = 0;\n        xhr.onload = handler;\n        xhr.onerror = handler;\n\n        if (request.progress) {\n            if (request.method === 'GET') {\n                xhr.addEventListener('progress', request.progress);\n            } else if (/^(POST|PUT)$/i.test(request.method)) {\n                xhr.upload.addEventListener('progress', request.progress);\n            }\n        }\n\n        if (request.credentials === true) {\n            xhr.withCredentials = true;\n        }\n\n        each(request.headers || {}, function (value, header) {\n            xhr.setRequestHeader(header, value);\n        });\n\n        xhr.send(request.getBody());\n    });\n}\n\nfunction parseHeaders(str) {\n\n    var headers = {},\n        value,\n        name,\n        i;\n\n    each(trim(str).split('\\n'), function (row) {\n\n        i = row.indexOf(':');\n        name = trim(row.slice(0, i));\n        value = trim(row.slice(i + 1));\n\n        if (headers[name]) {\n\n            if (isArray(headers[name])) {\n                headers[name].push(value);\n            } else {\n                headers[name] = [headers[name], value];\n            }\n        } else {\n\n            headers[name] = value;\n        }\n    });\n\n    return headers;\n}\n\nfunction Client (context) {\n\n    var reqHandlers = [sendRequest],\n        resHandlers = [],\n        handler;\n\n    if (!isObject(context)) {\n        context = null;\n    }\n\n    function Client(request) {\n        return new Promise$1(function (resolve) {\n\n            function exec() {\n\n                handler = reqHandlers.pop();\n\n                if (isFunction(handler)) {\n                    handler.call(context, request, next);\n                } else {\n                    warn('Invalid interceptor of type ' + typeof handler + ', must be a function');\n                    next();\n                }\n            }\n\n            function next(response) {\n\n                if (isFunction(response)) {\n\n                    resHandlers.unshift(response);\n                } else if (isObject(response)) {\n\n                    resHandlers.forEach(function (handler) {\n                        response = when(response, function (response) {\n                            return handler.call(context, response) || response;\n                        });\n                    });\n\n                    when(response, resolve);\n\n                    return;\n                }\n\n                exec();\n            }\n\n            exec();\n        }, context);\n    }\n\n    Client.use = function (handler) {\n        reqHandlers.push(handler);\n    };\n\n    return Client;\n}\n\nfunction sendRequest(request, resolve) {\n\n    var client = request.client || xhrClient;\n\n    resolve(client(request));\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n/**\n * HTTP Response.\n */\n\nvar Response = function () {\n    function Response(body, _ref) {\n        var url = _ref.url;\n        var headers = _ref.headers;\n        var status = _ref.status;\n        var statusText = _ref.statusText;\n        classCallCheck(this, Response);\n\n\n        this.url = url;\n        this.body = body;\n        this.headers = headers || {};\n        this.status = status || 0;\n        this.statusText = statusText || '';\n        this.ok = status >= 200 && status < 300;\n    }\n\n    Response.prototype.text = function text() {\n        return this.body;\n    };\n\n    Response.prototype.blob = function blob() {\n        return new Blob([this.body]);\n    };\n\n    Response.prototype.json = function json() {\n        return JSON.parse(this.body);\n    };\n\n    return Response;\n}();\n\nvar Request = function () {\n    function Request(options) {\n        classCallCheck(this, Request);\n\n\n        this.method = 'GET';\n        this.body = null;\n        this.params = {};\n        this.headers = {};\n\n        assign(this, options);\n    }\n\n    Request.prototype.getUrl = function getUrl() {\n        return Url(this);\n    };\n\n    Request.prototype.getBody = function getBody() {\n        return this.body;\n    };\n\n    Request.prototype.respondWith = function respondWith(body, options) {\n        return new Response(body, assign(options || {}, { url: this.getUrl() }));\n    };\n\n    return Request;\n}();\n\n/**\n * Service for sending network requests.\n */\n\nvar CUSTOM_HEADERS = { 'X-Requested-With': 'XMLHttpRequest' };\nvar COMMON_HEADERS = { 'Accept': 'application/json, text/plain, */*' };\nvar JSON_CONTENT_TYPE = { 'Content-Type': 'application/json;charset=utf-8' };\n\nfunction Http(options) {\n\n    var self = this || {},\n        client = Client(self.$vm);\n\n    defaults(options || {}, self.$options, Http.options);\n\n    Http.interceptors.forEach(function (handler) {\n        client.use(handler);\n    });\n\n    return client(new Request(options)).then(function (response) {\n\n        return response.ok ? response : Promise$1.reject(response);\n    }, function (response) {\n\n        if (response instanceof Error) {\n            error(response);\n        }\n\n        return Promise$1.reject(response);\n    });\n}\n\nHttp.options = {};\n\nHttp.headers = {\n    put: JSON_CONTENT_TYPE,\n    post: JSON_CONTENT_TYPE,\n    patch: JSON_CONTENT_TYPE,\n    delete: JSON_CONTENT_TYPE,\n    custom: CUSTOM_HEADERS,\n    common: COMMON_HEADERS\n};\n\nHttp.interceptors = [before, timeout, method, body, jsonp, header, cors];\n\n['get', 'delete', 'head', 'jsonp'].forEach(function (method) {\n\n    Http[method] = function (url, options) {\n        return this(assign(options || {}, { url: url, method: method }));\n    };\n});\n\n['post', 'put', 'patch'].forEach(function (method) {\n\n    Http[method] = function (url, body, options) {\n        return this(assign(options || {}, { url: url, method: method, body: body }));\n    };\n});\n\nfunction Resource(url, params, actions, options) {\n\n    var self = this || {},\n        resource = {};\n\n    actions = assign({}, Resource.actions, actions);\n\n    each(actions, function (action, name) {\n\n        action = merge({ url: url, params: params || {} }, options, action);\n\n        resource[name] = function () {\n            return (self.$http || Http)(opts(action, arguments));\n        };\n    });\n\n    return resource;\n}\n\nfunction opts(action, args) {\n\n    var options = assign({}, action),\n        params = {},\n        body;\n\n    switch (args.length) {\n\n        case 2:\n\n            params = args[0];\n            body = args[1];\n\n            break;\n\n        case 1:\n\n            if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n                body = args[0];\n            } else {\n                params = args[0];\n            }\n\n            break;\n\n        case 0:\n\n            break;\n\n        default:\n\n            throw 'Expected up to 4 arguments [params, body], got ' + args.length + ' arguments';\n    }\n\n    options.body = body;\n    options.params = assign({}, options.params, params);\n\n    return options;\n}\n\nResource.actions = {\n\n    get: { method: 'GET' },\n    save: { method: 'POST' },\n    query: { method: 'GET' },\n    update: { method: 'PUT' },\n    remove: { method: 'DELETE' },\n    delete: { method: 'DELETE' }\n\n};\n\nfunction plugin(Vue) {\n\n    if (plugin.installed) {\n        return;\n    }\n\n    Util(Vue);\n\n    Vue.url = Url;\n    Vue.http = Http;\n    Vue.resource = Resource;\n    Vue.Promise = Promise$1;\n\n    Object.defineProperties(Vue.prototype, {\n\n        $url: {\n            get: function () {\n                return options(Vue.url, this, this.$options.url);\n            }\n        },\n\n        $http: {\n            get: function () {\n                return options(Vue.http, this, this.$options.http);\n            }\n        },\n\n        $resource: {\n            get: function () {\n                return Vue.resource.bind(this);\n            }\n        },\n\n        $promise: {\n            get: function () {\n                var _this = this;\n\n                return function (executor) {\n                    return new Vue.Promise(executor, _this);\n                };\n            }\n        }\n\n    });\n}\n\nif (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(plugin);\n}\n\nmodule.exports = plugin;\n},{}],7:[function(require,module,exports){\n(function (process,global){\n/*!\n * Vue.js v1.0.26\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    if (obj._isVue) {\n      delete obj._data[key];\n      obj._digest();\n    }\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && UA.indexOf('trident') > 0;\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\nvar iosVersionMatch = isIos && UA.match(/os ([\\d_]+)/);\nvar iosVersion = iosVersionMatch && iosVersionMatch[1].split('_');\n\n// detecting iOS UIWebView by indexedDB\nvar hasMutationObserverBug = iosVersion && Number(iosVersion[0]) >= 9 && Number(iosVersion[1]) >= 3 && !window.indexedDB;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined' && !hasMutationObserverBug) {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nvar _Set = undefined;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = function () {\n    this.set = Object.create(null);\n  };\n  _Set.prototype.has = function (key) {\n    return this.set[key] !== undefined;\n  };\n  _Set.prototype.add = function (key) {\n    this.set[key] = 1;\n  };\n  _Set.prototype.clear = function () {\n    this.set = Object.create(null);\n  };\n}\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    if (this.size === this.limit) {\n      removed = this.shift();\n    }\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\nvar formatComponentName = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n\n    warn = function (msg, vm) {\n      if (hasConsole && !config.silent) {\n        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n      }\n    };\n\n    formatComponentName = function (vm) {\n      var name = vm._isVue ? vm.$options.name : vm.name;\n      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  if (!node) return false;\n  var doc = node.ownerDocument.documentElement;\n  var parent = node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        // Firefox returns unknown for some \"Interactive elements.\"\n        !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el, options);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el, options);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el, options) {\n  // dynamic syntax\n  var exp = el.getAttribute('is');\n  if (exp != null) {\n    if (resolveAsset(options, 'components', exp)) {\n      el.removeAttribute('is');\n      return { id: exp };\n    }\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  if (process.env.NODE_ENV !== 'production') {\n    if (child.propsData && !vm) {\n      warn('propsData can only be used as an instantiation option.');\n    }\n  }\n  var options = {};\n  var key;\n  if (child['extends']) {\n    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n      parent = mergeOptions(parent, mixinOptions, vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @param {Boolean} warnMissing\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id, warnMissing) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  var res = assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n  }\n  return res;\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index or target element reference.\n *\n * @param {*} item\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE: isIE,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tisIos: isIos,\n\tiosVersionMatch: iosVersionMatch,\n\tiosVersion: iosVersion,\n\thasMutationObserverBug: hasMutationObserverBug,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initData().\n    this._data = {};\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path, vm) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path, last);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path, obj);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\nfunction noop() {}\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here because the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if (e.toString().match(/unsafe-eval|CSP/)) {\n        warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n      } else {\n        warn('Invalid expression. ' + 'Generated function body: ' + body);\n      }\n    }\n    return noop;\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat literal values as paths\n  !literalValueRE$1.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue.length = 0;\n  userQueue.length = 0;\n  has = {};\n  circular = {};\n  waiting = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  var _again = true;\n\n  _function: while (_again) {\n    _again = false;\n\n    runBatcherQueue(queue);\n    runBatcherQueue(userQueue);\n    // user watchers triggered more watchers,\n    // keep flushing until it depletes\n    if (queue.length) {\n      _again = true;\n      continue _function;\n    }\n    // dev tool hook\n    /* istanbul ignore if */\n    if (devtools && config.devtools) {\n      devtools.emit('flush');\n    }\n    resetBatcherState();\n  }\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (var i = 0; i < queue.length; i++) {\n    var watcher = queue[i];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n        break;\n      }\n    }\n  }\n  queue.length = 0;\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    // push watcher into appropriate queue\n    var q = watcher.user ? userQueue : queue;\n    has[id] = q.length;\n    q.push(watcher);\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushBatcherQueue);\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nvar seenObjects = new _Set();\nfunction traverse(val, seen) {\n  var i = undefined,\n      keys = undefined;\n  if (!seen) {\n    seen = seenObjects;\n    seen.clear();\n  }\n  var isA = isArray(val);\n  var isO = isObject(val);\n  if ((isA || isO) && Object.isExtensible(val)) {\n    if (val.__ob__) {\n      var depId = val.__ob__.dep.id;\n      if (seen.has(depId)) {\n        return;\n      } else {\n        seen.add(depId);\n      }\n    }\n    if (isA) {\n      i = val.length;\n      while (i--) traverse(val[i], seen);\n    } else if (isO) {\n      keys = Object.keys(val);\n      i = keys.length;\n      while (i--) traverse(val[keys[i]], seen);\n    }\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\nvar commentRE = /<!--/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n  var commentMatch = commentRE.test(templateString);\n\n  if (!tagMatch && !entityMatch && !commentMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment. However, iOS Safari has\n  // bug when using directly cloned template content with touch\n  // events and can cause crashes when the nodes are removed from DOM, so we\n  // have to treat template elements as string templates. (#2805)\n  /* istanbul ignore if */\n  if (isRealTemplate(node)) {\n    return stringToFragment(node.innerHTML);\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar IF = 2100;\nvar FOR = 2200;\nvar SLOT = 2300;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      var target = prevEl.nextSibling;\n      /* istanbul ignore if */\n      if (!target) {\n        // reset end anchor position in case the position was messed up\n        // by an external drag-n-drop library.\n        after(this.end, prevEl);\n        target = this.end;\n      }\n      frag.before(target);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = getTrackByKey(index, key, value, trackByKey);\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else if (Object.isExtensible(value)) {\n        def(value, id, frag);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * watcher's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\n/**\n * Get the track by key for an item.\n *\n * @param {Number} index\n * @param {String} key\n * @param {*} value\n * @param {String} [trackByKey]\n */\n\nfunction getTrackByKey(index, key, value, trackByKey) {\n  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    // #3029 only update when the value changes. This prevent\n    // browsers from overwriting values like selectionStart\n    value = _toString(value);\n    if (value !== this.el.value) this.el.value = value;\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var _this = this;\n\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', function () {\n      nextTick(_this.forceUpdate);\n    });\n    if (!inDoc(el)) {\n      nextTick(this.forceUpdate);\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n        }\n        value = value.replace(importantRE, '').trim();\n        this.el.style.setProperty(prop.kebab, value, isImportant);\n      } else {\n        this.el.style[prop.camel] = value;\n      }\n    } else {\n      this.el.style[prop.camel] = '';\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  if (camel !== 'filter' && camel in testEl.style) {\n    return {\n      kebab: prop,\n      camel: camel\n    };\n  }\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return {\n        kebab: prefixes[i] + prop,\n        camel: prefixed\n      };\n    }\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n\n      if (el[attr] !== attrValue) {\n        el[attr] = attrValue;\n      }\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (!value) {\n      this.cleanup();\n    } else if (typeof value === 'string') {\n      this.setClass(value.trim().split(/\\s+/));\n    } else {\n      this.setClass(normalize$1(value));\n    }\n  },\n\n  setClass: function setClass(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val) {\n        apply(this.el, val, addClass);\n      }\n    }\n    this.prevKeys = value;\n  },\n\n  cleanup: function cleanup(value) {\n    var prevKeys = this.prevKeys;\n    if (!prevKeys) return;\n    var i = prevKeys.length;\n    while (i--) {\n      var key = prevKeys[i];\n      if (!value || value.indexOf(key) < 0) {\n        apply(this.el, key, removeClass);\n      }\n    }\n  }\n};\n\n/**\n * Normalize objects and arrays (potentially containing objects)\n * into array of strings.\n *\n * @param {Object|Array<String|Object>} value\n * @return {Array<String>}\n */\n\nfunction normalize$1(value) {\n  var res = [];\n  if (isArray(value)) {\n    for (var i = 0, l = value.length; i < l; i++) {\n      var _key = value[i];\n      if (_key) {\n        if (typeof _key === 'string') {\n          res.push(_key);\n        } else {\n          for (var k in _key) {\n            if (_key[k]) res.push(k);\n          }\n        }\n      }\n    }\n  } else if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) res.push(key);\n    }\n  }\n  return res;\n}\n\n/**\n * Add or remove a class/classes on an element\n *\n * @param {Element} el\n * @param {String} key The class name. This may or may not\n *                     contain a space character, in such a\n *                     case we'll deal with multiple class\n *                     names at once.\n * @param {Function} fn\n */\n\nfunction apply(el, key, fn) {\n  key = key.trim();\n  if (key.indexOf(' ') === -1) {\n    fn(el, key);\n    return;\n  }\n  // The key contains one or more space characters.\n  // Since a class name doesn't accept such characters, we\n  // treat it as multiple classes.\n  var keys = key.split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    fn(el, keys[i]);\n  }\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      this.el.removeAttribute(':is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @param {Vue} vm\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions, vm) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.', vm);\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name, vm);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var inlineProps = vm.$options.propsData;\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (inlineProps && hasOwn(inlineProps, path)) {\n        initProp(vm, prop, inlineProps[path]);\n      }if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Process a prop with a rawValue, applying necessary coersions,\n * default values & assertions and call the given callback with\n * processed value.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} rawValue\n * @param {Function} fn\n */\n\nfunction processPropValue(vm, prop, rawValue, fn) {\n  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n  var value = rawValue;\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop);\n  }\n  value = coerceProp(prop, value, vm);\n  var coerced = value !== rawValue;\n  if (!assertProp(prop, value, vm)) {\n    value = undefined;\n  }\n  if (isSimple && !coerced) {\n    withoutConversion(function () {\n      fn(value);\n    });\n  } else {\n    fn(value);\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    defineReactive(vm, prop.path, value);\n  });\n}\n\n/**\n * Update a prop's value on a vm.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction updateProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    vm[prop.path] = value;\n  });\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, prop) {\n  // no default, return undefined\n  var options = prop.options;\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n * @param {Vue} vm\n */\n\nfunction assertProp(prop, value, vm) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = !type;\n  var expectedTypes = [];\n  if (type) {\n    if (!isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n    }\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value, vm) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  if (typeof coerce === 'function') {\n    return coerce(value);\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n    return value;\n  }\n}\n\n/**\n * Assert the type of a value\n *\n * @param {*} value\n * @param {Function} type\n * @return {Object}\n */\n\nfunction assertType(value, type) {\n  var valid;\n  var expectedType;\n  if (type === String) {\n    expectedType = 'string';\n    valid = typeof value === expectedType;\n  } else if (type === Number) {\n    expectedType = 'number';\n    valid = typeof value === expectedType;\n  } else if (type === Boolean) {\n    expectedType = 'boolean';\n    valid = typeof value === expectedType;\n  } else if (type === Function) {\n    expectedType = 'function';\n    valid = typeof value === expectedType;\n  } else if (type === Object) {\n    expectedType = 'object';\n    valid = isPlainObject(value);\n  } else if (type === Array) {\n    expectedType = 'array';\n    valid = isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  };\n}\n\n/**\n * Format type for output\n *\n * @param {String} type\n * @return {String}\n */\n\nfunction formatType(type) {\n  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n}\n\n/**\n * Format value\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      updateProp(child, prop, val);\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    oldId = oldId || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    removeClass(el, oldId + '-transition');\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props, vm);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && !isScript(node)) {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = _toString(value);\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          modifiers = parseModifiers(attr.name);\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName, true);\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nfunction isScript(el) {\n  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n      value.split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.', vm.$parent);\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    var nodes = content.childNodes;\n    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n      return;\n    }\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node, true);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n    }\n    var props = this._props;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key)) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, value, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        // force the expression into a statement so that\n        // it always dynamically resolves the method to call (#2670)\n        // kinda ugly hack, but does the job.\n        value = attrs[i].value;\n        if (isSimplePath(value)) {\n          value += '.apply(this, $arguments)';\n        }\n        handler = (vm._scope || vm._context).$eval(value, true);\n        handler._fromParent = true;\n        vm.$on(name.replace(eventRE), handler);\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop$1() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop$1;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data && this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value, true);\n    }\n    /* istanbul ignore if */\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String|Array<String>|Function} ...sortKeys\n * @param {Number} [order]\n */\n\nfunction orderBy(arr) {\n  var comparator = null;\n  var sortKeys = undefined;\n  arr = convertArray(arr);\n\n  // determine order (last argument)\n  var args = toArray(arguments, 1);\n  var order = args[args.length - 1];\n  if (typeof order === 'number') {\n    order = order < 0 ? -1 : 1;\n    args = args.length > 1 ? args.slice(0, -1) : args;\n  } else {\n    order = 1;\n  }\n\n  // determine sortKeys & comparator\n  var firstArg = args[0];\n  if (!firstArg) {\n    return arr;\n  } else if (typeof firstArg === 'function') {\n    // custom comparator\n    comparator = function (a, b) {\n      return firstArg(a, b) * order;\n    };\n  } else {\n    // string keys. flatten first\n    sortKeys = Array.prototype.concat.apply([], args);\n    comparator = function (a, b, i) {\n      i = i || 0;\n      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n    };\n  }\n\n  function baseCompare(a, b, sortKeyIndex) {\n    var sortKey = sortKeys[sortKeyIndex];\n    if (sortKey) {\n      if (sortKey !== '$key') {\n        if (isObject(a) && '$value' in a) a = a.$value;\n        if (isObject(b) && '$value' in b) b = b.$value;\n      }\n      a = isObject(a) ? getPath(a, sortKey) : a;\n      b = isObject(b) ? getPath(b, sortKey) : b;\n    }\n    return a === b ? 0 : a > b ? order : -order;\n  }\n\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(comparator);\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   * @param {Number} decimals Decimal places\n   */\n\n  currency: function currency(value, _currency, decimals) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    decimals = decimals != null ? decimals : 2;\n    var stringified = Math.abs(value).toFixed(decimals);\n    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    var length = args.length;\n    if (length > 1) {\n      var index = value % 10 - 1;\n      return index in args ? args[index] : args[length - 1];\n    } else {\n      return args[0] + (value === 1 ? '' : 's');\n    }\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          if (!definition.name) {\n            definition.name = id;\n          }\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.26';\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue);\n    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n    }\n  }\n}, 0);\n\nmodule.exports = Vue;\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"_process\":1}],8:[function(require,module,exports){\nmodule.exports = {\n    template: '<div></div>',\n    data: function () {\n        return {\n            x: undefined\n        };\n    },\n    ready: function () {\n        document.body.addEventListener('mousemove', this.drag);\n        var parent = this.$el.parentNode, defaultCursor = parent.style.cursor;\n        this.$el.addEventListener('mousedown', function (e) {\n            parent.style.cursor = 'col-resize';\n            var drag = function (e) {\n                this.x = e.pageX;\n            }.bind(this);\n            var leave = function () {\n                parent.style.cursor = defaultCursor;\n                parent.removeEventListener('mousemove', drag);\n                document.body.removeEventListener('mouseleave', leave);\n                document.body.removeEventListener('mouseup', leave);\n            }.bind(this);\n            parent.addEventListener('mousemove', drag);\n            document.body.addEventListener('mouseleave', leave);\n            document.body.addEventListener('mouseup', leave);\n        }.bind(this));\n    }\n};\n},{}],9:[function(require,module,exports){\nmodule.exports = '<div class=\"items-grid\">\\n    <item inline-template v-for=\"item in items | limitBy limit\" :item=\"item\" track-by=\"id\">\\n        <div v-on:click.prevent=\"select\" v-if=\"visible\" v-on:dblclick.prevent=\"open\" class=\"item{{selected ? \\' selected\\' : \\'\\'}}\">\\n            <span v-if=\"item.type !== \\'file\\'\" class=\"glyphicon glyphicon-folder-open{{item.type !== \\'dir\\' ? \\' item-ext\\' : \\'\\'}}\" data-ext=\"{{t(\\'types.\\'+item.type)}}\"></span>\\n            <span v-if=\"item.type === \\'file\\'\" class=\"glyphicon glyphicon-file item-ext\" data-ext=\"{{item.extension}}\"></span>\\n            <div v-if=\"item.thumbnail\" class=\"item-thumbnail\" v-bind:style=\"{backgroundImage: \\'url(\\' + item.thumbnail + \\')\\'}\"></div>\\n            <div>{{item.name}}</div>\\n        </div>\\n    </item>\\n</div>\\n';\n},{}],10:[function(require,module,exports){\nmodule.exports = {\n    template: require('./grid.html'),\n    props: {\n        items: Array,\n        storage: String,\n        limit: Number\n    },\n    components: {\n        item: {\n            props: {\n                item: Object\n            },\n            data: function () {\n                return {\n                    picked: require('../../model/pick')\n                }\n            },\n            computed: {\n                selected: function() {\n                    return this.picked.contains(this.item);\n                },\n                visible: function () {\n                    return this.item.type !== 'file' || this.picked.isAllowed(this.item);\n                }\n            },\n            detached: function() {\n                if (this.picked.contains(this.item)) {\n                    this.picked.remove(this.item);\n                }\n            },\n            methods: {\n                select: function() {\n                    this.picked.toggle(this.item);\n                },\n                open: function() {\n                    if (this.item.type === 'file' && this.picked.isAllowed(this.item)) {\n                        this.picked.add(this.item);\n                        this.$dispatch('finish-pick');\n                    } else {\n                        this.$root.$broadcast('select-item', this.item);\n                    }\n                }\n            }\n        }\n    }\n};\n\n},{\"../../model/pick\":28,\"./grid.html\":9}],11:[function(require,module,exports){\nmodule.exports = '<div\\n    class=\"items-container\"\\n    v-infinite-scroll=\"loadMore()\"\\n    infinite-scroll-distance=\"10\"\\n    infinite-scroll-listen-for-event=\"items-set\">\\n    <div v-if=\"selection.search && !storage\" class=\"items-search\">\\n        <template v-for=\"(storage, items) in selection.results\">\\n            <template v-if=\"items.length\">\\n                <h5>{{storages[storage].label || storage}}</h5>\\n                <div :is=\"layout\" v-ref:items :items=\"items\" :storage=\"storage\" :limit=\"10\"></div>\\n                <span v-if=\"$refs.items && $refs.items.limit && items.length > $refs.items.limit\" v-on:click.prevent=\"selectStorage(storage)\" class=\"btn btn-link\">Show all...</span>\\n            </template>\\n        </template>\\n    </div>\\n    <div v-if=\"storage || selection.search\">\\n        <h5 v-if=\"selection.search\">{{storage}}</h5>\\n        <div :is=\"layout\" :items=\"selection.items\" :storage=\"storage\"></div>\\n    </div>\\n    <template v-if=\"!storage && !selection.search\">\\n        <div v-for=\"(storage, config) in storages\" v-on:click.prevent=\"$root.$broadcast(\\'select-item\\', {storage: storage})\" class=\"storage\">\\n            <span class=\"glyphicon glyphicon-folder-close\"></span>\\n            <h6>{{config.label || storage}}</h6>\\n            <p class=\"text-muted\">{{$interpolate(t(\\'adapters.\\' + config.adapter))}}</p>\\n        </div>\\n    </template>\\n</div>\\n';\n},{}],12:[function(require,module,exports){\nmodule.exports = {\n    template: require('./index.html'),\n    directives: {infiniteScroll: require('vue-infinite-scroll').infiniteScroll},\n    props: {\n        layout: {\n            type: String,\n            default: 'grid'\n        }\n    },\n    data: function () {\n        var selection = require('../../model/selection');\n        var keys = Object.keys(selection.results);\n        return {\n            selection: selection,\n            storage: keys.length > 1 ? null : keys[0],\n            storages: require('../../config').storages\n        }\n    },\n    events: {\n        'select-item': function (item) {\n            this.storage = item.storage;\n            return true;\n        }\n    },\n    watch: {\n        'selection.search': function (sword) {\n            this.$nextTick(function () {\n                if (sword) {\n                    this.storage = undefined;\n                }\n            });\n        },\n        'selection.items': function (items) {\n            this.storage = items.storage;\n            this.$nextTick(function () {\n                if ((!this.search || this.storage) && items && !items.loading && items.total && items.length < items.total) {\n                    this.$dispatch('items-set');\n                }\n            })\n        }\n    },\n    methods: {\n        loadMore: function () {\n            this.$root.$broadcast('load-more-items', this.selection.items);\n        },\n        selectStorage: function (storage) {\n            this.storage = storage;\n            this.selection.items = this.$get('selection.results.' + storage);\n        }\n    },\n    components: {\n        grid: require('./grid')\n    }\n};\n\n},{\"../../config\":24,\"../../model/selection\":29,\"./grid\":10,\"./index.html\":11,\"vue-infinite-scroll\":5}],13:[function(require,module,exports){\nvar Vue = require('vue');\nvar progressLoader = document.getElementById('app-progress'), progressLoaderClass = progressLoader.className;\nVue.http.interceptors.push(function(options, next) {\n    progressLoader.className = progressLoaderClass + ' active';\n    next(function(response) {\n        progressLoader.className = progressLoaderClass;\n    });\n});\n},{\"vue\":7}],14:[function(require,module,exports){\nmodule.exports = {\n    template: require('./template.html'),\n    props: {\n        failure: Boolean,\n        username: String,\n        hint: String\n    },\n    data: function() {\n        return {\n            password: null\n        }\n    },\n    methods: {\n        submit: function (username, password) {\n            this.$dispatch('login-submit', username, password);\n        },\n        login: function (authenticate) {\n            return this.$promise(function (resolve) {\n                this.$on('login-submit', (function (username, password) {\n                    authenticate(username, password, (function (result) {\n                        if (result) {\n                            this.$remove().$destroy();\n                            resolve();\n                        } else {\n                            this.failure = true;\n                        }\n                    }).bind(this));\n                }).bind(this));\n            });\n        }\n    }\n};\n},{\"./template.html\":15}],15:[function(require,module,exports){\nmodule.exports = '<div class=\"panel panel-primary\">\\n    <div class=\"panel-heading\">\\n        <h3 class=\"panel-title\">{{t(\\'login.login\\')}}</h3>\\n    </div>\\n    <div v-if=\"hint\" class=\"panel-footer\">{{{hint}}}</div>\\n    <div class=\"panel-body\">\\n        <form v-on:submit.prevent=\"submit(username, password)\">\\n            <div v-if=\"failure\" class=\"alert alert-danger\" role=\"alert\">{{t(\\'login.failure\\')}}</div>\\n            <div class=\"form-group\">\\n                <input v-model=\"username\" type=\"text\" class=\"form-control\" id=\"loginUsername\" placeholder=\"{{t(\\'login.username\\')}}\">\\n            </div>\\n            <div class=\"form-group\">\\n                <!-- It\\'s not possible to get the password via javascript in chrome inside iframes (http://stackoverflow.com/a/38269071), so trick off auto complete -->\\n                <input type=\"password\" style=\"position:absolute;left:-200px;top:0;\" tabindex=\"-1\">\\n                <input v-model=\"password\" type=\"password\" class=\"form-control\" id=\"loginPassword\" placeholder=\"{{t(\\'login.password\\')}}\">\\n            </div>\\n            <button type=\"submit\" class=\"btn btn-default\">{{t(\\'login.login\\')}}</button>\\n        </form>\\n    </div>\\n</div>';\n},{}],16:[function(require,module,exports){\nvar Vue = require('vue');\n\nvar Item = require('../../../model/item');\n\nvar extend = require('extend');\n\nVue.http.interceptors.push(function(options, next) {\n    next(function(response) {\n        response.options = options;\n    });\n});\n\nvar UrlClass = function(url) {\n    this.raw = url;\n};\nUrlClass.prototype.toString = function () {\n    return encodeURIComponent(this.raw);\n};\n\nmodule.exports = {\n    template: '<div><tree :fetch=\"fetch\"></tree></div>',\n    props: {\n        config: {\n            type: Object,\n            required: true\n        },\n        fetch: Boolean,\n        storage: {\n            type: String,\n            required: true\n        }\n    },\n    data: function() {\n        return {\n            loginDone: false,\n            currentLogin: null,\n            appConfig: require('../../../config')\n        }\n    },\n    computed: {\n        proxy: function () {\n            if (this.config.proxy || this.appConfig.proxy.all && this.config.proxy !== false) {\n                return (typeof this.config.proxy === 'object' ? this.config : this.appConfig).proxy;\n            }\n            return false;\n        },\n        url: function () {\n            var proxyUrl, $proxy;\n            if (this.proxy) {\n                proxyUrl = this.proxy.url;\n                $proxy = new Vue({\n                    data: { url: null }\n                });\n            }\n            return function (url, base) {\n                if (base) {\n                    url = (base + '').replace(/\\/+$/, '') + '/' + (url + '').replace(/^\\/+/, '');\n                }\n                if ($proxy) {\n                    $proxy.url = new UrlClass(url);\n                    return $proxy.$interpolate(proxyUrl);\n                }\n                return url;\n            }\n        },\n        http: function() {\n            if (this.$options.http && typeof  this.$options.http === 'function') {\n                this.$options.http = this.$options.http.call(this);\n            }\n            var api = {},\n                config = require('../../../config'),\n                base = this.$options.http ? this.$options.http.base : null,\n                request = (function (options) {\n                    if (!options.keepUrl) {\n                        options.url = this.url(options.url, base);\n                        options.keepUrl = true;\n                    }\n                    if (this.proxy && this.proxy.credentials !== options.credentials) {\n                        options.credentials = this.proxy.credentials;\n                    }\n                    return this.$promise(function (resolve, reject) {\n                        this.$http(options).then(\n                            function(response) {\n                                if (response.options.validate) {\n                                    response.reload = function () {\n                                        return request(options).then(resolve, reject);\n                                    };\n                                    response.isValid = function (isValid) {\n                                        if (isValid === false) {\n                                            throw 'Invalid response';\n                                        } else {\n                                            resolve(response);\n                                        }\n                                    };\n                                    response.options.validate.call(this, response, resolve);\n                                } else {\n                                    resolve(response);\n                                }\n                            }.bind(this),\n                            reject\n                        );\n                    });\n                }).bind(this);\n\n            ['get', 'delete', 'head', 'jsonp'].forEach(function(method) {\n                api[method] = function (url, options) {\n                    options = extend({}, options);\n                    options.method = method.toUpperCase();\n                    options.url = url;\n                    return request(options);\n                }\n            });\n\n            ['post', 'put', 'patch'].forEach(function(method) {\n                api[method] = function (url, data, options) {\n                    options = extend({}, options);\n                    options.method = method.toUpperCase();\n                    options.url = url;\n                    options.body = data;\n                    return request(options);\n                }\n            });\n            return api;\n        }\n    },\n    methods: {\n        createItem: function (data) {\n            data.storage = this.storage;\n            return new Item(data);\n        },\n        login: function(authenticate) {\n            if (!this.currentLogin) {\n                if (this.loginDone) {\n                    throw 'Login already done';\n                }\n                var open = this.$parent.open;\n                this.$parent.open = true;\n                var Login = this.$options.components['login'];\n                var login = new Login({\n                    el: this.$el.appendChild(document.createElement('div')),\n                    parent: this\n                });\n                if (this.config.loginHint) {\n                    login.hint = this.config.loginHint;\n                }\n                this.currentLogin = login.login(authenticate.bind(this)).then((function () {\n                    this.loginDone = true;\n                    this.$parent.open = open;\n                }).bind(this));\n            }\n            return this.currentLogin;\n        }\n    },\n    components: {\n        login: require('../../login')\n    }\n};\n\n},{\"../../../config\":24,\"../../../model/item\":27,\"../../login\":14,\"extend\":3,\"vue\":7}],17:[function(require,module,exports){\nvar Item = require('../../../../model/item');\nvar Vue = require('vue');\n\nvar Terms = function () {\n    var terms = [{\n            field: 'id',\n            operator: 'matches',\n            value: '*'\n        }],\n        termsSet = false;\n    terms.hash = 'id matches \"*\"';\n    terms.push = function (field, operator, value) {\n        if (!termsSet) {\n            terms.pop();\n            termsSet = true;\n            terms.hash = '';\n        }\n        Array.prototype.push.call(terms, {field: field, operator: operator, value: value});\n        terms.hash += field + ' ' + operator + ' \"' + value + '\";';\n    };\n    return terms;\n};\n\nmodule.exports = {\n    template: require('./template.html'),\n    extends: require('../base'),\n    http: function() {\n        var options = {\n            base: this.config.url.replace(/\\/+$/, '') + '/mediadb/services',\n            validate: function (response) {\n                response.data = response.json();\n                if (response.data.response.status !== 'ok') {\n                    this.login(function(username, password, callback) {\n                        this.http.post('authentication/login', {id: username, password: password}, {validate: function (response) {\n                            response.data = response.json();\n                            response.isValid(response.data.response.status === 'ok');\n                        }}).then(\n                            function (response) {\n                                callback(response.data.results.status !== 'invalidlogin');\n                            }\n                        );\n                    }).then(response.reload);\n                } else {\n                    response.isValid();\n                }\n            }\n        };\n        return options;\n    },\n    data: function () {\n        return {\n            category: null,\n            search: null,\n            items: null,\n            results: {},\n            extensions: null\n        }\n    },\n    watch: {\n        'appConfig.pick': function (config) {\n            // Reload latest items when extensions have changed\n            var oldTerms = this.assembleTerms();\n            this.extensions = config.extensions;\n            var newTerms = this.assembleTerms();\n            if (oldTerms.hash !== newTerms.hash && this.results[oldTerms.hash]) {\n                var items = this.results[oldTerms.hash].items;\n                while (items.length > 0) {\n                    items.pop();\n                }\n                this.loadAssets(items);\n            }\n        }\n    },\n    methods: {\n        assembleTerms: function () {\n            var terms = new Terms();\n            if (this.category) {\n                terms.push('category', 'exact', this.category.id);\n            }\n            if (this.search) {\n                terms.push('description', 'freeform', this.search);\n            }\n            if (this.extensions && this.extensions.length) {\n                terms.push('fileformat', 'matches', this.extensions.join('|'))\n            }\n            return terms;\n        },\n        loadAssets: function (items) {\n            var terms = this.assembleTerms();\n            var result = this.results[terms.hash];\n            if (!result) {\n                result = {page: 0, pages: 0, items: items || []};\n                result.items.total = result.items.total || result.items.length;\n                this.results[terms.hash] = result;\n            } else if (result.page === result.pages) {\n                return this.$promise(function (resolve) {\n                    resolve(result);\n                });\n            }\n\n            result.items.loading = true;\n            result.items.hash = terms.hash;\n\n            return this.http.post(\n                'module/asset/search',\n                {\n                    page: '' + (result.page + 1),\n                    hitsperpage: '20',\n                    query: {\n                        terms: terms\n                    }\n                }\n            ).then((function(response) {\n                if (result.items.hash === terms.hash) {\n                    result.page = parseInt(response.data.response.page);\n                    result.pages = parseInt(response.data.response.pages);\n                    result.items.total = parseInt(response.data.response.totalhits);\n                    result.items.loading = false;\n                    response.data.results.forEach((function (asset) {\n                        var item = this.createItem({\n                            id: asset.id,\n                            type: asset.isfolder ? 'file' : 'dir',\n                            name: asset.primaryfile || asset.name,\n                            title: asset.assettitle,\n                            extension: asset.fileformat.id,\n                            thumbnail: this.url(\n                                '/emshare/views/modules/asset/downloads/preview/thumb/' +\n                                encodeURI(asset.sourcepath) + '/thumb.jpg',\n                                this.config.url\n                            )\n                        });\n                        result.items.push(item);\n                    }).bind(this));\n                }\n                return result;\n            }).bind(this));\n        }\n    },\n    events: {\n        'select-item': function (item) {\n            if (item === 'entrypoint') {\n                this.category = null;\n                this.search = null;\n                this.loadAssets().then((function(response) {\n                    this.items = response.items;\n                    this.$parent.$dispatch('select-item', this);\n                }).bind(this));\n            } else {\n                return true;\n            }\n        },\n        'load-more-items': function (results) {\n            this.loadAssets(results);\n        },\n        'search': function (sword, results) {\n            this.search = sword;\n            this.loadAssets(results);\n            return true;\n        },\n        'category-load-items': function (tree) {\n            this.http.post(\n                'lists/search/category',\n                {\n                    hitsperpage: '100',\n                    query: {\n                        terms: [\n                            {\n                                field: 'parentid',\n                                operator: 'exact',\n                                value: tree.item ? tree.item.id : 'index'\n                            }\n                        ]\n                    }\n                }\n            ).then(function (response) {\n                tree.items = response.data.results.map((function(category) {\n                    category.type = 'category';\n                    return this.createItem(category);\n                }).bind(this));\n            });\n        },\n        'category-select-item': function (tree) {\n            this.category = tree.item;\n            this.search = null;\n            this.loadAssets(tree.items).then(function (response) {\n                if (tree.selected) {\n                    this.$dispatch('select-item', tree);\n                }\n            }.bind(this));\n        }\n    }\n};\n\n},{\"../../../../model/item\":27,\"../base\":16,\"./template.html\":18,\"vue\":7}],18:[function(require,module,exports){\nmodule.exports = '<div>\\n    <tree :fetch=\"fetch\" name=\"category\" :types=\"[\\'category\\']\"></tree>\\n</div>';\n},{}],19:[function(require,module,exports){\n\nvar Config = require('../../../../config');\n\nvar token = Config.github.token || localStorage.getItem('github_token');\n\nmodule.exports = {\n    extends: require('../base'),\n    http: {\n        base: 'https://api.github.com'\n    },\n    events: {\n        'load-items': function (tree) {\n            if (token) {\n                this.http.get(\n                    'repos/' + this.config.username + '/' + this.config.repository + '/contents/' + (tree.item ? tree.item.id : ''),\n                    {\n                        headers: {\n                            Authorization: 'token ' + token\n                        }\n                    }\n                ).then(\n                    function(response) {\n                        var items = response.data.map((function (file) {\n                            file.id = file.path.replace(/^\\/+/, '');\n                            return this.createItem(file);\n                        }).bind(this));\n                        tree.items = items.sort(function (a, b) {\n                            if (a.type === 'dir' && b.type !== 'dir') {\n                                return -1;\n                            } else if (a.type !== 'dir' && b.type === 'dir') {\n                                return 1;\n                            }\n                            var nameA = a.name.toLowerCase(), nameB = b.name.toLowerCase();\n                            if (nameA < nameB)\n                                return -1;\n                            if (nameA > nameB)\n                                return 1;\n                            return 0;\n                        });\n                    },\n                    (function () {\n                        localStorage.removeItem('github_token');\n                        token = null;\n                        this.$dispatch('load-items', tree);\n                    }).bind(this)\n                );\n            } else {\n                this.createToken().then((function () {\n                    this.$dispatch('load-items', tree);\n                }).bind(this));\n            }\n        }\n    },\n    methods: {\n        createToken: function () {\n            return this.login(function (username, password, callback) {\n                var baseUrl = document.location.protocol + '//' + document.location.host,\n                    fingerprint = 'netresearch-assetpicker-github-' + baseUrl,\n                    options = {\n                        headers: {\n                            Authorization: 'Basic ' + btoa(username + ':' + password)\n                        }\n                    },\n                    createAuthorization = (function () {\n                        this.http.post(\n                            'authorizations',\n                            {\n                                note: 'Repository access for ' + this.t('header.title') + ' at ' + baseUrl,\n                                scopes: ['public_repo', 'repo'],\n                                fingerprint: fingerprint\n                            },\n                            options\n                        ).then(function (response) {\n                            token = response.data.token;\n                            localStorage.setItem('github_token', token);\n                            if (!token) {\n                                throw 'Could not find expected token';\n                            }\n                            callback(true);\n                        })\n                    }).bind(this);\n\n                this.http.get('authorizations', options).then(\n                    (function(response) {\n                        for (var i = 0, l = response.data.length; i < l; i++) {\n                            if (response.data[i].fingerprint === fingerprint) {\n                                this.http.delete('authorizations/' + response.data[i].id, options).then(createAuthorization);\n                                return;\n                            }\n                        }\n                        createAuthorization();\n                    }).bind(this),\n                    function () {\n                        callback(false);\n                    }\n                );\n            });\n        }\n    }\n};\n\n},{\"../../../../config\":24,\"../base\":16}],20:[function(require,module,exports){\nvar Vue = require('vue');\n\nmodule.exports = {\n    template: require('./template.html'),\n    props: {\n        storage: Object,\n        open: Boolean,\n        id: String\n    },\n    data: function () {\n        return {\n            items: null,\n            selection: require('../../model/selection'),\n            pick: require('../../model/pick'),\n            fetch: false\n        };\n    },\n    ready: function () {\n        if (this.open) {\n            this.$children[0].select();\n        }\n    },\n    events: {\n        'select-item': function(item) {\n            this.selection.search = null;\n            if (item instanceof Vue) {\n                // Triggered from sidebar\n                item.items.storage = this.id;\n                this.selection.items = item.items;\n                this.pick.candidate(item.item);\n            } else {\n                // Triggered from stage\n                if (item.storage === this.id) {\n                    this.open = true;\n                    this.$nextTick(function () {\n                        this.$broadcast('select-item', item);\n                    });\n                } else {\n                    this.$broadcast('deselect-items');\n                }\n            }\n        },\n        'load-more-items': function (results) {\n            if (results.storage === this.id) {\n                this.$broadcast('load-more-items', results);\n            }\n        }\n    },\n    watch: {\n        'selection.search': function (sword) {\n            if (sword) {\n                this.pick.candidate(null);\n                this.$broadcast('deselect-items');\n                this.$set('selection.results.' + this.id, []);\n                var results = this.$get('selection.results.' + this.id);\n                results.storage = this.id;\n                this.fetch = true;\n                this.$nextTick(function() {\n                    this.$broadcast('search', sword, results);\n                });\n            }\n        }\n    },\n    components: {\n        github: require('./adapter/github'),\n        entermediadb: require('./adapter/entermediadb')\n    }\n};\n\n},{\"../../model/pick\":28,\"../../model/selection\":29,\"./adapter/entermediadb\":17,\"./adapter/github\":19,\"./template.html\":21,\"vue\":7}],21:[function(require,module,exports){\nmodule.exports = '<tree :open=\"open\" :fetch=\"fetch\" :entry-point=\"storage.label || storage.adapter\">\\n    <div :is=\"storage.adapter\" :fetch=\"fetch\" :config=\"storage\" :storage=\"id\"></div>\\n</tree>\\n';\n},{}],22:[function(require,module,exports){\nvar Vue = require('vue');\nvar escapeRegExp = require('escape-string-regexp');\n\nvar selected;\n\nVue.component('tree', {\n    template: require('./tree.html'),\n    props: {\n        item: Object,\n        open: Boolean,\n        name: String,\n        selected: Boolean,\n        fetch: Boolean,\n        entryPoint: String,\n        main: Boolean,\n        types: {\n            type: Array,\n            default: function() {\n                return ['dir']\n            }\n        },\n        items: {\n            type: Array,\n            default: function () {\n                return [];\n            }\n        }\n    },\n    data: function () {\n        return {\n            search: this.$parent.search || {\n                sword: null,\n                results: null\n            }\n        }\n    },\n    computed: {\n        prefix: function () {\n            return this.name ? this.name + '-' : '';\n        }\n    },\n    created: function () {\n        if (!this.entryPoint) {\n            this.$dispatch(this.prefix + 'load-items', this);\n        }\n    },\n    events: {\n        'search': function (sword, results) {\n            this.search.sword = sword;\n            this.search.results = results;\n            this.doSearch();\n            return true;\n        },\n        'select-item': function (item) {\n            if (item instanceof Vue) {\n                if (item.entryPoint) {\n                    this.$nextTick(function () {\n                        this.$broadcast('select-item', 'entrypoint');\n                    });\n                    return false;\n                }\n                item = item.item;\n                if (!item) {\n                    return true;\n                }\n            }\n            if (item === 'entrypoint' && !this.item && !this.entryPoint) {\n                this.select(false);\n                return false;\n            }\n            if (item && this.item && item.id === this.item.id || this.entryPoint && !item.id) {\n                this.select();\n                return false;\n            } else if (item) {\n                for (var i = 0, l = this.items.length; i < l; i++) {\n                    if (this.items[i].id === item.id) {\n                        if (!this.open && !this.entryPoint) {\n                            this.open = true;\n                            this.$nextTick(function () {\n                                this.$broadcast('select-item', item);\n                            });\n                            return false;\n                        }\n                        break;\n                    }\n                }\n            }\n            return true;\n        },\n        '_open': function () {\n            this.open = true;\n            return true;\n        },\n        'deselect-items': function () {\n            this.selected = false;\n            return true;\n        }\n    },\n    methods: {\n        doSearch: function () {\n            if (this.search.sword) {\n                var regex = new RegExp(escapeRegExp(this.search.sword), 'i');\n                for (var i = 0, l = this.items.length; i < l ; i++) {\n                    if (regex.test(this.items[i].name)) {\n                        this.search.results.push(this.items[i]);\n                    }\n                }\n            }\n        },\n        select: function (doSwitch) {\n            if (doSwitch !== false) {\n                if (selected && selected !== this) {\n                    selected.selected = false;\n                }\n                selected = this;\n            }\n            this.selected = true;\n            (this.entryPoint ? this : this.$parent).$dispatch(this.prefix + 'select-item', this);\n            this.$parent.$dispatch('_open');\n        }\n    },\n    watch: {\n        items: function (items) {\n            if (this.selected) {\n                this.$nextTick(function () {\n                    this.$parent.$dispatch(this.prefix + 'select-item', this);\n                });\n            }\n            this.$nextTick(function () {\n                this.doSearch();\n            })\n        }\n    },\n    components: []\n});\n\n},{\"./tree.html\":23,\"escape-string-regexp\":2,\"vue\":7}],23:[function(require,module,exports){\nmodule.exports = '<template v-if=\"entryPoint\">\\n    <ul class=\"tree storage\">\\n        <li>\\n            <span class=\"glyphicon glyphicon glyphicon-triangle-{{open ? \\'bottom\\' : \\'right\\'}}\" v-on:click=\"open = !open\"></span>\\n            <span class=\"item{{selected ? \\' selected\\' : \\'\\'}}\" v-on:click=\"select\">\\n            <span class=\"glyphicon glyphicon-folder-close\"></span> {{entryPoint}}</span>\\n            <div v-show=\"open\">\\n                <slot v-if=\"open || selected || fetch\">\\n                    <tree :name=\"name\" :fetch=\"fetch\"></tree>\\n                </slot>\\n            </div>\\n        </li>\\n    </ul>\\n</template>\\n<template v-else>\\n    <template v-if=\"item\">\\n        <span v-if=\"items && items.filterBy(\\'type\\', types).length\" class=\"glyphicon glyphicon glyphicon-triangle-{{open ? \\'bottom\\' : \\'right\\'}}\" v-on:click=\"open = !open\"></span>\\n        <span class=\"item{{selected ? \\' selected\\' : \\'\\'}}\" v-on:click=\"select\">\\n        <span class=\"glyphicon glyphicon-folder-close\"></span>\\n            {{item.name}}\\n        </span>\\n    </template>\\n    <div v-show=\"open || !item\">\\n        <ul v-if=\"open || !item || fetch\" class=\"{{item ? \\'\\' : \\'tree\\'}}\">\\n            <li v-for=\"item in items.filterBy(\\'type\\', types)\">\\n                <tree :item=\"item\" :name=\"name\" :fetch=\"fetch\" :types=\"types\"></tree>\\n            </li>\\n        </ul>\\n    </div>\\n</template>';\n},{}],24:[function(require,module,exports){\nmodule.exports = {\n    title: 'AssetPicker',\n    storages: {\n        /* entermediaDB: {\n            adapter: 'entermediadb',\n            url: 'http://em9.entermediadb.org/openinstitute',\n            proxy: true\n        },\n        github: {\n            adapter: 'github',\n            username: 'netresearch',\n            repository: 'assetpicker'\n        } */\n    },\n    proxy: {\n        url: 'proxy.php?to={{url}}',\n        all: false\n    },\n    github: {\n        //token: 'j2332dwedcdj33dx3jm8389xdq'\n    },\n    pick: {\n        limit: 1,\n        types: ['file'],\n        extensions: []\n    },\n    language: 'auto'\n};\n\n},{}],25:[function(require,module,exports){\nvar Vue = require('vue');\nVue.config.debug = true;\nVue.use(require('vue-resource'));\n\nvar i18nMixin = require('vue-i18n-mixin');\ni18nMixin.methods.t = i18nMixin.methods.translate;\n\nVue.mixin(i18nMixin);\n\nrequire('./util');\nrequire('./components/tree');\nrequire('./components/loader');\n\nvar messaging;\nvar config = require('./config');\n\nif (window.parent && window.parent !== window) {\n    var Messaging = require('../shared/util/messaging');\n    messaging = new Messaging('*', window.parent);\n    messaging.call('picker.getConfig').then(function(configOverride) {\n        require('extend')(true, config, configOverride);\n        create();\n    });\n} else {\n    config.storages = {\n        entermediaDB: {\n            label: 'EnterMediaDB',\n            loginHint: 'Username: admin<br>Password: admin',\n            adapter: 'entermediadb',\n            url: 'http://em9.entermediadb.org/openinstitute',\n            proxy: true\n        },\n        github: {\n            adapter: 'github',\n            username: 'netresearch',\n            repository: 'assetpicker'\n        }\n    };\n    create();\n}\n\nfunction create() {\n    new Vue({\n        el: '#app',\n        data: function () {\n            return {\n                locale: (function () {\n                    var lang, available = ['en', 'de'];\n                    if (config.language === 'auto') {\n                        lang = (navigator.language || navigator.userLanguage).replace(/^([a-z][a-z]).+$/, '$1');\n                    } else {\n                        lang = config.language;\n                    }\n                    if (available.indexOf(lang) < 0) {\n                        lang = available[0];\n                        if (config.language !== 'auto') {\n                            console.warn('Configured language %s is not available', config.language);\n                        }\n                    }\n                    return lang;\n                })(),\n                config: config,\n                picked: require('./model/pick'),\n                selection: require('./model/selection'),\n                numStorages: Object.keys(config.storages).length,\n                maximized: false\n            }\n        },\n        translations: require('./locales'),\n        components: {\n            storage: require('./components/storage'),\n            'items': require('./components/items'),\n            handle: require('./components/handle')\n        },\n        created: function () {\n            if (messaging) {\n                messaging.registerServer('app', this);\n                messaging.call('picker._trigger', 'ready');\n            }\n        },\n        ready: function () {\n            this.$el.className += (this.$el.className ? ' ' : '') + 'loaded';\n        },\n        events: {\n            'finish-pick': function () {\n                this.pick();\n            }\n        },\n        watch: {\n            maximized: function (maximized) {\n                this.callPicker('picker._trigger', 'resize', maximized);\n            }\n        },\n        methods: {\n            setPickConfig: function (config) {\n                this.config.pick = config;\n            },\n            callPicker: function(method) {\n                if (messaging) {\n                    messaging.call.apply(messaging, arguments);\n                }\n            },\n            cancel: function() {\n                this.picked.clear();\n                this.callPicker('picker.modal.close');\n            },\n            pick: function() {\n                this.callPicker('picker.pick', this.picked.export());\n                this.picked.clear();\n            }\n        }\n    });\n}\n\n},{\"../shared/util/messaging\":32,\"./components/handle\":8,\"./components/items\":12,\"./components/loader\":13,\"./components/storage\":20,\"./components/tree\":22,\"./config\":24,\"./locales\":26,\"./model/pick\":28,\"./model/selection\":29,\"./util\":30,\"extend\":3,\"vue\":7,\"vue-i18n-mixin\":4,\"vue-resource\":6}],26:[function(require,module,exports){\nmodule.exports = {\n    header: {\n        title: {\n            en: 'Explorer',\n            de: 'Explorer'\n        },\n        search: {\n            en: 'Search',\n            de: 'Suchen'\n        },\n        minimize: {\n            en: 'Minimize',\n            de: 'Verkleinern'\n        },\n        maximize: {\n            en: 'Maximize',\n            de: 'Maximieren'\n        }\n    },\n    login: {\n        username: {\n            en: 'User name',\n            de: 'Benutzername'\n        },\n        password: {\n            en: 'Password',\n            de: 'Passwort'\n        },\n        login: {\n            en: 'Login',\n            de: 'Anmelden'\n        },\n        failure: {\n            en: 'Your username or password were wrong',\n            de: 'Benutzername oder Passwort sind falsch'\n        }\n    },\n    types: {\n        file: {\n            en: 'File',\n            de: 'Datei'\n        },\n        dir: {\n            en: 'Directory',\n            de: 'Verzeichnis'\n        },\n        category: {\n            en: 'Category',\n            de: 'Kategorie'\n        }\n    },\n    adapters: {\n        github: {\n            en: 'Repository {{config.username}}/{{config.repository}} on GitHub',\n            de: 'Repository {{config.username}}/{{config.repository}} auf GitHub'\n        },\n        entermediadb: {\n            en: 'EnterMediaDB on {{config.url}}',\n            de: 'EnterMediaDB auf {{config.url}}'\n        }\n    },\n    footer: {\n        pick: {\n            en: 'Select',\n            de: 'Auswählen'\n        },\n        cancel: {\n            en: 'Cancel',\n            de: 'Abbrechen'\n        }\n    }\n};\n\n},{}],27:[function(require,module,exports){\nmodule.exports = function (data) {\n    if (typeof data === 'function') {\n        data = data();\n    }\n    if (!data.id) {\n        throw 'Item requires an ID';\n    }\n    if (!data.storage) {\n        throw 'Item requires the storage ID';\n    }\n    return item = {\n        id: data.id,\n        storage: data.storage,\n        name: data.name,\n        type: data.type,\n        extension: data.extension || (data.name.match(/\\.([0-9a-z]+)$/i) || []).pop(),\n        thumbnail: data.thumbnail\n    };\n};\n\n},{}],28:[function(require,module,exports){\nvar pick = [], candidate;\nvar config = require('../config');\n\npick.isAllowed = function (item) {\n    var conf = config.pick;\n    return conf.types.indexOf(item.type) > -1 && (!conf.extensions || !conf.extensions.length || conf.extensions.indexOf(item.extension) > -1);\n};\npick.contains = function (item) {\n    for (var i = 0, l = pick.length; i < l; i++) {\n        if (pick[i].id === item.id && pick[i].storage === item.storage) {\n            return true;\n        }\n    }\n};\npick.candidate = function (item) {\n    if (item) {\n        this.add(item);\n    }\n    candidate = item;\n};\npick.toggle = function (item) {\n    if (this.contains(item)) {\n        this.remove(item);\n    } else {\n        this.add(item);\n    }\n};\npick.add = function (item) {\n    if (!this.contains(item) && this.isAllowed(item)) {\n        if (candidate && item !== candidate && this.contains(candidate)) {\n            this.remove(candidate);\n        }\n        while (config.pick.limit && this.length >= config.pick.limit) {\n            this.shift();\n        }\n        this.push(item);\n    }\n};\npick.remove = function (item) {\n    for (var i = 0, l = this.length; i < l; i++) {\n        var next = this.shift();\n        if (next.id !== item.id || next.storage !== item.storage) {\n            pick.push(next);\n        }\n    }\n    if (!pick.length && candidate && item !== candidate && this.isAllowed(candidate)) {\n        this.push(candidate);\n    }\n};\npick.clear = function () {\n    while (this.length) {\n        this.pop();\n    }\n};\npick.export = function () {\n    return config.pick.limit === 1 ? this[0] : this.slice(0);\n};\n\nmodule.exports = pick;\n},{\"../config\":24}],29:[function(require,module,exports){\nmodule.exports = {\n    storage: null,\n    search: null,\n    items: [],\n    results: {}\n};\n},{}],30:[function(require,module,exports){\nvar Vue = require('vue');\nVue.filter('encodeURI', function(data) {\n    return encodeURI(data);\n});\nVue.filter('encodeURIComponent', function(data) {\n    return encodeURIComponent(data);\n});\n\nArray.prototype.filterBy = function (key, value) {\n    var values = value.indexOf ? value : [value];\n    return this.filter(function(arrayValue) {\n        if (typeof arrayValue === \"object\") {\n            return values.indexOf(arrayValue[key]) > -1;\n        }\n        return false;\n    });\n};\n\nvar params;\n\nwindow.getParams = function () {\n    if (params === undefined) {\n        params = {};\n        var query = window.location.search.substring(1);\n        var vars = query.split('&');\n        for (var i = 0; i < vars.length; i++) {\n            var pair = vars[i].split('=');\n            params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n        }\n    }\n    return params;\n};\nwindow.getParam = function (name) {\n    return window.getParams()[name];\n};\n},{\"vue\":7}],31:[function(require,module,exports){\nmodule.exports = function(protoProps) {\n    var result = function () {\n        if (this.construct) {\n            this.construct.apply(this, arguments);\n        }\n    };\n\n    result.prototype = result;\n    Object.keys(protoProps).forEach(function(key) {\n        result.prototype[key] = protoProps[key];\n    });\n\n    return result;\n};\n\n},{}],32:[function(require,module,exports){\nvar uid = require('./uid');\n\nmodule.exports = require('./createClass')({\n    construct: function(origin, windowObject) {\n        var eventMethod = window.addEventListener ? \"addEventListener\" : \"attachEvent\";\n        var eventer = window[eventMethod];\n        var messageEvent = eventMethod == \"attachEvent\" ? \"onmessage\" : \"message\";\n        eventer(messageEvent, function(e) {\n            var origin = e.origin || e.originalEvent.origin;\n            if (e.source === this.window && origin === this.origin || this.origin === '*') {\n                this.handle(e.data);\n            }\n        }.bind(this), false);\n\n        this.origin = origin;\n        this.window = windowObject;\n        this.servers = {};\n        this._handlers = {};\n    },\n    registerServer: function (name, object) {\n        this.servers[name] = object;\n    },\n    _createHandler: function() {\n        var handler = { callbacks: [] };\n        handler.then = function (callback) {\n            if (handler.hasOwnProperty('_result')) {\n                callback(handler._result);\n            } else {\n                handler.callbacks.push(callback);\n            }\n            return handler;\n        };\n        return handler;\n    },\n    call: function(method) {\n        var arguments = Array.prototype.slice.call(arguments, 1);\n        var id = uid(), handler = this._createHandler();\n        this._handlers[id] = handler;\n        this.window.postMessage({id: id, method: method, arguments: arguments}, this.origin);\n        return handler;\n    },\n    handle: function(message) {\n        if (message.method === 'resolve') {\n            if (this._handlers[message.id]) {\n                var handler = this._handlers[message.id];\n                for (var i = 0, l = handler.callbacks.length; i < l; i++) {\n                    handler.callbacks[i](message.result);\n                }\n                handler._result = message.result;\n                delete this._handlers[message.id];\n            }\n        } else {\n            var methodPath = message.method.split('.');\n            var method = methodPath.pop();\n            var target = this.servers;\n            while (target && methodPath.length) {\n                target = target[methodPath.shift()];\n            }\n            if (!target || !target[method]) {\n                throw 'Unknown method \"' + message.method + '\"';\n            }\n            var result = target[method].apply(target, message.arguments);\n            var resolve = function(res) {\n                // It might occure, that the id is reset, when the target frame is removed\n                if (message.id) {\n                    this.window.postMessage({method: 'resolve', id: message.id, result: res}, this.origin);\n                }\n            }.bind(this);\n            if (typeof result === 'function') {\n                result(resolve);\n            } else {\n                resolve(result);\n            }\n        }\n    }\n});\n\n},{\"./createClass\":31,\"./uid\":33}],33:[function(require,module,exports){\nmodule.exports = function uid () {\n    return '' + Math.random().toString(36).substr(2, 9);\n};\n\n},{}]},{},[25])\n\n","'use strict';\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nmodule.exports = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn str.replace(matchOperatorsRe, '\\\\$&');\n};\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) {/**/}\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[0],\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t} else if ((typeof target !== 'object' && typeof target !== 'function') || target == null) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = target[name];\n\t\t\t\tcopy = options[name];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\ttarget[name] = extend(deep, clone, copy);\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\n","'use strict';\n\nmodule.exports = {\n\n\tready: function() {\n\t\t// Make sure root locale exists\n\t\tif (!this.$root.locale)\n\t\t\tthis.$root.$set('locale', 'en');\n\t},\n\n\tmethods: {\n\t\ttranslate: function(namespace, locale) {\n\n\t\t\tlocale = locale || this.locale || this.$root.locale;\n\n\t\t\t// Fetch lang data\n\t\t\tvar data = this.$options.translations || this.$root.$options.translations;\n\n\t\t\ttry {\n\t\t\t\tvar translation = namespace.split('.').reduce(function(a, b, index) {\n\t\t\t\t\treturn typeof a === 'object' ? a[b] : data[a][b];\n\t\t\t\t})[locale];\n\t\t\t} catch(e) {\n\t\t\t\tconsole.warn('No translation found for namespace %s using locale %s (%s)', namespace, locale, e);\n\t\t\t}\n\t\t\treturn translation;\n\t\t}\n\t}\n}\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.infiniteScroll = global.infiniteScroll || {})));\n}(this, function (exports) { 'use strict';\n\n  var throttle = function throttle(fn, delay) {\n    var now, lastExec, timer, context, args; //eslint-disable-line\n\n    var execute = function execute() {\n      fn.apply(context, args);\n      lastExec = now;\n    };\n\n    return function () {\n      context = this;\n      args = arguments;\n\n      now = Date.now();\n\n      if (timer) {\n        clearTimeout(timer);\n        timer = null;\n      }\n\n      if (lastExec) {\n        var diff = delay - (now - lastExec);\n        if (diff < 0) {\n          execute();\n        } else {\n          timer = setTimeout(function () {\n            execute();\n          }, diff);\n        }\n      } else {\n        execute();\n      }\n    };\n  };\n\n  var getScrollTop = function getScrollTop(element) {\n    if (element === window) {\n      return Math.max(window.pageYOffset || 0, document.documentElement.scrollTop);\n    }\n\n    return element.scrollTop;\n  };\n\n  var getComputedStyle = document.defaultView.getComputedStyle;\n\n  var getScrollEventTarget = function getScrollEventTarget(element) {\n    var currentNode = element;\n    // bugfix, see http://w3help.org/zh-cn/causes/SD9013 and http://stackoverflow.com/questions/17016740/onscroll-function-is-not-working-for-chrome\n    while (currentNode && currentNode.tagName !== 'HTML' && currentNode.tagName !== 'BODY' && currentNode.nodeType === 1) {\n      var overflowY = getComputedStyle(currentNode).overflowY;\n      if (overflowY === 'scroll' || overflowY === 'auto') {\n        return currentNode;\n      }\n      currentNode = currentNode.parentNode;\n    }\n    return window;\n  };\n\n  var getVisibleHeight = function getVisibleHeight(element) {\n    if (element === window) {\n      return document.documentElement.clientHeight;\n    }\n\n    return element.clientHeight;\n  };\n\n  var getElementTop = function getElementTop(element) {\n    if (element === window) {\n      return getScrollTop(window);\n    }\n    return element.getBoundingClientRect().top + getScrollTop(window);\n  };\n\n  var isAttached = function isAttached(element) {\n    var currentNode = element.parentNode;\n    while (currentNode) {\n      if (currentNode.tagName === 'HTML') {\n        return true;\n      }\n      if (currentNode.nodeType === 11) {\n        return false;\n      }\n      currentNode = currentNode.parentNode;\n    }\n    return false;\n  };\n\n  var infiniteScroll = {\n    doBind: function doBind() {\n      if (this.binded) return; // eslint-disable-line\n      this.binded = true;\n\n      var directive = this;\n      var element = directive.el;\n\n      directive.scrollEventTarget = getScrollEventTarget(element);\n      directive.scrollListener = throttle(directive.doCheck.bind(directive), 200);\n      directive.scrollEventTarget.addEventListener('scroll', directive.scrollListener);\n\n      var disabledExpr = element.getAttribute('infinite-scroll-disabled');\n      var disabled = false;\n\n      if (disabledExpr) {\n        this.vm.$watch(disabledExpr, function (value) {\n          directive.disabled = value;\n          if (!value && directive.immediateCheck) {\n            directive.doCheck();\n          }\n        });\n        disabled = Boolean(directive.vm.$get(disabledExpr));\n      }\n      directive.disabled = disabled;\n\n      var distanceExpr = element.getAttribute('infinite-scroll-distance');\n      var distance = 0;\n      if (distanceExpr) {\n        distance = Number(directive.vm.$get(distanceExpr));\n        if (isNaN(distance)) {\n          distance = 0;\n        }\n      }\n      directive.distance = distance;\n\n      var immediateCheckExpr = element.getAttribute('infinite-scroll-immediate-check');\n      var immediateCheck = true;\n      if (immediateCheckExpr) {\n        immediateCheck = Boolean(directive.vm.$get(immediateCheckExpr));\n      }\n      directive.immediateCheck = immediateCheck;\n\n      if (immediateCheck) {\n        directive.doCheck();\n      }\n\n      var eventName = element.getAttribute('infinite-scroll-listen-for-event');\n      if (eventName) {\n        directive.vm.$on(eventName, function () {\n          directive.doCheck();\n        });\n      }\n    },\n\n    doCheck: function doCheck(force) {\n      var scrollEventTarget = this.scrollEventTarget;\n      var element = this.el;\n      var distance = this.distance;\n\n      if (force !== true && this.disabled) return; //eslint-disable-line\n      var viewportScrollTop = getScrollTop(scrollEventTarget);\n      var viewportBottom = viewportScrollTop + getVisibleHeight(scrollEventTarget);\n\n      var shouldTrigger = false;\n\n      if (scrollEventTarget === element) {\n        shouldTrigger = scrollEventTarget.scrollHeight - viewportBottom <= distance;\n      } else {\n        var elementBottom = getElementTop(element) - getElementTop(scrollEventTarget) + element.offsetHeight + viewportScrollTop;\n\n        shouldTrigger = viewportBottom + distance >= elementBottom;\n      }\n\n      if (shouldTrigger && this.expression) {\n        this.vm.$get(this.expression);\n      }\n    },\n\n    bind: function bind() {\n      var directive = this;\n      var element = this.el;\n\n      directive.vm.$on('hook:ready', function () {\n        if (isAttached(element)) {\n          directive.doBind();\n        }\n      });\n\n      this.bindTryCount = 0;\n\n      var tryBind = function tryBind() {\n        if (directive.bindTryCount > 10) return; //eslint-disable-line\n        directive.bindTryCount++;\n        if (isAttached(element)) {\n          directive.doBind();\n        } else {\n          setTimeout(tryBind, 50);\n        }\n      };\n\n      tryBind();\n    },\n\n    unbind: function unbind() {\n      this.scrollEventTarget.removeEventListener('scroll', this.scrollListener);\n    }\n  };\n\n  if (window.Vue) {\n    window.infiniteScroll = infiniteScroll;\n    Vue.use(install);\n  }\n\n  function install(Vue) {\n    Vue.directive('infiniteScroll', infiniteScroll);\n  }\n\n  exports.install = install;\n  exports.infiniteScroll = infiniteScroll;\n\n}));","/*!\n * vue-resource v0.9.3\n * https://github.com/vuejs/vue-resource\n * Released under the MIT License.\n */\n\n'use strict';\n\n/**\n * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n */\n\nvar RESOLVED = 0;\nvar REJECTED = 1;\nvar PENDING = 2;\n\nfunction Promise$2(executor) {\n\n    this.state = PENDING;\n    this.value = undefined;\n    this.deferred = [];\n\n    var promise = this;\n\n    try {\n        executor(function (x) {\n            promise.resolve(x);\n        }, function (r) {\n            promise.reject(r);\n        });\n    } catch (e) {\n        promise.reject(e);\n    }\n}\n\nPromise$2.reject = function (r) {\n    return new Promise$2(function (resolve, reject) {\n        reject(r);\n    });\n};\n\nPromise$2.resolve = function (x) {\n    return new Promise$2(function (resolve, reject) {\n        resolve(x);\n    });\n};\n\nPromise$2.all = function all(iterable) {\n    return new Promise$2(function (resolve, reject) {\n        var count = 0,\n            result = [];\n\n        if (iterable.length === 0) {\n            resolve(result);\n        }\n\n        function resolver(i) {\n            return function (x) {\n                result[i] = x;\n                count += 1;\n\n                if (count === iterable.length) {\n                    resolve(result);\n                }\n            };\n        }\n\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$2.resolve(iterable[i]).then(resolver(i), reject);\n        }\n    });\n};\n\nPromise$2.race = function race(iterable) {\n    return new Promise$2(function (resolve, reject) {\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$2.resolve(iterable[i]).then(resolve, reject);\n        }\n    });\n};\n\nvar p$1 = Promise$2.prototype;\n\np$1.resolve = function resolve(x) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (x === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        var called = false;\n\n        try {\n            var then = x && x['then'];\n\n            if (x !== null && typeof x === 'object' && typeof then === 'function') {\n                then.call(x, function (x) {\n                    if (!called) {\n                        promise.resolve(x);\n                    }\n                    called = true;\n                }, function (r) {\n                    if (!called) {\n                        promise.reject(r);\n                    }\n                    called = true;\n                });\n                return;\n            }\n        } catch (e) {\n            if (!called) {\n                promise.reject(e);\n            }\n            return;\n        }\n\n        promise.state = RESOLVED;\n        promise.value = x;\n        promise.notify();\n    }\n};\n\np$1.reject = function reject(reason) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (reason === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        promise.state = REJECTED;\n        promise.value = reason;\n        promise.notify();\n    }\n};\n\np$1.notify = function notify() {\n    var promise = this;\n\n    nextTick(function () {\n        if (promise.state !== PENDING) {\n            while (promise.deferred.length) {\n                var deferred = promise.deferred.shift(),\n                    onResolved = deferred[0],\n                    onRejected = deferred[1],\n                    resolve = deferred[2],\n                    reject = deferred[3];\n\n                try {\n                    if (promise.state === RESOLVED) {\n                        if (typeof onResolved === 'function') {\n                            resolve(onResolved.call(undefined, promise.value));\n                        } else {\n                            resolve(promise.value);\n                        }\n                    } else if (promise.state === REJECTED) {\n                        if (typeof onRejected === 'function') {\n                            resolve(onRejected.call(undefined, promise.value));\n                        } else {\n                            reject(promise.value);\n                        }\n                    }\n                } catch (e) {\n                    reject(e);\n                }\n            }\n        }\n    });\n};\n\np$1.then = function then(onResolved, onRejected) {\n    var promise = this;\n\n    return new Promise$2(function (resolve, reject) {\n        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n        promise.notify();\n    });\n};\n\np$1.catch = function (onRejected) {\n    return this.then(undefined, onRejected);\n};\n\nvar PromiseObj = window.Promise || Promise$2;\n\nfunction Promise$1(executor, context) {\n\n    if (executor instanceof PromiseObj) {\n        this.promise = executor;\n    } else {\n        this.promise = new PromiseObj(executor.bind(context));\n    }\n\n    this.context = context;\n}\n\nPromise$1.all = function (iterable, context) {\n    return new Promise$1(PromiseObj.all(iterable), context);\n};\n\nPromise$1.resolve = function (value, context) {\n    return new Promise$1(PromiseObj.resolve(value), context);\n};\n\nPromise$1.reject = function (reason, context) {\n    return new Promise$1(PromiseObj.reject(reason), context);\n};\n\nPromise$1.race = function (iterable, context) {\n    return new Promise$1(PromiseObj.race(iterable), context);\n};\n\nvar p = Promise$1.prototype;\n\np.bind = function (context) {\n    this.context = context;\n    return this;\n};\n\np.then = function (fulfilled, rejected) {\n\n    if (fulfilled && fulfilled.bind && this.context) {\n        fulfilled = fulfilled.bind(this.context);\n    }\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    return new Promise$1(this.promise.then(fulfilled, rejected), this.context);\n};\n\np.catch = function (rejected) {\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    return new Promise$1(this.promise.catch(rejected), this.context);\n};\n\np.finally = function (callback) {\n\n    return this.then(function (value) {\n        callback.call(this);\n        return value;\n    }, function (reason) {\n        callback.call(this);\n        return PromiseObj.reject(reason);\n    });\n};\n\nvar debug = false;\nvar util = {};\nvar array = [];\nfunction Util (Vue) {\n    util = Vue.util;\n    debug = Vue.config.debug || !Vue.config.silent;\n}\n\nfunction warn(msg) {\n    if (typeof console !== 'undefined' && debug) {\n        console.warn('[VueResource warn]: ' + msg);\n    }\n}\n\nfunction error(msg) {\n    if (typeof console !== 'undefined') {\n        console.error(msg);\n    }\n}\n\nfunction nextTick(cb, ctx) {\n    return util.nextTick(cb, ctx);\n}\n\nfunction trim(str) {\n    return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nvar isArray = Array.isArray;\n\nfunction isString(val) {\n    return typeof val === 'string';\n}\n\nfunction isBoolean(val) {\n    return val === true || val === false;\n}\n\nfunction isFunction(val) {\n    return typeof val === 'function';\n}\n\nfunction isObject(obj) {\n    return obj !== null && typeof obj === 'object';\n}\n\nfunction isPlainObject(obj) {\n    return isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n}\n\nfunction isFormData(obj) {\n    return typeof FormData !== 'undefined' && obj instanceof FormData;\n}\n\nfunction when(value, fulfilled, rejected) {\n\n    var promise = Promise$1.resolve(value);\n\n    if (arguments.length < 2) {\n        return promise;\n    }\n\n    return promise.then(fulfilled, rejected);\n}\n\nfunction options(fn, obj, opts) {\n\n    opts = opts || {};\n\n    if (isFunction(opts)) {\n        opts = opts.call(obj);\n    }\n\n    return merge(fn.bind({ $vm: obj, $options: opts }), fn, { $options: opts });\n}\n\nfunction each(obj, iterator) {\n\n    var i, key;\n\n    if (typeof obj.length == 'number') {\n        for (i = 0; i < obj.length; i++) {\n            iterator.call(obj[i], obj[i], i);\n        }\n    } else if (isObject(obj)) {\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                iterator.call(obj[key], obj[key], key);\n            }\n        }\n    }\n\n    return obj;\n}\n\nvar assign = Object.assign || _assign;\n\nfunction merge(target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n        _merge(target, source, true);\n    });\n\n    return target;\n}\n\nfunction defaults(target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n\n        for (var key in source) {\n            if (target[key] === undefined) {\n                target[key] = source[key];\n            }\n        }\n    });\n\n    return target;\n}\n\nfunction _assign(target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n        _merge(target, source);\n    });\n\n    return target;\n}\n\nfunction _merge(target, source, deep) {\n    for (var key in source) {\n        if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n            if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\n                target[key] = {};\n            }\n            if (isArray(source[key]) && !isArray(target[key])) {\n                target[key] = [];\n            }\n            _merge(target[key], source[key], deep);\n        } else if (source[key] !== undefined) {\n            target[key] = source[key];\n        }\n    }\n}\n\nfunction root (options, next) {\n\n    var url = next(options);\n\n    if (isString(options.root) && !url.match(/^(https?:)?\\//)) {\n        url = options.root + '/' + url;\n    }\n\n    return url;\n}\n\nfunction query (options, next) {\n\n    var urlParams = Object.keys(Url.options.params),\n        query = {},\n        url = next(options);\n\n    each(options.params, function (value, key) {\n        if (urlParams.indexOf(key) === -1) {\n            query[key] = value;\n        }\n    });\n\n    query = Url.params(query);\n\n    if (query) {\n        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n    }\n\n    return url;\n}\n\n/**\n * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n */\n\nfunction expand(url, params, variables) {\n\n    var tmpl = parse(url),\n        expanded = tmpl.expand(params);\n\n    if (variables) {\n        variables.push.apply(variables, tmpl.vars);\n    }\n\n    return expanded;\n}\n\nfunction parse(template) {\n\n    var operators = ['+', '#', '.', '/', ';', '?', '&'],\n        variables = [];\n\n    return {\n        vars: variables,\n        expand: function (context) {\n            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n                if (expression) {\n\n                    var operator = null,\n                        values = [];\n\n                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n                        operator = expression.charAt(0);\n                        expression = expression.substr(1);\n                    }\n\n                    expression.split(/,/g).forEach(function (variable) {\n                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n                        values.push.apply(values, getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n                        variables.push(tmp[1]);\n                    });\n\n                    if (operator && operator !== '+') {\n\n                        var separator = ',';\n\n                        if (operator === '?') {\n                            separator = '&';\n                        } else if (operator !== '#') {\n                            separator = operator;\n                        }\n\n                        return (values.length !== 0 ? operator : '') + values.join(separator);\n                    } else {\n                        return values.join(',');\n                    }\n                } else {\n                    return encodeReserved(literal);\n                }\n            });\n        }\n    };\n}\n\nfunction getValues(context, operator, key, modifier) {\n\n    var value = context[key],\n        result = [];\n\n    if (isDefined(value) && value !== '') {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n            value = value.toString();\n\n            if (modifier && modifier !== '*') {\n                value = value.substring(0, parseInt(modifier, 10));\n            }\n\n            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n        } else {\n            if (modifier === '*') {\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            result.push(encodeValue(operator, value[k], k));\n                        }\n                    });\n                }\n            } else {\n                var tmp = [];\n\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        tmp.push(encodeValue(operator, value));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            tmp.push(encodeURIComponent(k));\n                            tmp.push(encodeValue(operator, value[k].toString()));\n                        }\n                    });\n                }\n\n                if (isKeyOperator(operator)) {\n                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n                } else if (tmp.length !== 0) {\n                    result.push(tmp.join(','));\n                }\n            }\n        }\n    } else {\n        if (operator === ';') {\n            result.push(encodeURIComponent(key));\n        } else if (value === '' && (operator === '&' || operator === '?')) {\n            result.push(encodeURIComponent(key) + '=');\n        } else if (value === '') {\n            result.push('');\n        }\n    }\n\n    return result;\n}\n\nfunction isDefined(value) {\n    return value !== undefined && value !== null;\n}\n\nfunction isKeyOperator(operator) {\n    return operator === ';' || operator === '&' || operator === '?';\n}\n\nfunction encodeValue(operator, value, key) {\n\n    value = operator === '+' || operator === '#' ? encodeReserved(value) : encodeURIComponent(value);\n\n    if (key) {\n        return encodeURIComponent(key) + '=' + value;\n    } else {\n        return value;\n    }\n}\n\nfunction encodeReserved(str) {\n    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n        if (!/%[0-9A-Fa-f]/.test(part)) {\n            part = encodeURI(part);\n        }\n        return part;\n    }).join('');\n}\n\nfunction template (options) {\n\n    var variables = [],\n        url = expand(options.url, options.params, variables);\n\n    variables.forEach(function (key) {\n        delete options.params[key];\n    });\n\n    return url;\n}\n\n/**\n * Service for URL templating.\n */\n\nvar ie = document.documentMode;\nvar el = document.createElement('a');\n\nfunction Url(url, params) {\n\n    var self = this || {},\n        options = url,\n        transform;\n\n    if (isString(url)) {\n        options = { url: url, params: params };\n    }\n\n    options = merge({}, Url.options, self.$options, options);\n\n    Url.transforms.forEach(function (handler) {\n        transform = factory(handler, transform, self.$vm);\n    });\n\n    return transform(options);\n}\n\n/**\n * Url options.\n */\n\nUrl.options = {\n    url: '',\n    root: null,\n    params: {}\n};\n\n/**\n * Url transforms.\n */\n\nUrl.transforms = [template, query, root];\n\n/**\n * Encodes a Url parameter string.\n *\n * @param {Object} obj\n */\n\nUrl.params = function (obj) {\n\n    var params = [],\n        escape = encodeURIComponent;\n\n    params.add = function (key, value) {\n\n        if (isFunction(value)) {\n            value = value();\n        }\n\n        if (value === null) {\n            value = '';\n        }\n\n        this.push(escape(key) + '=' + escape(value));\n    };\n\n    serialize(params, obj);\n\n    return params.join('&').replace(/%20/g, '+');\n};\n\n/**\n * Parse a URL and return its components.\n *\n * @param {String} url\n */\n\nUrl.parse = function (url) {\n\n    if (ie) {\n        el.href = url;\n        url = el.href;\n    }\n\n    el.href = url;\n\n    return {\n        href: el.href,\n        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n        port: el.port,\n        host: el.host,\n        hostname: el.hostname,\n        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n        search: el.search ? el.search.replace(/^\\?/, '') : '',\n        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n    };\n};\n\nfunction factory(handler, next, vm) {\n    return function (options) {\n        return handler.call(vm, options, next);\n    };\n}\n\nfunction serialize(params, obj, scope) {\n\n    var array = isArray(obj),\n        plain = isPlainObject(obj),\n        hash;\n\n    each(obj, function (value, key) {\n\n        hash = isObject(value) || isArray(value);\n\n        if (scope) {\n            key = scope + '[' + (plain || hash ? key : '') + ']';\n        }\n\n        if (!scope && array) {\n            params.add(value.name, value.value);\n        } else if (hash) {\n            serialize(params, value, key);\n        } else {\n            params.add(key, value);\n        }\n    });\n}\n\nfunction xdrClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var xdr = new XDomainRequest(),\n            handler = function (event) {\n\n            var response = request.respondWith(xdr.responseText, {\n                status: xdr.status,\n                statusText: xdr.statusText\n            });\n\n            resolve(response);\n        };\n\n        request.abort = function () {\n            return xdr.abort();\n        };\n\n        xdr.open(request.method, request.getUrl(), true);\n        xdr.timeout = 0;\n        xdr.onload = handler;\n        xdr.onerror = handler;\n        xdr.ontimeout = function () {};\n        xdr.onprogress = function () {};\n        xdr.send(request.getBody());\n    });\n}\n\nvar ORIGIN_URL = Url.parse(location.href);\nvar SUPPORTS_CORS = 'withCredentials' in new XMLHttpRequest();\n\nfunction cors (request, next) {\n\n    if (!isBoolean(request.crossOrigin) && crossOrigin(request)) {\n        request.crossOrigin = true;\n    }\n\n    if (request.crossOrigin) {\n\n        if (!SUPPORTS_CORS) {\n            request.client = xdrClient;\n        }\n\n        delete request.emulateHTTP;\n    }\n\n    next();\n}\n\nfunction crossOrigin(request) {\n\n    var requestUrl = Url.parse(Url(request));\n\n    return requestUrl.protocol !== ORIGIN_URL.protocol || requestUrl.host !== ORIGIN_URL.host;\n}\n\nfunction body (request, next) {\n\n    if (request.emulateJSON && isPlainObject(request.body)) {\n        request.body = Url.params(request.body);\n        request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n    }\n\n    if (isFormData(request.body)) {\n        delete request.headers['Content-Type'];\n    }\n\n    if (isPlainObject(request.body)) {\n        request.body = JSON.stringify(request.body);\n    }\n\n    next(function (response) {\n\n        var contentType = response.headers['Content-Type'];\n\n        if (isString(contentType) && contentType.indexOf('application/json') === 0) {\n\n            try {\n                response.data = response.json();\n            } catch (e) {\n                response.data = null;\n            }\n        } else {\n            response.data = response.text();\n        }\n    });\n}\n\nfunction jsonpClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var name = request.jsonp || 'callback',\n            callback = '_jsonp' + Math.random().toString(36).substr(2),\n            body = null,\n            handler,\n            script;\n\n        handler = function (event) {\n\n            var status = 0;\n\n            if (event.type === 'load' && body !== null) {\n                status = 200;\n            } else if (event.type === 'error') {\n                status = 404;\n            }\n\n            resolve(request.respondWith(body, { status: status }));\n\n            delete window[callback];\n            document.body.removeChild(script);\n        };\n\n        request.params[name] = callback;\n\n        window[callback] = function (result) {\n            body = JSON.stringify(result);\n        };\n\n        script = document.createElement('script');\n        script.src = request.getUrl();\n        script.type = 'text/javascript';\n        script.async = true;\n        script.onload = handler;\n        script.onerror = handler;\n\n        document.body.appendChild(script);\n    });\n}\n\nfunction jsonp (request, next) {\n\n    if (request.method == 'JSONP') {\n        request.client = jsonpClient;\n    }\n\n    next(function (response) {\n\n        if (request.method == 'JSONP') {\n            response.data = response.json();\n        }\n    });\n}\n\nfunction before (request, next) {\n\n    if (isFunction(request.before)) {\n        request.before.call(this, request);\n    }\n\n    next();\n}\n\n/**\n * HTTP method override Interceptor.\n */\n\nfunction method (request, next) {\n\n    if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\n        request.headers['X-HTTP-Method-Override'] = request.method;\n        request.method = 'POST';\n    }\n\n    next();\n}\n\nfunction header (request, next) {\n\n    request.method = request.method.toUpperCase();\n    request.headers = assign({}, Http.headers.common, !request.crossOrigin ? Http.headers.custom : {}, Http.headers[request.method.toLowerCase()], request.headers);\n\n    next();\n}\n\n/**\n * Timeout Interceptor.\n */\n\nfunction timeout (request, next) {\n\n    var timeout;\n\n    if (request.timeout) {\n        timeout = setTimeout(function () {\n            request.abort();\n        }, request.timeout);\n    }\n\n    next(function (response) {\n\n        clearTimeout(timeout);\n    });\n}\n\nfunction xhrClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var xhr = new XMLHttpRequest(),\n            handler = function (event) {\n\n            var response = request.respondWith('response' in xhr ? xhr.response : xhr.responseText, {\n                status: xhr.status === 1223 ? 204 : xhr.status, // IE9 status bug\n                statusText: xhr.status === 1223 ? 'No Content' : trim(xhr.statusText),\n                headers: parseHeaders(xhr.getAllResponseHeaders())\n            });\n\n            resolve(response);\n        };\n\n        request.abort = function () {\n            return xhr.abort();\n        };\n\n        xhr.open(request.method, request.getUrl(), true);\n        xhr.timeout = 0;\n        xhr.onload = handler;\n        xhr.onerror = handler;\n\n        if (request.progress) {\n            if (request.method === 'GET') {\n                xhr.addEventListener('progress', request.progress);\n            } else if (/^(POST|PUT)$/i.test(request.method)) {\n                xhr.upload.addEventListener('progress', request.progress);\n            }\n        }\n\n        if (request.credentials === true) {\n            xhr.withCredentials = true;\n        }\n\n        each(request.headers || {}, function (value, header) {\n            xhr.setRequestHeader(header, value);\n        });\n\n        xhr.send(request.getBody());\n    });\n}\n\nfunction parseHeaders(str) {\n\n    var headers = {},\n        value,\n        name,\n        i;\n\n    each(trim(str).split('\\n'), function (row) {\n\n        i = row.indexOf(':');\n        name = trim(row.slice(0, i));\n        value = trim(row.slice(i + 1));\n\n        if (headers[name]) {\n\n            if (isArray(headers[name])) {\n                headers[name].push(value);\n            } else {\n                headers[name] = [headers[name], value];\n            }\n        } else {\n\n            headers[name] = value;\n        }\n    });\n\n    return headers;\n}\n\nfunction Client (context) {\n\n    var reqHandlers = [sendRequest],\n        resHandlers = [],\n        handler;\n\n    if (!isObject(context)) {\n        context = null;\n    }\n\n    function Client(request) {\n        return new Promise$1(function (resolve) {\n\n            function exec() {\n\n                handler = reqHandlers.pop();\n\n                if (isFunction(handler)) {\n                    handler.call(context, request, next);\n                } else {\n                    warn('Invalid interceptor of type ' + typeof handler + ', must be a function');\n                    next();\n                }\n            }\n\n            function next(response) {\n\n                if (isFunction(response)) {\n\n                    resHandlers.unshift(response);\n                } else if (isObject(response)) {\n\n                    resHandlers.forEach(function (handler) {\n                        response = when(response, function (response) {\n                            return handler.call(context, response) || response;\n                        });\n                    });\n\n                    when(response, resolve);\n\n                    return;\n                }\n\n                exec();\n            }\n\n            exec();\n        }, context);\n    }\n\n    Client.use = function (handler) {\n        reqHandlers.push(handler);\n    };\n\n    return Client;\n}\n\nfunction sendRequest(request, resolve) {\n\n    var client = request.client || xhrClient;\n\n    resolve(client(request));\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n/**\n * HTTP Response.\n */\n\nvar Response = function () {\n    function Response(body, _ref) {\n        var url = _ref.url;\n        var headers = _ref.headers;\n        var status = _ref.status;\n        var statusText = _ref.statusText;\n        classCallCheck(this, Response);\n\n\n        this.url = url;\n        this.body = body;\n        this.headers = headers || {};\n        this.status = status || 0;\n        this.statusText = statusText || '';\n        this.ok = status >= 200 && status < 300;\n    }\n\n    Response.prototype.text = function text() {\n        return this.body;\n    };\n\n    Response.prototype.blob = function blob() {\n        return new Blob([this.body]);\n    };\n\n    Response.prototype.json = function json() {\n        return JSON.parse(this.body);\n    };\n\n    return Response;\n}();\n\nvar Request = function () {\n    function Request(options) {\n        classCallCheck(this, Request);\n\n\n        this.method = 'GET';\n        this.body = null;\n        this.params = {};\n        this.headers = {};\n\n        assign(this, options);\n    }\n\n    Request.prototype.getUrl = function getUrl() {\n        return Url(this);\n    };\n\n    Request.prototype.getBody = function getBody() {\n        return this.body;\n    };\n\n    Request.prototype.respondWith = function respondWith(body, options) {\n        return new Response(body, assign(options || {}, { url: this.getUrl() }));\n    };\n\n    return Request;\n}();\n\n/**\n * Service for sending network requests.\n */\n\nvar CUSTOM_HEADERS = { 'X-Requested-With': 'XMLHttpRequest' };\nvar COMMON_HEADERS = { 'Accept': 'application/json, text/plain, */*' };\nvar JSON_CONTENT_TYPE = { 'Content-Type': 'application/json;charset=utf-8' };\n\nfunction Http(options) {\n\n    var self = this || {},\n        client = Client(self.$vm);\n\n    defaults(options || {}, self.$options, Http.options);\n\n    Http.interceptors.forEach(function (handler) {\n        client.use(handler);\n    });\n\n    return client(new Request(options)).then(function (response) {\n\n        return response.ok ? response : Promise$1.reject(response);\n    }, function (response) {\n\n        if (response instanceof Error) {\n            error(response);\n        }\n\n        return Promise$1.reject(response);\n    });\n}\n\nHttp.options = {};\n\nHttp.headers = {\n    put: JSON_CONTENT_TYPE,\n    post: JSON_CONTENT_TYPE,\n    patch: JSON_CONTENT_TYPE,\n    delete: JSON_CONTENT_TYPE,\n    custom: CUSTOM_HEADERS,\n    common: COMMON_HEADERS\n};\n\nHttp.interceptors = [before, timeout, method, body, jsonp, header, cors];\n\n['get', 'delete', 'head', 'jsonp'].forEach(function (method) {\n\n    Http[method] = function (url, options) {\n        return this(assign(options || {}, { url: url, method: method }));\n    };\n});\n\n['post', 'put', 'patch'].forEach(function (method) {\n\n    Http[method] = function (url, body, options) {\n        return this(assign(options || {}, { url: url, method: method, body: body }));\n    };\n});\n\nfunction Resource(url, params, actions, options) {\n\n    var self = this || {},\n        resource = {};\n\n    actions = assign({}, Resource.actions, actions);\n\n    each(actions, function (action, name) {\n\n        action = merge({ url: url, params: params || {} }, options, action);\n\n        resource[name] = function () {\n            return (self.$http || Http)(opts(action, arguments));\n        };\n    });\n\n    return resource;\n}\n\nfunction opts(action, args) {\n\n    var options = assign({}, action),\n        params = {},\n        body;\n\n    switch (args.length) {\n\n        case 2:\n\n            params = args[0];\n            body = args[1];\n\n            break;\n\n        case 1:\n\n            if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n                body = args[0];\n            } else {\n                params = args[0];\n            }\n\n            break;\n\n        case 0:\n\n            break;\n\n        default:\n\n            throw 'Expected up to 4 arguments [params, body], got ' + args.length + ' arguments';\n    }\n\n    options.body = body;\n    options.params = assign({}, options.params, params);\n\n    return options;\n}\n\nResource.actions = {\n\n    get: { method: 'GET' },\n    save: { method: 'POST' },\n    query: { method: 'GET' },\n    update: { method: 'PUT' },\n    remove: { method: 'DELETE' },\n    delete: { method: 'DELETE' }\n\n};\n\nfunction plugin(Vue) {\n\n    if (plugin.installed) {\n        return;\n    }\n\n    Util(Vue);\n\n    Vue.url = Url;\n    Vue.http = Http;\n    Vue.resource = Resource;\n    Vue.Promise = Promise$1;\n\n    Object.defineProperties(Vue.prototype, {\n\n        $url: {\n            get: function () {\n                return options(Vue.url, this, this.$options.url);\n            }\n        },\n\n        $http: {\n            get: function () {\n                return options(Vue.http, this, this.$options.http);\n            }\n        },\n\n        $resource: {\n            get: function () {\n                return Vue.resource.bind(this);\n            }\n        },\n\n        $promise: {\n            get: function () {\n                var _this = this;\n\n                return function (executor) {\n                    return new Vue.Promise(executor, _this);\n                };\n            }\n        }\n\n    });\n}\n\nif (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(plugin);\n}\n\nmodule.exports = plugin;","/*!\n * Vue.js v1.0.26\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    if (obj._isVue) {\n      delete obj._data[key];\n      obj._digest();\n    }\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && UA.indexOf('trident') > 0;\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\nvar iosVersionMatch = isIos && UA.match(/os ([\\d_]+)/);\nvar iosVersion = iosVersionMatch && iosVersionMatch[1].split('_');\n\n// detecting iOS UIWebView by indexedDB\nvar hasMutationObserverBug = iosVersion && Number(iosVersion[0]) >= 9 && Number(iosVersion[1]) >= 3 && !window.indexedDB;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined' && !hasMutationObserverBug) {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nvar _Set = undefined;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = function () {\n    this.set = Object.create(null);\n  };\n  _Set.prototype.has = function (key) {\n    return this.set[key] !== undefined;\n  };\n  _Set.prototype.add = function (key) {\n    this.set[key] = 1;\n  };\n  _Set.prototype.clear = function () {\n    this.set = Object.create(null);\n  };\n}\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    if (this.size === this.limit) {\n      removed = this.shift();\n    }\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\nvar formatComponentName = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n\n    warn = function (msg, vm) {\n      if (hasConsole && !config.silent) {\n        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n      }\n    };\n\n    formatComponentName = function (vm) {\n      var name = vm._isVue ? vm.$options.name : vm.name;\n      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  if (!node) return false;\n  var doc = node.ownerDocument.documentElement;\n  var parent = node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        // Firefox returns unknown for some \"Interactive elements.\"\n        !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el, options);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el, options);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el, options) {\n  // dynamic syntax\n  var exp = el.getAttribute('is');\n  if (exp != null) {\n    if (resolveAsset(options, 'components', exp)) {\n      el.removeAttribute('is');\n      return { id: exp };\n    }\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  if (process.env.NODE_ENV !== 'production') {\n    if (child.propsData && !vm) {\n      warn('propsData can only be used as an instantiation option.');\n    }\n  }\n  var options = {};\n  var key;\n  if (child['extends']) {\n    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n      parent = mergeOptions(parent, mixinOptions, vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @param {Boolean} warnMissing\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id, warnMissing) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  var res = assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n  }\n  return res;\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index or target element reference.\n *\n * @param {*} item\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE: isIE,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tisIos: isIos,\n\tiosVersionMatch: iosVersionMatch,\n\tiosVersion: iosVersion,\n\thasMutationObserverBug: hasMutationObserverBug,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initData().\n    this._data = {};\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path, vm) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path, last);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path, obj);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\nfunction noop() {}\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here because the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if (e.toString().match(/unsafe-eval|CSP/)) {\n        warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n      } else {\n        warn('Invalid expression. ' + 'Generated function body: ' + body);\n      }\n    }\n    return noop;\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat literal values as paths\n  !literalValueRE$1.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue.length = 0;\n  userQueue.length = 0;\n  has = {};\n  circular = {};\n  waiting = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  var _again = true;\n\n  _function: while (_again) {\n    _again = false;\n\n    runBatcherQueue(queue);\n    runBatcherQueue(userQueue);\n    // user watchers triggered more watchers,\n    // keep flushing until it depletes\n    if (queue.length) {\n      _again = true;\n      continue _function;\n    }\n    // dev tool hook\n    /* istanbul ignore if */\n    if (devtools && config.devtools) {\n      devtools.emit('flush');\n    }\n    resetBatcherState();\n  }\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (var i = 0; i < queue.length; i++) {\n    var watcher = queue[i];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n        break;\n      }\n    }\n  }\n  queue.length = 0;\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    // push watcher into appropriate queue\n    var q = watcher.user ? userQueue : queue;\n    has[id] = q.length;\n    q.push(watcher);\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushBatcherQueue);\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nvar seenObjects = new _Set();\nfunction traverse(val, seen) {\n  var i = undefined,\n      keys = undefined;\n  if (!seen) {\n    seen = seenObjects;\n    seen.clear();\n  }\n  var isA = isArray(val);\n  var isO = isObject(val);\n  if ((isA || isO) && Object.isExtensible(val)) {\n    if (val.__ob__) {\n      var depId = val.__ob__.dep.id;\n      if (seen.has(depId)) {\n        return;\n      } else {\n        seen.add(depId);\n      }\n    }\n    if (isA) {\n      i = val.length;\n      while (i--) traverse(val[i], seen);\n    } else if (isO) {\n      keys = Object.keys(val);\n      i = keys.length;\n      while (i--) traverse(val[keys[i]], seen);\n    }\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\nvar commentRE = /<!--/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n  var commentMatch = commentRE.test(templateString);\n\n  if (!tagMatch && !entityMatch && !commentMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment. However, iOS Safari has\n  // bug when using directly cloned template content with touch\n  // events and can cause crashes when the nodes are removed from DOM, so we\n  // have to treat template elements as string templates. (#2805)\n  /* istanbul ignore if */\n  if (isRealTemplate(node)) {\n    return stringToFragment(node.innerHTML);\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar IF = 2100;\nvar FOR = 2200;\nvar SLOT = 2300;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      var target = prevEl.nextSibling;\n      /* istanbul ignore if */\n      if (!target) {\n        // reset end anchor position in case the position was messed up\n        // by an external drag-n-drop library.\n        after(this.end, prevEl);\n        target = this.end;\n      }\n      frag.before(target);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = getTrackByKey(index, key, value, trackByKey);\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else if (Object.isExtensible(value)) {\n        def(value, id, frag);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * watcher's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\n/**\n * Get the track by key for an item.\n *\n * @param {Number} index\n * @param {String} key\n * @param {*} value\n * @param {String} [trackByKey]\n */\n\nfunction getTrackByKey(index, key, value, trackByKey) {\n  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    // #3029 only update when the value changes. This prevent\n    // browsers from overwriting values like selectionStart\n    value = _toString(value);\n    if (value !== this.el.value) this.el.value = value;\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var _this = this;\n\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', function () {\n      nextTick(_this.forceUpdate);\n    });\n    if (!inDoc(el)) {\n      nextTick(this.forceUpdate);\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n        }\n        value = value.replace(importantRE, '').trim();\n        this.el.style.setProperty(prop.kebab, value, isImportant);\n      } else {\n        this.el.style[prop.camel] = value;\n      }\n    } else {\n      this.el.style[prop.camel] = '';\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  if (camel !== 'filter' && camel in testEl.style) {\n    return {\n      kebab: prop,\n      camel: camel\n    };\n  }\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return {\n        kebab: prefixes[i] + prop,\n        camel: prefixed\n      };\n    }\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n\n      if (el[attr] !== attrValue) {\n        el[attr] = attrValue;\n      }\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (!value) {\n      this.cleanup();\n    } else if (typeof value === 'string') {\n      this.setClass(value.trim().split(/\\s+/));\n    } else {\n      this.setClass(normalize$1(value));\n    }\n  },\n\n  setClass: function setClass(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val) {\n        apply(this.el, val, addClass);\n      }\n    }\n    this.prevKeys = value;\n  },\n\n  cleanup: function cleanup(value) {\n    var prevKeys = this.prevKeys;\n    if (!prevKeys) return;\n    var i = prevKeys.length;\n    while (i--) {\n      var key = prevKeys[i];\n      if (!value || value.indexOf(key) < 0) {\n        apply(this.el, key, removeClass);\n      }\n    }\n  }\n};\n\n/**\n * Normalize objects and arrays (potentially containing objects)\n * into array of strings.\n *\n * @param {Object|Array<String|Object>} value\n * @return {Array<String>}\n */\n\nfunction normalize$1(value) {\n  var res = [];\n  if (isArray(value)) {\n    for (var i = 0, l = value.length; i < l; i++) {\n      var _key = value[i];\n      if (_key) {\n        if (typeof _key === 'string') {\n          res.push(_key);\n        } else {\n          for (var k in _key) {\n            if (_key[k]) res.push(k);\n          }\n        }\n      }\n    }\n  } else if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) res.push(key);\n    }\n  }\n  return res;\n}\n\n/**\n * Add or remove a class/classes on an element\n *\n * @param {Element} el\n * @param {String} key The class name. This may or may not\n *                     contain a space character, in such a\n *                     case we'll deal with multiple class\n *                     names at once.\n * @param {Function} fn\n */\n\nfunction apply(el, key, fn) {\n  key = key.trim();\n  if (key.indexOf(' ') === -1) {\n    fn(el, key);\n    return;\n  }\n  // The key contains one or more space characters.\n  // Since a class name doesn't accept such characters, we\n  // treat it as multiple classes.\n  var keys = key.split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    fn(el, keys[i]);\n  }\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      this.el.removeAttribute(':is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @param {Vue} vm\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions, vm) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.', vm);\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name, vm);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var inlineProps = vm.$options.propsData;\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (inlineProps && hasOwn(inlineProps, path)) {\n        initProp(vm, prop, inlineProps[path]);\n      }if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Process a prop with a rawValue, applying necessary coersions,\n * default values & assertions and call the given callback with\n * processed value.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} rawValue\n * @param {Function} fn\n */\n\nfunction processPropValue(vm, prop, rawValue, fn) {\n  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n  var value = rawValue;\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop);\n  }\n  value = coerceProp(prop, value, vm);\n  var coerced = value !== rawValue;\n  if (!assertProp(prop, value, vm)) {\n    value = undefined;\n  }\n  if (isSimple && !coerced) {\n    withoutConversion(function () {\n      fn(value);\n    });\n  } else {\n    fn(value);\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    defineReactive(vm, prop.path, value);\n  });\n}\n\n/**\n * Update a prop's value on a vm.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction updateProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    vm[prop.path] = value;\n  });\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, prop) {\n  // no default, return undefined\n  var options = prop.options;\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n * @param {Vue} vm\n */\n\nfunction assertProp(prop, value, vm) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = !type;\n  var expectedTypes = [];\n  if (type) {\n    if (!isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n    }\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value, vm) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  if (typeof coerce === 'function') {\n    return coerce(value);\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n    return value;\n  }\n}\n\n/**\n * Assert the type of a value\n *\n * @param {*} value\n * @param {Function} type\n * @return {Object}\n */\n\nfunction assertType(value, type) {\n  var valid;\n  var expectedType;\n  if (type === String) {\n    expectedType = 'string';\n    valid = typeof value === expectedType;\n  } else if (type === Number) {\n    expectedType = 'number';\n    valid = typeof value === expectedType;\n  } else if (type === Boolean) {\n    expectedType = 'boolean';\n    valid = typeof value === expectedType;\n  } else if (type === Function) {\n    expectedType = 'function';\n    valid = typeof value === expectedType;\n  } else if (type === Object) {\n    expectedType = 'object';\n    valid = isPlainObject(value);\n  } else if (type === Array) {\n    expectedType = 'array';\n    valid = isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  };\n}\n\n/**\n * Format type for output\n *\n * @param {String} type\n * @return {String}\n */\n\nfunction formatType(type) {\n  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n}\n\n/**\n * Format value\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      updateProp(child, prop, val);\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    oldId = oldId || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    removeClass(el, oldId + '-transition');\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props, vm);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && !isScript(node)) {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = _toString(value);\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          modifiers = parseModifiers(attr.name);\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName, true);\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nfunction isScript(el) {\n  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n      value.split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.', vm.$parent);\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    var nodes = content.childNodes;\n    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n      return;\n    }\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node, true);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n    }\n    var props = this._props;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key)) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, value, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        // force the expression into a statement so that\n        // it always dynamically resolves the method to call (#2670)\n        // kinda ugly hack, but does the job.\n        value = attrs[i].value;\n        if (isSimplePath(value)) {\n          value += '.apply(this, $arguments)';\n        }\n        handler = (vm._scope || vm._context).$eval(value, true);\n        handler._fromParent = true;\n        vm.$on(name.replace(eventRE), handler);\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop$1() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop$1;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data && this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value, true);\n    }\n    /* istanbul ignore if */\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String|Array<String>|Function} ...sortKeys\n * @param {Number} [order]\n */\n\nfunction orderBy(arr) {\n  var comparator = null;\n  var sortKeys = undefined;\n  arr = convertArray(arr);\n\n  // determine order (last argument)\n  var args = toArray(arguments, 1);\n  var order = args[args.length - 1];\n  if (typeof order === 'number') {\n    order = order < 0 ? -1 : 1;\n    args = args.length > 1 ? args.slice(0, -1) : args;\n  } else {\n    order = 1;\n  }\n\n  // determine sortKeys & comparator\n  var firstArg = args[0];\n  if (!firstArg) {\n    return arr;\n  } else if (typeof firstArg === 'function') {\n    // custom comparator\n    comparator = function (a, b) {\n      return firstArg(a, b) * order;\n    };\n  } else {\n    // string keys. flatten first\n    sortKeys = Array.prototype.concat.apply([], args);\n    comparator = function (a, b, i) {\n      i = i || 0;\n      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n    };\n  }\n\n  function baseCompare(a, b, sortKeyIndex) {\n    var sortKey = sortKeys[sortKeyIndex];\n    if (sortKey) {\n      if (sortKey !== '$key') {\n        if (isObject(a) && '$value' in a) a = a.$value;\n        if (isObject(b) && '$value' in b) b = b.$value;\n      }\n      a = isObject(a) ? getPath(a, sortKey) : a;\n      b = isObject(b) ? getPath(b, sortKey) : b;\n    }\n    return a === b ? 0 : a > b ? order : -order;\n  }\n\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(comparator);\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   * @param {Number} decimals Decimal places\n   */\n\n  currency: function currency(value, _currency, decimals) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    decimals = decimals != null ? decimals : 2;\n    var stringified = Math.abs(value).toFixed(decimals);\n    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    var length = args.length;\n    if (length > 1) {\n      var index = value % 10 - 1;\n      return index in args ? args[index] : args[length - 1];\n    } else {\n      return args[0] + (value === 1 ? '' : 's');\n    }\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          if (!definition.name) {\n            definition.name = id;\n          }\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.26';\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue);\n    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n    }\n  }\n}, 0);\n\nmodule.exports = Vue;","module.exports = {\n    template: '<div></div>',\n    data: function () {\n        return {\n            x: undefined\n        };\n    },\n    ready: function () {\n        document.body.addEventListener('mousemove', this.drag);\n        var parent = this.$el.parentNode, defaultCursor = parent.style.cursor;\n        this.$el.addEventListener('mousedown', function (e) {\n            parent.style.cursor = 'col-resize';\n            var drag = function (e) {\n                this.x = e.pageX;\n            }.bind(this);\n            var leave = function () {\n                parent.style.cursor = defaultCursor;\n                parent.removeEventListener('mousemove', drag);\n                document.body.removeEventListener('mouseleave', leave);\n                document.body.removeEventListener('mouseup', leave);\n            }.bind(this);\n            parent.addEventListener('mousemove', drag);\n            document.body.addEventListener('mouseleave', leave);\n            document.body.addEventListener('mouseup', leave);\n        }.bind(this));\n    }\n};","module.exports = '<div class=\"items-grid\">\\n    <item inline-template v-for=\"item in items | limitBy limit\" :item=\"item\" track-by=\"id\">\\n        <div v-on:click.prevent=\"select\" v-if=\"visible\" v-on:dblclick.prevent=\"open\" class=\"item{{selected ? \\' selected\\' : \\'\\'}}\">\\n            <span v-if=\"item.type !== \\'file\\'\" class=\"glyphicon glyphicon-folder-open{{item.type !== \\'dir\\' ? \\' item-ext\\' : \\'\\'}}\" data-ext=\"{{t(\\'types.\\'+item.type)}}\"></span>\\n            <span v-if=\"item.type === \\'file\\'\" class=\"glyphicon glyphicon-file item-ext\" data-ext=\"{{item.extension}}\"></span>\\n            <div v-if=\"item.thumbnail\" class=\"item-thumbnail\" v-bind:style=\"{backgroundImage: \\'url(\\' + item.thumbnail + \\')\\'}\"></div>\\n            <div>{{item.name}}</div>\\n        </div>\\n    </item>\\n</div>\\n';","module.exports = {\n    template: require('./grid.html'),\n    props: {\n        items: Array,\n        storage: String,\n        limit: Number\n    },\n    components: {\n        item: {\n            props: {\n                item: Object\n            },\n            data: function () {\n                return {\n                    picked: require('../../model/pick')\n                }\n            },\n            computed: {\n                selected: function() {\n                    return this.picked.contains(this.item);\n                },\n                visible: function () {\n                    return this.item.type !== 'file' || this.picked.isAllowed(this.item);\n                }\n            },\n            detached: function() {\n                if (this.picked.contains(this.item)) {\n                    this.picked.remove(this.item);\n                }\n            },\n            methods: {\n                select: function() {\n                    this.picked.toggle(this.item);\n                },\n                open: function() {\n                    if (this.item.type === 'file' && this.picked.isAllowed(this.item)) {\n                        this.picked.add(this.item);\n                        this.$dispatch('finish-pick');\n                    } else {\n                        this.$root.$broadcast('select-item', this.item);\n                    }\n                }\n            }\n        }\n    }\n};\n","module.exports = '<div\\n    class=\"items-container\"\\n    v-infinite-scroll=\"loadMore()\"\\n    infinite-scroll-distance=\"10\"\\n    infinite-scroll-listen-for-event=\"items-set\">\\n    <div v-if=\"selection.search && !storage\" class=\"items-search\">\\n        <template v-for=\"(storage, items) in selection.results\">\\n            <template v-if=\"items.length\">\\n                <h5>{{storages[storage].label || storage}}</h5>\\n                <div :is=\"layout\" v-ref:items :items=\"items\" :storage=\"storage\" :limit=\"10\"></div>\\n                <span v-if=\"$refs.items && $refs.items.limit && items.length > $refs.items.limit\" v-on:click.prevent=\"selectStorage(storage)\" class=\"btn btn-link\">Show all...</span>\\n            </template>\\n        </template>\\n    </div>\\n    <div v-if=\"storage || selection.search\">\\n        <h5 v-if=\"selection.search\">{{storage}}</h5>\\n        <div :is=\"layout\" :items=\"selection.items\" :storage=\"storage\"></div>\\n    </div>\\n    <template v-if=\"!storage && !selection.search\">\\n        <div v-for=\"(storage, config) in storages\" v-on:click.prevent=\"$root.$broadcast(\\'select-item\\', {storage: storage})\" class=\"storage\">\\n            <span class=\"glyphicon glyphicon-folder-close\"></span>\\n            <h6>{{config.label || storage}}</h6>\\n            <p class=\"text-muted\">{{$interpolate(t(\\'adapters.\\' + config.adapter))}}</p>\\n        </div>\\n    </template>\\n</div>\\n';","module.exports = {\n    template: require('./index.html'),\n    directives: {infiniteScroll: require('vue-infinite-scroll').infiniteScroll},\n    props: {\n        layout: {\n            type: String,\n            default: 'grid'\n        }\n    },\n    data: function () {\n        var selection = require('../../model/selection');\n        var keys = Object.keys(selection.results);\n        return {\n            selection: selection,\n            storage: keys.length > 1 ? null : keys[0],\n            storages: require('../../config').storages\n        }\n    },\n    events: {\n        'select-item': function (item) {\n            this.storage = item.storage;\n            return true;\n        }\n    },\n    watch: {\n        'selection.search': function (sword) {\n            this.$nextTick(function () {\n                if (sword) {\n                    this.storage = undefined;\n                }\n            });\n        },\n        'selection.items': function (items) {\n            this.storage = items.storage;\n            this.$nextTick(function () {\n                if ((!this.search || this.storage) && items && !items.loading && items.total && items.length < items.total) {\n                    this.$dispatch('items-set');\n                }\n            })\n        }\n    },\n    methods: {\n        loadMore: function () {\n            this.$root.$broadcast('load-more-items', this.selection.items);\n        },\n        selectStorage: function (storage) {\n            this.storage = storage;\n            this.selection.items = this.$get('selection.results.' + storage);\n        }\n    },\n    components: {\n        grid: require('./grid')\n    }\n};\n","var Vue = require('vue');\nvar progressLoader = document.getElementById('app-progress'), progressLoaderClass = progressLoader.className;\nVue.http.interceptors.push(function(options, next) {\n    progressLoader.className = progressLoaderClass + ' active';\n    next(function(response) {\n        progressLoader.className = progressLoaderClass;\n    });\n});","module.exports = {\n    template: require('./template.html'),\n    props: {\n        failure: Boolean,\n        username: String,\n        hint: String\n    },\n    data: function() {\n        return {\n            password: null\n        }\n    },\n    methods: {\n        submit: function (username, password) {\n            this.$dispatch('login-submit', username, password);\n        },\n        login: function (authenticate) {\n            return this.$promise(function (resolve) {\n                this.$on('login-submit', (function (username, password) {\n                    authenticate(username, password, (function (result) {\n                        if (result) {\n                            this.$remove().$destroy();\n                            resolve();\n                        } else {\n                            this.failure = true;\n                        }\n                    }).bind(this));\n                }).bind(this));\n            });\n        }\n    }\n};","module.exports = '<div class=\"panel panel-primary\">\\n    <div class=\"panel-heading\">\\n        <h3 class=\"panel-title\">{{t(\\'login.login\\')}}</h3>\\n    </div>\\n    <div v-if=\"hint\" class=\"panel-footer\">{{{hint}}}</div>\\n    <div class=\"panel-body\">\\n        <form v-on:submit.prevent=\"submit(username, password)\">\\n            <div v-if=\"failure\" class=\"alert alert-danger\" role=\"alert\">{{t(\\'login.failure\\')}}</div>\\n            <div class=\"form-group\">\\n                <input v-model=\"username\" type=\"text\" class=\"form-control\" id=\"loginUsername\" placeholder=\"{{t(\\'login.username\\')}}\">\\n            </div>\\n            <div class=\"form-group\">\\n                <!-- It\\'s not possible to get the password via javascript in chrome inside iframes (http://stackoverflow.com/a/38269071), so trick off auto complete -->\\n                <input type=\"password\" style=\"position:absolute;left:-200px;top:0;\" tabindex=\"-1\">\\n                <input v-model=\"password\" type=\"password\" class=\"form-control\" id=\"loginPassword\" placeholder=\"{{t(\\'login.password\\')}}\">\\n            </div>\\n            <button type=\"submit\" class=\"btn btn-default\">{{t(\\'login.login\\')}}</button>\\n        </form>\\n    </div>\\n</div>';","var Vue = require('vue');\n\nvar Item = require('../../../model/item');\n\nvar extend = require('extend');\n\nVue.http.interceptors.push(function(options, next) {\n    next(function(response) {\n        response.options = options;\n    });\n});\n\nvar UrlClass = function(url) {\n    this.raw = url;\n};\nUrlClass.prototype.toString = function () {\n    return encodeURIComponent(this.raw);\n};\n\nmodule.exports = {\n    template: '<div><tree :fetch=\"fetch\"></tree></div>',\n    props: {\n        config: {\n            type: Object,\n            required: true\n        },\n        fetch: Boolean,\n        storage: {\n            type: String,\n            required: true\n        }\n    },\n    data: function() {\n        return {\n            loginDone: false,\n            currentLogin: null,\n            appConfig: require('../../../config')\n        }\n    },\n    computed: {\n        proxy: function () {\n            if (this.config.proxy || this.appConfig.proxy.all && this.config.proxy !== false) {\n                return (typeof this.config.proxy === 'object' ? this.config : this.appConfig).proxy;\n            }\n            return false;\n        },\n        url: function () {\n            var proxyUrl, $proxy;\n            if (this.proxy) {\n                proxyUrl = this.proxy.url;\n                $proxy = new Vue({\n                    data: { url: null }\n                });\n            }\n            return function (url, base) {\n                if (base) {\n                    url = (base + '').replace(/\\/+$/, '') + '/' + (url + '').replace(/^\\/+/, '');\n                }\n                if ($proxy) {\n                    $proxy.url = new UrlClass(url);\n                    return $proxy.$interpolate(proxyUrl);\n                }\n                return url;\n            }\n        },\n        http: function() {\n            if (this.$options.http && typeof  this.$options.http === 'function') {\n                this.$options.http = this.$options.http.call(this);\n            }\n            var api = {},\n                config = require('../../../config'),\n                base = this.$options.http ? this.$options.http.base : null,\n                request = (function (options) {\n                    if (!options.keepUrl) {\n                        options.url = this.url(options.url, base);\n                        options.keepUrl = true;\n                    }\n                    if (this.proxy && this.proxy.credentials !== options.credentials) {\n                        options.credentials = this.proxy.credentials;\n                    }\n                    return this.$promise(function (resolve, reject) {\n                        this.$http(options).then(\n                            function(response) {\n                                if (response.options.validate) {\n                                    response.reload = function () {\n                                        return request(options).then(resolve, reject);\n                                    };\n                                    response.isValid = function (isValid) {\n                                        if (isValid === false) {\n                                            throw 'Invalid response';\n                                        } else {\n                                            resolve(response);\n                                        }\n                                    };\n                                    response.options.validate.call(this, response, resolve);\n                                } else {\n                                    resolve(response);\n                                }\n                            }.bind(this),\n                            reject\n                        );\n                    });\n                }).bind(this);\n\n            ['get', 'delete', 'head', 'jsonp'].forEach(function(method) {\n                api[method] = function (url, options) {\n                    options = extend({}, options);\n                    options.method = method.toUpperCase();\n                    options.url = url;\n                    return request(options);\n                }\n            });\n\n            ['post', 'put', 'patch'].forEach(function(method) {\n                api[method] = function (url, data, options) {\n                    options = extend({}, options);\n                    options.method = method.toUpperCase();\n                    options.url = url;\n                    options.body = data;\n                    return request(options);\n                }\n            });\n            return api;\n        }\n    },\n    methods: {\n        createItem: function (data) {\n            data.storage = this.storage;\n            return new Item(data);\n        },\n        login: function(authenticate) {\n            if (!this.currentLogin) {\n                if (this.loginDone) {\n                    throw 'Login already done';\n                }\n                var open = this.$parent.open;\n                this.$parent.open = true;\n                var Login = this.$options.components['login'];\n                var login = new Login({\n                    el: this.$el.appendChild(document.createElement('div')),\n                    parent: this\n                });\n                if (this.config.loginHint) {\n                    login.hint = this.config.loginHint;\n                }\n                this.currentLogin = login.login(authenticate.bind(this)).then((function () {\n                    this.loginDone = true;\n                    this.$parent.open = open;\n                }).bind(this));\n            }\n            return this.currentLogin;\n        }\n    },\n    components: {\n        login: require('../../login')\n    }\n};\n","var Item = require('../../../../model/item');\nvar Vue = require('vue');\n\nvar Terms = function () {\n    var terms = [{\n            field: 'id',\n            operator: 'matches',\n            value: '*'\n        }],\n        termsSet = false;\n    terms.hash = 'id matches \"*\"';\n    terms.push = function (field, operator, value) {\n        if (!termsSet) {\n            terms.pop();\n            termsSet = true;\n            terms.hash = '';\n        }\n        Array.prototype.push.call(terms, {field: field, operator: operator, value: value});\n        terms.hash += field + ' ' + operator + ' \"' + value + '\";';\n    };\n    return terms;\n};\n\nmodule.exports = {\n    template: require('./template.html'),\n    extends: require('../base'),\n    http: function() {\n        var options = {\n            base: this.config.url.replace(/\\/+$/, '') + '/mediadb/services',\n            validate: function (response) {\n                response.data = response.json();\n                if (response.data.response.status !== 'ok') {\n                    this.login(function(username, password, callback) {\n                        this.http.post('authentication/login', {id: username, password: password}, {validate: function (response) {\n                            response.data = response.json();\n                            response.isValid(response.data.response.status === 'ok');\n                        }}).then(\n                            function (response) {\n                                callback(response.data.results.status !== 'invalidlogin');\n                            }\n                        );\n                    }).then(response.reload);\n                } else {\n                    response.isValid();\n                }\n            }\n        };\n        return options;\n    },\n    data: function () {\n        return {\n            category: null,\n            search: null,\n            items: null,\n            results: {},\n            extensions: null\n        }\n    },\n    watch: {\n        'appConfig.pick': function (config) {\n            // Reload latest items when extensions have changed\n            var oldTerms = this.assembleTerms();\n            this.extensions = config.extensions;\n            var newTerms = this.assembleTerms();\n            if (oldTerms.hash !== newTerms.hash && this.results[oldTerms.hash]) {\n                var items = this.results[oldTerms.hash].items;\n                while (items.length > 0) {\n                    items.pop();\n                }\n                this.loadAssets(items);\n            }\n        }\n    },\n    methods: {\n        assembleTerms: function () {\n            var terms = new Terms();\n            if (this.category) {\n                terms.push('category', 'exact', this.category.id);\n            }\n            if (this.search) {\n                terms.push('description', 'freeform', this.search);\n            }\n            if (this.extensions && this.extensions.length) {\n                terms.push('fileformat', 'matches', this.extensions.join('|'))\n            }\n            return terms;\n        },\n        loadAssets: function (items) {\n            var terms = this.assembleTerms();\n            var result = this.results[terms.hash];\n            if (!result) {\n                result = {page: 0, pages: 0, items: items || []};\n                result.items.total = result.items.total || result.items.length;\n                this.results[terms.hash] = result;\n            } else if (result.page === result.pages) {\n                return this.$promise(function (resolve) {\n                    resolve(result);\n                });\n            }\n\n            result.items.loading = true;\n            result.items.hash = terms.hash;\n\n            return this.http.post(\n                'module/asset/search',\n                {\n                    page: '' + (result.page + 1),\n                    hitsperpage: '20',\n                    query: {\n                        terms: terms\n                    }\n                }\n            ).then((function(response) {\n                if (result.items.hash === terms.hash) {\n                    result.page = parseInt(response.data.response.page);\n                    result.pages = parseInt(response.data.response.pages);\n                    result.items.total = parseInt(response.data.response.totalhits);\n                    result.items.loading = false;\n                    response.data.results.forEach((function (asset) {\n                        var item = this.createItem({\n                            id: asset.id,\n                            type: asset.isfolder ? 'file' : 'dir',\n                            name: asset.primaryfile || asset.name,\n                            title: asset.assettitle,\n                            extension: asset.fileformat.id,\n                            thumbnail: this.url(\n                                '/emshare/views/modules/asset/downloads/preview/thumb/' +\n                                encodeURI(asset.sourcepath) + '/thumb.jpg',\n                                this.config.url\n                            )\n                        });\n                        result.items.push(item);\n                    }).bind(this));\n                }\n                return result;\n            }).bind(this));\n        }\n    },\n    events: {\n        'select-item': function (item) {\n            if (item === 'entrypoint') {\n                this.category = null;\n                this.search = null;\n                this.loadAssets().then((function(response) {\n                    this.items = response.items;\n                    this.$parent.$dispatch('select-item', this);\n                }).bind(this));\n            } else {\n                return true;\n            }\n        },\n        'load-more-items': function (results) {\n            this.loadAssets(results);\n        },\n        'search': function (sword, results) {\n            this.search = sword;\n            this.loadAssets(results);\n            return true;\n        },\n        'category-load-items': function (tree) {\n            this.http.post(\n                'lists/search/category',\n                {\n                    hitsperpage: '100',\n                    query: {\n                        terms: [\n                            {\n                                field: 'parentid',\n                                operator: 'exact',\n                                value: tree.item ? tree.item.id : 'index'\n                            }\n                        ]\n                    }\n                }\n            ).then(function (response) {\n                tree.items = response.data.results.map((function(category) {\n                    category.type = 'category';\n                    return this.createItem(category);\n                }).bind(this));\n            });\n        },\n        'category-select-item': function (tree) {\n            this.category = tree.item;\n            this.search = null;\n            this.loadAssets(tree.items).then(function (response) {\n                if (tree.selected) {\n                    this.$dispatch('select-item', tree);\n                }\n            }.bind(this));\n        }\n    }\n};\n","module.exports = '<div>\\n    <tree :fetch=\"fetch\" name=\"category\" :types=\"[\\'category\\']\"></tree>\\n</div>';","\nvar Config = require('../../../../config');\n\nvar token = Config.github.token || localStorage.getItem('github_token');\n\nmodule.exports = {\n    extends: require('../base'),\n    http: {\n        base: 'https://api.github.com'\n    },\n    events: {\n        'load-items': function (tree) {\n            if (token) {\n                this.http.get(\n                    'repos/' + this.config.username + '/' + this.config.repository + '/contents/' + (tree.item ? tree.item.id : ''),\n                    {\n                        headers: {\n                            Authorization: 'token ' + token\n                        }\n                    }\n                ).then(\n                    function(response) {\n                        var items = response.data.map((function (file) {\n                            file.id = file.path.replace(/^\\/+/, '');\n                            return this.createItem(file);\n                        }).bind(this));\n                        tree.items = items.sort(function (a, b) {\n                            if (a.type === 'dir' && b.type !== 'dir') {\n                                return -1;\n                            } else if (a.type !== 'dir' && b.type === 'dir') {\n                                return 1;\n                            }\n                            var nameA = a.name.toLowerCase(), nameB = b.name.toLowerCase();\n                            if (nameA < nameB)\n                                return -1;\n                            if (nameA > nameB)\n                                return 1;\n                            return 0;\n                        });\n                    },\n                    (function () {\n                        localStorage.removeItem('github_token');\n                        token = null;\n                        this.$dispatch('load-items', tree);\n                    }).bind(this)\n                );\n            } else {\n                this.createToken().then((function () {\n                    this.$dispatch('load-items', tree);\n                }).bind(this));\n            }\n        }\n    },\n    methods: {\n        createToken: function () {\n            return this.login(function (username, password, callback) {\n                var baseUrl = document.location.protocol + '//' + document.location.host,\n                    fingerprint = 'netresearch-assetpicker-github-' + baseUrl,\n                    options = {\n                        headers: {\n                            Authorization: 'Basic ' + btoa(username + ':' + password)\n                        }\n                    },\n                    createAuthorization = (function () {\n                        this.http.post(\n                            'authorizations',\n                            {\n                                note: 'Repository access for ' + this.t('header.title') + ' at ' + baseUrl,\n                                scopes: ['public_repo', 'repo'],\n                                fingerprint: fingerprint\n                            },\n                            options\n                        ).then(function (response) {\n                            token = response.data.token;\n                            localStorage.setItem('github_token', token);\n                            if (!token) {\n                                throw 'Could not find expected token';\n                            }\n                            callback(true);\n                        })\n                    }).bind(this);\n\n                this.http.get('authorizations', options).then(\n                    (function(response) {\n                        for (var i = 0, l = response.data.length; i < l; i++) {\n                            if (response.data[i].fingerprint === fingerprint) {\n                                this.http.delete('authorizations/' + response.data[i].id, options).then(createAuthorization);\n                                return;\n                            }\n                        }\n                        createAuthorization();\n                    }).bind(this),\n                    function () {\n                        callback(false);\n                    }\n                );\n            });\n        }\n    }\n};\n","var Vue = require('vue');\n\nmodule.exports = {\n    template: require('./template.html'),\n    props: {\n        storage: Object,\n        open: Boolean,\n        id: String\n    },\n    data: function () {\n        return {\n            items: null,\n            selection: require('../../model/selection'),\n            pick: require('../../model/pick'),\n            fetch: false\n        };\n    },\n    ready: function () {\n        if (this.open) {\n            this.$children[0].select();\n        }\n    },\n    events: {\n        'select-item': function(item) {\n            this.selection.search = null;\n            if (item instanceof Vue) {\n                // Triggered from sidebar\n                item.items.storage = this.id;\n                this.selection.items = item.items;\n                this.pick.candidate(item.item);\n            } else {\n                // Triggered from stage\n                if (item.storage === this.id) {\n                    this.open = true;\n                    this.$nextTick(function () {\n                        this.$broadcast('select-item', item);\n                    });\n                } else {\n                    this.$broadcast('deselect-items');\n                }\n            }\n        },\n        'load-more-items': function (results) {\n            if (results.storage === this.id) {\n                this.$broadcast('load-more-items', results);\n            }\n        }\n    },\n    watch: {\n        'selection.search': function (sword) {\n            if (sword) {\n                this.pick.candidate(null);\n                this.$broadcast('deselect-items');\n                this.$set('selection.results.' + this.id, []);\n                var results = this.$get('selection.results.' + this.id);\n                results.storage = this.id;\n                this.fetch = true;\n                this.$nextTick(function() {\n                    this.$broadcast('search', sword, results);\n                });\n            }\n        }\n    },\n    components: {\n        github: require('./adapter/github'),\n        entermediadb: require('./adapter/entermediadb')\n    }\n};\n","module.exports = '<tree :open=\"open\" :fetch=\"fetch\" :entry-point=\"storage.label || storage.adapter\">\\n    <div :is=\"storage.adapter\" :fetch=\"fetch\" :config=\"storage\" :storage=\"id\"></div>\\n</tree>\\n';","var Vue = require('vue');\nvar escapeRegExp = require('escape-string-regexp');\n\nvar selected;\n\nVue.component('tree', {\n    template: require('./tree.html'),\n    props: {\n        item: Object,\n        open: Boolean,\n        name: String,\n        selected: Boolean,\n        fetch: Boolean,\n        entryPoint: String,\n        main: Boolean,\n        types: {\n            type: Array,\n            default: function() {\n                return ['dir']\n            }\n        },\n        items: {\n            type: Array,\n            default: function () {\n                return [];\n            }\n        }\n    },\n    data: function () {\n        return {\n            search: this.$parent.search || {\n                sword: null,\n                results: null\n            }\n        }\n    },\n    computed: {\n        prefix: function () {\n            return this.name ? this.name + '-' : '';\n        }\n    },\n    created: function () {\n        if (!this.entryPoint) {\n            this.$dispatch(this.prefix + 'load-items', this);\n        }\n    },\n    events: {\n        'search': function (sword, results) {\n            this.search.sword = sword;\n            this.search.results = results;\n            this.doSearch();\n            return true;\n        },\n        'select-item': function (item) {\n            if (item instanceof Vue) {\n                if (item.entryPoint) {\n                    this.$nextTick(function () {\n                        this.$broadcast('select-item', 'entrypoint');\n                    });\n                    return false;\n                }\n                item = item.item;\n                if (!item) {\n                    return true;\n                }\n            }\n            if (item === 'entrypoint' && !this.item && !this.entryPoint) {\n                this.select(false);\n                return false;\n            }\n            if (item && this.item && item.id === this.item.id || this.entryPoint && !item.id) {\n                this.select();\n                return false;\n            } else if (item) {\n                for (var i = 0, l = this.items.length; i < l; i++) {\n                    if (this.items[i].id === item.id) {\n                        if (!this.open && !this.entryPoint) {\n                            this.open = true;\n                            this.$nextTick(function () {\n                                this.$broadcast('select-item', item);\n                            });\n                            return false;\n                        }\n                        break;\n                    }\n                }\n            }\n            return true;\n        },\n        '_open': function () {\n            this.open = true;\n            return true;\n        },\n        'deselect-items': function () {\n            this.selected = false;\n            return true;\n        }\n    },\n    methods: {\n        doSearch: function () {\n            if (this.search.sword) {\n                var regex = new RegExp(escapeRegExp(this.search.sword), 'i');\n                for (var i = 0, l = this.items.length; i < l ; i++) {\n                    if (regex.test(this.items[i].name)) {\n                        this.search.results.push(this.items[i]);\n                    }\n                }\n            }\n        },\n        select: function (doSwitch) {\n            if (doSwitch !== false) {\n                if (selected && selected !== this) {\n                    selected.selected = false;\n                }\n                selected = this;\n            }\n            this.selected = true;\n            (this.entryPoint ? this : this.$parent).$dispatch(this.prefix + 'select-item', this);\n            this.$parent.$dispatch('_open');\n        }\n    },\n    watch: {\n        items: function (items) {\n            if (this.selected) {\n                this.$nextTick(function () {\n                    this.$parent.$dispatch(this.prefix + 'select-item', this);\n                });\n            }\n            this.$nextTick(function () {\n                this.doSearch();\n            })\n        }\n    },\n    components: []\n});\n","module.exports = '<template v-if=\"entryPoint\">\\n    <ul class=\"tree storage\">\\n        <li>\\n            <span class=\"glyphicon glyphicon glyphicon-triangle-{{open ? \\'bottom\\' : \\'right\\'}}\" v-on:click=\"open = !open\"></span>\\n            <span class=\"item{{selected ? \\' selected\\' : \\'\\'}}\" v-on:click=\"select\">\\n            <span class=\"glyphicon glyphicon-folder-close\"></span> {{entryPoint}}</span>\\n            <div v-show=\"open\">\\n                <slot v-if=\"open || selected || fetch\">\\n                    <tree :name=\"name\" :fetch=\"fetch\"></tree>\\n                </slot>\\n            </div>\\n        </li>\\n    </ul>\\n</template>\\n<template v-else>\\n    <template v-if=\"item\">\\n        <span v-if=\"items && items.filterBy(\\'type\\', types).length\" class=\"glyphicon glyphicon glyphicon-triangle-{{open ? \\'bottom\\' : \\'right\\'}}\" v-on:click=\"open = !open\"></span>\\n        <span class=\"item{{selected ? \\' selected\\' : \\'\\'}}\" v-on:click=\"select\">\\n        <span class=\"glyphicon glyphicon-folder-close\"></span>\\n            {{item.name}}\\n        </span>\\n    </template>\\n    <div v-show=\"open || !item\">\\n        <ul v-if=\"open || !item || fetch\" class=\"{{item ? \\'\\' : \\'tree\\'}}\">\\n            <li v-for=\"item in items.filterBy(\\'type\\', types)\">\\n                <tree :item=\"item\" :name=\"name\" :fetch=\"fetch\" :types=\"types\"></tree>\\n            </li>\\n        </ul>\\n    </div>\\n</template>';","module.exports = {\n    title: 'AssetPicker',\n    storages: {\n        /* entermediaDB: {\n            adapter: 'entermediadb',\n            url: 'http://em9.entermediadb.org/openinstitute',\n            proxy: true\n        },\n        github: {\n            adapter: 'github',\n            username: 'netresearch',\n            repository: 'assetpicker'\n        } */\n    },\n    proxy: {\n        url: 'proxy.php?to={{url}}',\n        all: false\n    },\n    github: {\n        //token: 'j2332dwedcdj33dx3jm8389xdq'\n    },\n    pick: {\n        limit: 1,\n        types: ['file'],\n        extensions: []\n    },\n    language: 'auto'\n};\n","var Vue = require('vue');\nVue.config.debug = true;\nVue.use(require('vue-resource'));\n\nvar i18nMixin = require('vue-i18n-mixin');\ni18nMixin.methods.t = i18nMixin.methods.translate;\n\nVue.mixin(i18nMixin);\n\nrequire('./util');\nrequire('./components/tree');\nrequire('./components/loader');\n\nvar messaging;\nvar config = require('./config');\n\nif (window.parent && window.parent !== window) {\n    var Messaging = require('../shared/util/messaging');\n    messaging = new Messaging('*', window.parent);\n    messaging.call('picker.getConfig').then(function(configOverride) {\n        require('extend')(true, config, configOverride);\n        create();\n    });\n} else {\n    config.storages = {\n        entermediaDB: {\n            label: 'EnterMediaDB',\n            loginHint: 'Username: admin<br>Password: admin',\n            adapter: 'entermediadb',\n            url: 'http://em9.entermediadb.org/openinstitute',\n            proxy: true\n        },\n        github: {\n            adapter: 'github',\n            username: 'netresearch',\n            repository: 'assetpicker'\n        }\n    };\n    create();\n}\n\nfunction create() {\n    new Vue({\n        el: '#app',\n        data: function () {\n            return {\n                locale: (function () {\n                    var lang, available = ['en', 'de'];\n                    if (config.language === 'auto') {\n                        lang = (navigator.language || navigator.userLanguage).replace(/^([a-z][a-z]).+$/, '$1');\n                    } else {\n                        lang = config.language;\n                    }\n                    if (available.indexOf(lang) < 0) {\n                        lang = available[0];\n                        if (config.language !== 'auto') {\n                            console.warn('Configured language %s is not available', config.language);\n                        }\n                    }\n                    return lang;\n                })(),\n                config: config,\n                picked: require('./model/pick'),\n                selection: require('./model/selection'),\n                numStorages: Object.keys(config.storages).length,\n                maximized: false\n            }\n        },\n        translations: require('./locales'),\n        components: {\n            storage: require('./components/storage'),\n            'items': require('./components/items'),\n            handle: require('./components/handle')\n        },\n        created: function () {\n            if (messaging) {\n                messaging.registerServer('app', this);\n                messaging.call('picker._trigger', 'ready');\n            }\n        },\n        ready: function () {\n            this.$el.className += (this.$el.className ? ' ' : '') + 'loaded';\n        },\n        events: {\n            'finish-pick': function () {\n                this.pick();\n            }\n        },\n        watch: {\n            maximized: function (maximized) {\n                this.callPicker('picker._trigger', 'resize', maximized);\n            }\n        },\n        methods: {\n            setPickConfig: function (config) {\n                this.config.pick = config;\n            },\n            callPicker: function(method) {\n                if (messaging) {\n                    messaging.call.apply(messaging, arguments);\n                }\n            },\n            cancel: function() {\n                this.picked.clear();\n                this.callPicker('picker.modal.close');\n            },\n            pick: function() {\n                this.callPicker('picker.pick', this.picked.export());\n                this.picked.clear();\n            }\n        }\n    });\n}\n","module.exports = {\n    header: {\n        title: {\n            en: 'Explorer',\n            de: 'Explorer'\n        },\n        search: {\n            en: 'Search',\n            de: 'Suchen'\n        },\n        minimize: {\n            en: 'Minimize',\n            de: 'Verkleinern'\n        },\n        maximize: {\n            en: 'Maximize',\n            de: 'Maximieren'\n        }\n    },\n    login: {\n        username: {\n            en: 'User name',\n            de: 'Benutzername'\n        },\n        password: {\n            en: 'Password',\n            de: 'Passwort'\n        },\n        login: {\n            en: 'Login',\n            de: 'Anmelden'\n        },\n        failure: {\n            en: 'Your username or password were wrong',\n            de: 'Benutzername oder Passwort sind falsch'\n        }\n    },\n    types: {\n        file: {\n            en: 'File',\n            de: 'Datei'\n        },\n        dir: {\n            en: 'Directory',\n            de: 'Verzeichnis'\n        },\n        category: {\n            en: 'Category',\n            de: 'Kategorie'\n        }\n    },\n    adapters: {\n        github: {\n            en: 'Repository {{config.username}}/{{config.repository}} on GitHub',\n            de: 'Repository {{config.username}}/{{config.repository}} auf GitHub'\n        },\n        entermediadb: {\n            en: 'EnterMediaDB on {{config.url}}',\n            de: 'EnterMediaDB auf {{config.url}}'\n        }\n    },\n    footer: {\n        pick: {\n            en: 'Select',\n            de: 'Auswählen'\n        },\n        cancel: {\n            en: 'Cancel',\n            de: 'Abbrechen'\n        }\n    }\n};\n","module.exports = function (data) {\n    if (typeof data === 'function') {\n        data = data();\n    }\n    if (!data.id) {\n        throw 'Item requires an ID';\n    }\n    if (!data.storage) {\n        throw 'Item requires the storage ID';\n    }\n    return item = {\n        id: data.id,\n        storage: data.storage,\n        name: data.name,\n        type: data.type,\n        extension: data.extension || (data.name.match(/\\.([0-9a-z]+)$/i) || []).pop(),\n        thumbnail: data.thumbnail\n    };\n};\n","var pick = [], candidate;\nvar config = require('../config');\n\npick.isAllowed = function (item) {\n    var conf = config.pick;\n    return conf.types.indexOf(item.type) > -1 && (!conf.extensions || !conf.extensions.length || conf.extensions.indexOf(item.extension) > -1);\n};\npick.contains = function (item) {\n    for (var i = 0, l = pick.length; i < l; i++) {\n        if (pick[i].id === item.id && pick[i].storage === item.storage) {\n            return true;\n        }\n    }\n};\npick.candidate = function (item) {\n    if (item) {\n        this.add(item);\n    }\n    candidate = item;\n};\npick.toggle = function (item) {\n    if (this.contains(item)) {\n        this.remove(item);\n    } else {\n        this.add(item);\n    }\n};\npick.add = function (item) {\n    if (!this.contains(item) && this.isAllowed(item)) {\n        if (candidate && item !== candidate && this.contains(candidate)) {\n            this.remove(candidate);\n        }\n        while (config.pick.limit && this.length >= config.pick.limit) {\n            this.shift();\n        }\n        this.push(item);\n    }\n};\npick.remove = function (item) {\n    for (var i = 0, l = this.length; i < l; i++) {\n        var next = this.shift();\n        if (next.id !== item.id || next.storage !== item.storage) {\n            pick.push(next);\n        }\n    }\n    if (!pick.length && candidate && item !== candidate && this.isAllowed(candidate)) {\n        this.push(candidate);\n    }\n};\npick.clear = function () {\n    while (this.length) {\n        this.pop();\n    }\n};\npick.export = function () {\n    return config.pick.limit === 1 ? this[0] : this.slice(0);\n};\n\nmodule.exports = pick;","module.exports = {\n    storage: null,\n    search: null,\n    items: [],\n    results: {}\n};","var Vue = require('vue');\nVue.filter('encodeURI', function(data) {\n    return encodeURI(data);\n});\nVue.filter('encodeURIComponent', function(data) {\n    return encodeURIComponent(data);\n});\n\nArray.prototype.filterBy = function (key, value) {\n    var values = value.indexOf ? value : [value];\n    return this.filter(function(arrayValue) {\n        if (typeof arrayValue === \"object\") {\n            return values.indexOf(arrayValue[key]) > -1;\n        }\n        return false;\n    });\n};\n\nvar params;\n\nwindow.getParams = function () {\n    if (params === undefined) {\n        params = {};\n        var query = window.location.search.substring(1);\n        var vars = query.split('&');\n        for (var i = 0; i < vars.length; i++) {\n            var pair = vars[i].split('=');\n            params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n        }\n    }\n    return params;\n};\nwindow.getParam = function (name) {\n    return window.getParams()[name];\n};","module.exports = function(protoProps) {\n    var result = function () {\n        if (this.construct) {\n            this.construct.apply(this, arguments);\n        }\n    };\n\n    result.prototype = result;\n    Object.keys(protoProps).forEach(function(key) {\n        result.prototype[key] = protoProps[key];\n    });\n\n    return result;\n};\n","var uid = require('./uid');\n\nmodule.exports = require('./createClass')({\n    construct: function(origin, windowObject) {\n        var eventMethod = window.addEventListener ? \"addEventListener\" : \"attachEvent\";\n        var eventer = window[eventMethod];\n        var messageEvent = eventMethod == \"attachEvent\" ? \"onmessage\" : \"message\";\n        eventer(messageEvent, function(e) {\n            var origin = e.origin || e.originalEvent.origin;\n            if (e.source === this.window && origin === this.origin || this.origin === '*') {\n                this.handle(e.data);\n            }\n        }.bind(this), false);\n\n        this.origin = origin;\n        this.window = windowObject;\n        this.servers = {};\n        this._handlers = {};\n    },\n    registerServer: function (name, object) {\n        this.servers[name] = object;\n    },\n    _createHandler: function() {\n        var handler = { callbacks: [] };\n        handler.then = function (callback) {\n            if (handler.hasOwnProperty('_result')) {\n                callback(handler._result);\n            } else {\n                handler.callbacks.push(callback);\n            }\n            return handler;\n        };\n        return handler;\n    },\n    call: function(method) {\n        var arguments = Array.prototype.slice.call(arguments, 1);\n        var id = uid(), handler = this._createHandler();\n        this._handlers[id] = handler;\n        this.window.postMessage({id: id, method: method, arguments: arguments}, this.origin);\n        return handler;\n    },\n    handle: function(message) {\n        if (message.method === 'resolve') {\n            if (this._handlers[message.id]) {\n                var handler = this._handlers[message.id];\n                for (var i = 0, l = handler.callbacks.length; i < l; i++) {\n                    handler.callbacks[i](message.result);\n                }\n                handler._result = message.result;\n                delete this._handlers[message.id];\n            }\n        } else {\n            var methodPath = message.method.split('.');\n            var method = methodPath.pop();\n            var target = this.servers;\n            while (target && methodPath.length) {\n                target = target[methodPath.shift()];\n            }\n            if (!target || !target[method]) {\n                throw 'Unknown method \"' + message.method + '\"';\n            }\n            var result = target[method].apply(target, message.arguments);\n            var resolve = function(res) {\n                // It might occure, that the id is reset, when the target frame is removed\n                if (message.id) {\n                    this.window.postMessage({method: 'resolve', id: message.id, result: res}, this.origin);\n                }\n            }.bind(this);\n            if (typeof result === 'function') {\n                result(resolve);\n            } else {\n                resolve(result);\n            }\n        }\n    }\n});\n","module.exports = function uid () {\n    return '' + Math.random().toString(36).substr(2, 9);\n};\n"],"sourceRoot":"/source/"}